
#ifndef DAWNNATIVE_DAWN_PLATFORM_AUTOGEN_H_
#define DAWNNATIVE_DAWN_PLATFORM_AUTOGEN_H_

#include "dawn/webgpu_cpp.h"
#include "dawn/native/Forward.h"

// Use our autogenerated version of the wgpu structures that point to dawn::native object types
// (wgpu::Buffer is dawn::native::BufferBase*)
#include <dawn/native/wgpu_structs_autogen.h>


namespace dawn::native {

    inline const WGPUChainedStruct* ToAPI(const ChainedStruct* rhs) {
        return reinterpret_cast<const WGPUChainedStruct*>(rhs);
    }
    inline WGPUChainedStruct* ToAPI(ChainedStruct* rhs) {
        return reinterpret_cast<WGPUChainedStruct*>(rhs);
    }
    inline const ChainedStruct* FromAPI(const WGPUChainedStruct* rhs) {
        return reinterpret_cast<const ChainedStruct*>(rhs);
    }
    inline ChainedStruct* FromAPI(WGPUChainedStruct* rhs) {
        return reinterpret_cast<ChainedStruct*>(rhs);
    }
    inline const wgpu::ChainedStruct* ToCppAPI(const ChainedStruct* rhs) {
        return reinterpret_cast<const wgpu::ChainedStruct*>(rhs);
    }
    inline wgpu::ChainedStruct* ToCppAPI(ChainedStruct* rhs) {
        return reinterpret_cast<wgpu::ChainedStruct*>(rhs);
    }
    inline const ChainedStruct* FromCppAPI(const wgpu::ChainedStruct* rhs) {
        return reinterpret_cast<const ChainedStruct*>(rhs);
    }
    inline ChainedStruct* FromCppAPI(wgpu::ChainedStruct* rhs) {
        return reinterpret_cast<ChainedStruct*>(rhs);
    }

    inline const WGPUAdapterInfo* ToAPI(const AdapterInfo* rhs) {
        return reinterpret_cast<const WGPUAdapterInfo*>(rhs);
    }
    inline WGPUAdapterInfo* ToAPI(AdapterInfo* rhs) {
        return reinterpret_cast<WGPUAdapterInfo*>(rhs);
    }
    inline const AdapterInfo* FromAPI(const WGPUAdapterInfo* rhs) {
        return reinterpret_cast<const AdapterInfo*>(rhs);
    }
    inline AdapterInfo* FromAPI(WGPUAdapterInfo* rhs) {
        return reinterpret_cast<AdapterInfo*>(rhs);
    }
    inline const wgpu::AdapterInfo* ToCppAPI(const AdapterInfo* rhs) {
        return reinterpret_cast<const wgpu::AdapterInfo*>(rhs);
    }
    inline wgpu::AdapterInfo* ToCppAPI(AdapterInfo* rhs) {
        return reinterpret_cast<wgpu::AdapterInfo*>(rhs);
    }
    inline const AdapterInfo* FromCppAPI(const wgpu::AdapterInfo* rhs) {
        return reinterpret_cast<const AdapterInfo*>(rhs);
    }
    inline AdapterInfo* FromCppAPI(wgpu::AdapterInfo* rhs) {
        return reinterpret_cast<AdapterInfo*>(rhs);
    }

    inline const WGPUAdapterProperties* ToAPI(const AdapterProperties* rhs) {
        return reinterpret_cast<const WGPUAdapterProperties*>(rhs);
    }
    inline WGPUAdapterProperties* ToAPI(AdapterProperties* rhs) {
        return reinterpret_cast<WGPUAdapterProperties*>(rhs);
    }
    inline const AdapterProperties* FromAPI(const WGPUAdapterProperties* rhs) {
        return reinterpret_cast<const AdapterProperties*>(rhs);
    }
    inline AdapterProperties* FromAPI(WGPUAdapterProperties* rhs) {
        return reinterpret_cast<AdapterProperties*>(rhs);
    }
    inline const wgpu::AdapterProperties* ToCppAPI(const AdapterProperties* rhs) {
        return reinterpret_cast<const wgpu::AdapterProperties*>(rhs);
    }
    inline wgpu::AdapterProperties* ToCppAPI(AdapterProperties* rhs) {
        return reinterpret_cast<wgpu::AdapterProperties*>(rhs);
    }
    inline const AdapterProperties* FromCppAPI(const wgpu::AdapterProperties* rhs) {
        return reinterpret_cast<const AdapterProperties*>(rhs);
    }
    inline AdapterProperties* FromCppAPI(wgpu::AdapterProperties* rhs) {
        return reinterpret_cast<AdapterProperties*>(rhs);
    }

    inline const WGPUAdapterPropertiesD3D* ToAPI(const AdapterPropertiesD3D* rhs) {
        return reinterpret_cast<const WGPUAdapterPropertiesD3D*>(rhs);
    }
    inline WGPUAdapterPropertiesD3D* ToAPI(AdapterPropertiesD3D* rhs) {
        return reinterpret_cast<WGPUAdapterPropertiesD3D*>(rhs);
    }
    inline const AdapterPropertiesD3D* FromAPI(const WGPUAdapterPropertiesD3D* rhs) {
        return reinterpret_cast<const AdapterPropertiesD3D*>(rhs);
    }
    inline AdapterPropertiesD3D* FromAPI(WGPUAdapterPropertiesD3D* rhs) {
        return reinterpret_cast<AdapterPropertiesD3D*>(rhs);
    }
    inline const wgpu::AdapterPropertiesD3D* ToCppAPI(const AdapterPropertiesD3D* rhs) {
        return reinterpret_cast<const wgpu::AdapterPropertiesD3D*>(rhs);
    }
    inline wgpu::AdapterPropertiesD3D* ToCppAPI(AdapterPropertiesD3D* rhs) {
        return reinterpret_cast<wgpu::AdapterPropertiesD3D*>(rhs);
    }
    inline const AdapterPropertiesD3D* FromCppAPI(const wgpu::AdapterPropertiesD3D* rhs) {
        return reinterpret_cast<const AdapterPropertiesD3D*>(rhs);
    }
    inline AdapterPropertiesD3D* FromCppAPI(wgpu::AdapterPropertiesD3D* rhs) {
        return reinterpret_cast<AdapterPropertiesD3D*>(rhs);
    }

    inline const WGPUAdapterPropertiesVk* ToAPI(const AdapterPropertiesVk* rhs) {
        return reinterpret_cast<const WGPUAdapterPropertiesVk*>(rhs);
    }
    inline WGPUAdapterPropertiesVk* ToAPI(AdapterPropertiesVk* rhs) {
        return reinterpret_cast<WGPUAdapterPropertiesVk*>(rhs);
    }
    inline const AdapterPropertiesVk* FromAPI(const WGPUAdapterPropertiesVk* rhs) {
        return reinterpret_cast<const AdapterPropertiesVk*>(rhs);
    }
    inline AdapterPropertiesVk* FromAPI(WGPUAdapterPropertiesVk* rhs) {
        return reinterpret_cast<AdapterPropertiesVk*>(rhs);
    }
    inline const wgpu::AdapterPropertiesVk* ToCppAPI(const AdapterPropertiesVk* rhs) {
        return reinterpret_cast<const wgpu::AdapterPropertiesVk*>(rhs);
    }
    inline wgpu::AdapterPropertiesVk* ToCppAPI(AdapterPropertiesVk* rhs) {
        return reinterpret_cast<wgpu::AdapterPropertiesVk*>(rhs);
    }
    inline const AdapterPropertiesVk* FromCppAPI(const wgpu::AdapterPropertiesVk* rhs) {
        return reinterpret_cast<const AdapterPropertiesVk*>(rhs);
    }
    inline AdapterPropertiesVk* FromCppAPI(wgpu::AdapterPropertiesVk* rhs) {
        return reinterpret_cast<AdapterPropertiesVk*>(rhs);
    }

    inline const WGPUBindGroupEntry* ToAPI(const BindGroupEntry* rhs) {
        return reinterpret_cast<const WGPUBindGroupEntry*>(rhs);
    }
    inline WGPUBindGroupEntry* ToAPI(BindGroupEntry* rhs) {
        return reinterpret_cast<WGPUBindGroupEntry*>(rhs);
    }
    inline const BindGroupEntry* FromAPI(const WGPUBindGroupEntry* rhs) {
        return reinterpret_cast<const BindGroupEntry*>(rhs);
    }
    inline BindGroupEntry* FromAPI(WGPUBindGroupEntry* rhs) {
        return reinterpret_cast<BindGroupEntry*>(rhs);
    }
    inline const wgpu::BindGroupEntry* ToCppAPI(const BindGroupEntry* rhs) {
        return reinterpret_cast<const wgpu::BindGroupEntry*>(rhs);
    }
    inline wgpu::BindGroupEntry* ToCppAPI(BindGroupEntry* rhs) {
        return reinterpret_cast<wgpu::BindGroupEntry*>(rhs);
    }
    inline const BindGroupEntry* FromCppAPI(const wgpu::BindGroupEntry* rhs) {
        return reinterpret_cast<const BindGroupEntry*>(rhs);
    }
    inline BindGroupEntry* FromCppAPI(wgpu::BindGroupEntry* rhs) {
        return reinterpret_cast<BindGroupEntry*>(rhs);
    }

    inline const WGPUBlendComponent* ToAPI(const BlendComponent* rhs) {
        return reinterpret_cast<const WGPUBlendComponent*>(rhs);
    }
    inline WGPUBlendComponent* ToAPI(BlendComponent* rhs) {
        return reinterpret_cast<WGPUBlendComponent*>(rhs);
    }
    inline const BlendComponent* FromAPI(const WGPUBlendComponent* rhs) {
        return reinterpret_cast<const BlendComponent*>(rhs);
    }
    inline BlendComponent* FromAPI(WGPUBlendComponent* rhs) {
        return reinterpret_cast<BlendComponent*>(rhs);
    }
    inline const wgpu::BlendComponent* ToCppAPI(const BlendComponent* rhs) {
        return reinterpret_cast<const wgpu::BlendComponent*>(rhs);
    }
    inline wgpu::BlendComponent* ToCppAPI(BlendComponent* rhs) {
        return reinterpret_cast<wgpu::BlendComponent*>(rhs);
    }
    inline const BlendComponent* FromCppAPI(const wgpu::BlendComponent* rhs) {
        return reinterpret_cast<const BlendComponent*>(rhs);
    }
    inline BlendComponent* FromCppAPI(wgpu::BlendComponent* rhs) {
        return reinterpret_cast<BlendComponent*>(rhs);
    }

    inline const WGPUBufferBindingLayout* ToAPI(const BufferBindingLayout* rhs) {
        return reinterpret_cast<const WGPUBufferBindingLayout*>(rhs);
    }
    inline WGPUBufferBindingLayout* ToAPI(BufferBindingLayout* rhs) {
        return reinterpret_cast<WGPUBufferBindingLayout*>(rhs);
    }
    inline const BufferBindingLayout* FromAPI(const WGPUBufferBindingLayout* rhs) {
        return reinterpret_cast<const BufferBindingLayout*>(rhs);
    }
    inline BufferBindingLayout* FromAPI(WGPUBufferBindingLayout* rhs) {
        return reinterpret_cast<BufferBindingLayout*>(rhs);
    }
    inline const wgpu::BufferBindingLayout* ToCppAPI(const BufferBindingLayout* rhs) {
        return reinterpret_cast<const wgpu::BufferBindingLayout*>(rhs);
    }
    inline wgpu::BufferBindingLayout* ToCppAPI(BufferBindingLayout* rhs) {
        return reinterpret_cast<wgpu::BufferBindingLayout*>(rhs);
    }
    inline const BufferBindingLayout* FromCppAPI(const wgpu::BufferBindingLayout* rhs) {
        return reinterpret_cast<const BufferBindingLayout*>(rhs);
    }
    inline BufferBindingLayout* FromCppAPI(wgpu::BufferBindingLayout* rhs) {
        return reinterpret_cast<BufferBindingLayout*>(rhs);
    }

    inline const WGPUBufferDescriptor* ToAPI(const BufferDescriptor* rhs) {
        return reinterpret_cast<const WGPUBufferDescriptor*>(rhs);
    }
    inline WGPUBufferDescriptor* ToAPI(BufferDescriptor* rhs) {
        return reinterpret_cast<WGPUBufferDescriptor*>(rhs);
    }
    inline const BufferDescriptor* FromAPI(const WGPUBufferDescriptor* rhs) {
        return reinterpret_cast<const BufferDescriptor*>(rhs);
    }
    inline BufferDescriptor* FromAPI(WGPUBufferDescriptor* rhs) {
        return reinterpret_cast<BufferDescriptor*>(rhs);
    }
    inline const wgpu::BufferDescriptor* ToCppAPI(const BufferDescriptor* rhs) {
        return reinterpret_cast<const wgpu::BufferDescriptor*>(rhs);
    }
    inline wgpu::BufferDescriptor* ToCppAPI(BufferDescriptor* rhs) {
        return reinterpret_cast<wgpu::BufferDescriptor*>(rhs);
    }
    inline const BufferDescriptor* FromCppAPI(const wgpu::BufferDescriptor* rhs) {
        return reinterpret_cast<const BufferDescriptor*>(rhs);
    }
    inline BufferDescriptor* FromCppAPI(wgpu::BufferDescriptor* rhs) {
        return reinterpret_cast<BufferDescriptor*>(rhs);
    }

    inline const WGPUBufferHostMappedPointer* ToAPI(const BufferHostMappedPointer* rhs) {
        return reinterpret_cast<const WGPUBufferHostMappedPointer*>(rhs);
    }
    inline WGPUBufferHostMappedPointer* ToAPI(BufferHostMappedPointer* rhs) {
        return reinterpret_cast<WGPUBufferHostMappedPointer*>(rhs);
    }
    inline const BufferHostMappedPointer* FromAPI(const WGPUBufferHostMappedPointer* rhs) {
        return reinterpret_cast<const BufferHostMappedPointer*>(rhs);
    }
    inline BufferHostMappedPointer* FromAPI(WGPUBufferHostMappedPointer* rhs) {
        return reinterpret_cast<BufferHostMappedPointer*>(rhs);
    }
    inline const wgpu::BufferHostMappedPointer* ToCppAPI(const BufferHostMappedPointer* rhs) {
        return reinterpret_cast<const wgpu::BufferHostMappedPointer*>(rhs);
    }
    inline wgpu::BufferHostMappedPointer* ToCppAPI(BufferHostMappedPointer* rhs) {
        return reinterpret_cast<wgpu::BufferHostMappedPointer*>(rhs);
    }
    inline const BufferHostMappedPointer* FromCppAPI(const wgpu::BufferHostMappedPointer* rhs) {
        return reinterpret_cast<const BufferHostMappedPointer*>(rhs);
    }
    inline BufferHostMappedPointer* FromCppAPI(wgpu::BufferHostMappedPointer* rhs) {
        return reinterpret_cast<BufferHostMappedPointer*>(rhs);
    }

    inline const WGPUBufferMapCallbackInfo* ToAPI(const BufferMapCallbackInfo* rhs) {
        return reinterpret_cast<const WGPUBufferMapCallbackInfo*>(rhs);
    }
    inline WGPUBufferMapCallbackInfo* ToAPI(BufferMapCallbackInfo* rhs) {
        return reinterpret_cast<WGPUBufferMapCallbackInfo*>(rhs);
    }
    inline const BufferMapCallbackInfo* FromAPI(const WGPUBufferMapCallbackInfo* rhs) {
        return reinterpret_cast<const BufferMapCallbackInfo*>(rhs);
    }
    inline BufferMapCallbackInfo* FromAPI(WGPUBufferMapCallbackInfo* rhs) {
        return reinterpret_cast<BufferMapCallbackInfo*>(rhs);
    }
    inline const wgpu::BufferMapCallbackInfo* ToCppAPI(const BufferMapCallbackInfo* rhs) {
        return reinterpret_cast<const wgpu::BufferMapCallbackInfo*>(rhs);
    }
    inline wgpu::BufferMapCallbackInfo* ToCppAPI(BufferMapCallbackInfo* rhs) {
        return reinterpret_cast<wgpu::BufferMapCallbackInfo*>(rhs);
    }
    inline const BufferMapCallbackInfo* FromCppAPI(const wgpu::BufferMapCallbackInfo* rhs) {
        return reinterpret_cast<const BufferMapCallbackInfo*>(rhs);
    }
    inline BufferMapCallbackInfo* FromCppAPI(wgpu::BufferMapCallbackInfo* rhs) {
        return reinterpret_cast<BufferMapCallbackInfo*>(rhs);
    }

    inline const WGPUColor* ToAPI(const Color* rhs) {
        return reinterpret_cast<const WGPUColor*>(rhs);
    }
    inline WGPUColor* ToAPI(Color* rhs) {
        return reinterpret_cast<WGPUColor*>(rhs);
    }
    inline const Color* FromAPI(const WGPUColor* rhs) {
        return reinterpret_cast<const Color*>(rhs);
    }
    inline Color* FromAPI(WGPUColor* rhs) {
        return reinterpret_cast<Color*>(rhs);
    }
    inline const wgpu::Color* ToCppAPI(const Color* rhs) {
        return reinterpret_cast<const wgpu::Color*>(rhs);
    }
    inline wgpu::Color* ToCppAPI(Color* rhs) {
        return reinterpret_cast<wgpu::Color*>(rhs);
    }
    inline const Color* FromCppAPI(const wgpu::Color* rhs) {
        return reinterpret_cast<const Color*>(rhs);
    }
    inline Color* FromCppAPI(wgpu::Color* rhs) {
        return reinterpret_cast<Color*>(rhs);
    }

    inline const WGPUColorTargetStateExpandResolveTextureDawn* ToAPI(const ColorTargetStateExpandResolveTextureDawn* rhs) {
        return reinterpret_cast<const WGPUColorTargetStateExpandResolveTextureDawn*>(rhs);
    }
    inline WGPUColorTargetStateExpandResolveTextureDawn* ToAPI(ColorTargetStateExpandResolveTextureDawn* rhs) {
        return reinterpret_cast<WGPUColorTargetStateExpandResolveTextureDawn*>(rhs);
    }
    inline const ColorTargetStateExpandResolveTextureDawn* FromAPI(const WGPUColorTargetStateExpandResolveTextureDawn* rhs) {
        return reinterpret_cast<const ColorTargetStateExpandResolveTextureDawn*>(rhs);
    }
    inline ColorTargetStateExpandResolveTextureDawn* FromAPI(WGPUColorTargetStateExpandResolveTextureDawn* rhs) {
        return reinterpret_cast<ColorTargetStateExpandResolveTextureDawn*>(rhs);
    }
    inline const wgpu::ColorTargetStateExpandResolveTextureDawn* ToCppAPI(const ColorTargetStateExpandResolveTextureDawn* rhs) {
        return reinterpret_cast<const wgpu::ColorTargetStateExpandResolveTextureDawn*>(rhs);
    }
    inline wgpu::ColorTargetStateExpandResolveTextureDawn* ToCppAPI(ColorTargetStateExpandResolveTextureDawn* rhs) {
        return reinterpret_cast<wgpu::ColorTargetStateExpandResolveTextureDawn*>(rhs);
    }
    inline const ColorTargetStateExpandResolveTextureDawn* FromCppAPI(const wgpu::ColorTargetStateExpandResolveTextureDawn* rhs) {
        return reinterpret_cast<const ColorTargetStateExpandResolveTextureDawn*>(rhs);
    }
    inline ColorTargetStateExpandResolveTextureDawn* FromCppAPI(wgpu::ColorTargetStateExpandResolveTextureDawn* rhs) {
        return reinterpret_cast<ColorTargetStateExpandResolveTextureDawn*>(rhs);
    }

    inline const WGPUCommandBufferDescriptor* ToAPI(const CommandBufferDescriptor* rhs) {
        return reinterpret_cast<const WGPUCommandBufferDescriptor*>(rhs);
    }
    inline WGPUCommandBufferDescriptor* ToAPI(CommandBufferDescriptor* rhs) {
        return reinterpret_cast<WGPUCommandBufferDescriptor*>(rhs);
    }
    inline const CommandBufferDescriptor* FromAPI(const WGPUCommandBufferDescriptor* rhs) {
        return reinterpret_cast<const CommandBufferDescriptor*>(rhs);
    }
    inline CommandBufferDescriptor* FromAPI(WGPUCommandBufferDescriptor* rhs) {
        return reinterpret_cast<CommandBufferDescriptor*>(rhs);
    }
    inline const wgpu::CommandBufferDescriptor* ToCppAPI(const CommandBufferDescriptor* rhs) {
        return reinterpret_cast<const wgpu::CommandBufferDescriptor*>(rhs);
    }
    inline wgpu::CommandBufferDescriptor* ToCppAPI(CommandBufferDescriptor* rhs) {
        return reinterpret_cast<wgpu::CommandBufferDescriptor*>(rhs);
    }
    inline const CommandBufferDescriptor* FromCppAPI(const wgpu::CommandBufferDescriptor* rhs) {
        return reinterpret_cast<const CommandBufferDescriptor*>(rhs);
    }
    inline CommandBufferDescriptor* FromCppAPI(wgpu::CommandBufferDescriptor* rhs) {
        return reinterpret_cast<CommandBufferDescriptor*>(rhs);
    }

    inline const WGPUCommandEncoderDescriptor* ToAPI(const CommandEncoderDescriptor* rhs) {
        return reinterpret_cast<const WGPUCommandEncoderDescriptor*>(rhs);
    }
    inline WGPUCommandEncoderDescriptor* ToAPI(CommandEncoderDescriptor* rhs) {
        return reinterpret_cast<WGPUCommandEncoderDescriptor*>(rhs);
    }
    inline const CommandEncoderDescriptor* FromAPI(const WGPUCommandEncoderDescriptor* rhs) {
        return reinterpret_cast<const CommandEncoderDescriptor*>(rhs);
    }
    inline CommandEncoderDescriptor* FromAPI(WGPUCommandEncoderDescriptor* rhs) {
        return reinterpret_cast<CommandEncoderDescriptor*>(rhs);
    }
    inline const wgpu::CommandEncoderDescriptor* ToCppAPI(const CommandEncoderDescriptor* rhs) {
        return reinterpret_cast<const wgpu::CommandEncoderDescriptor*>(rhs);
    }
    inline wgpu::CommandEncoderDescriptor* ToCppAPI(CommandEncoderDescriptor* rhs) {
        return reinterpret_cast<wgpu::CommandEncoderDescriptor*>(rhs);
    }
    inline const CommandEncoderDescriptor* FromCppAPI(const wgpu::CommandEncoderDescriptor* rhs) {
        return reinterpret_cast<const CommandEncoderDescriptor*>(rhs);
    }
    inline CommandEncoderDescriptor* FromCppAPI(wgpu::CommandEncoderDescriptor* rhs) {
        return reinterpret_cast<CommandEncoderDescriptor*>(rhs);
    }

    inline const WGPUCompilationInfoCallbackInfo* ToAPI(const CompilationInfoCallbackInfo* rhs) {
        return reinterpret_cast<const WGPUCompilationInfoCallbackInfo*>(rhs);
    }
    inline WGPUCompilationInfoCallbackInfo* ToAPI(CompilationInfoCallbackInfo* rhs) {
        return reinterpret_cast<WGPUCompilationInfoCallbackInfo*>(rhs);
    }
    inline const CompilationInfoCallbackInfo* FromAPI(const WGPUCompilationInfoCallbackInfo* rhs) {
        return reinterpret_cast<const CompilationInfoCallbackInfo*>(rhs);
    }
    inline CompilationInfoCallbackInfo* FromAPI(WGPUCompilationInfoCallbackInfo* rhs) {
        return reinterpret_cast<CompilationInfoCallbackInfo*>(rhs);
    }
    inline const wgpu::CompilationInfoCallbackInfo* ToCppAPI(const CompilationInfoCallbackInfo* rhs) {
        return reinterpret_cast<const wgpu::CompilationInfoCallbackInfo*>(rhs);
    }
    inline wgpu::CompilationInfoCallbackInfo* ToCppAPI(CompilationInfoCallbackInfo* rhs) {
        return reinterpret_cast<wgpu::CompilationInfoCallbackInfo*>(rhs);
    }
    inline const CompilationInfoCallbackInfo* FromCppAPI(const wgpu::CompilationInfoCallbackInfo* rhs) {
        return reinterpret_cast<const CompilationInfoCallbackInfo*>(rhs);
    }
    inline CompilationInfoCallbackInfo* FromCppAPI(wgpu::CompilationInfoCallbackInfo* rhs) {
        return reinterpret_cast<CompilationInfoCallbackInfo*>(rhs);
    }

    inline const WGPUCompilationMessage* ToAPI(const CompilationMessage* rhs) {
        return reinterpret_cast<const WGPUCompilationMessage*>(rhs);
    }
    inline WGPUCompilationMessage* ToAPI(CompilationMessage* rhs) {
        return reinterpret_cast<WGPUCompilationMessage*>(rhs);
    }
    inline const CompilationMessage* FromAPI(const WGPUCompilationMessage* rhs) {
        return reinterpret_cast<const CompilationMessage*>(rhs);
    }
    inline CompilationMessage* FromAPI(WGPUCompilationMessage* rhs) {
        return reinterpret_cast<CompilationMessage*>(rhs);
    }
    inline const wgpu::CompilationMessage* ToCppAPI(const CompilationMessage* rhs) {
        return reinterpret_cast<const wgpu::CompilationMessage*>(rhs);
    }
    inline wgpu::CompilationMessage* ToCppAPI(CompilationMessage* rhs) {
        return reinterpret_cast<wgpu::CompilationMessage*>(rhs);
    }
    inline const CompilationMessage* FromCppAPI(const wgpu::CompilationMessage* rhs) {
        return reinterpret_cast<const CompilationMessage*>(rhs);
    }
    inline CompilationMessage* FromCppAPI(wgpu::CompilationMessage* rhs) {
        return reinterpret_cast<CompilationMessage*>(rhs);
    }

    inline const WGPUComputePassTimestampWrites* ToAPI(const ComputePassTimestampWrites* rhs) {
        return reinterpret_cast<const WGPUComputePassTimestampWrites*>(rhs);
    }
    inline WGPUComputePassTimestampWrites* ToAPI(ComputePassTimestampWrites* rhs) {
        return reinterpret_cast<WGPUComputePassTimestampWrites*>(rhs);
    }
    inline const ComputePassTimestampWrites* FromAPI(const WGPUComputePassTimestampWrites* rhs) {
        return reinterpret_cast<const ComputePassTimestampWrites*>(rhs);
    }
    inline ComputePassTimestampWrites* FromAPI(WGPUComputePassTimestampWrites* rhs) {
        return reinterpret_cast<ComputePassTimestampWrites*>(rhs);
    }
    inline const wgpu::ComputePassTimestampWrites* ToCppAPI(const ComputePassTimestampWrites* rhs) {
        return reinterpret_cast<const wgpu::ComputePassTimestampWrites*>(rhs);
    }
    inline wgpu::ComputePassTimestampWrites* ToCppAPI(ComputePassTimestampWrites* rhs) {
        return reinterpret_cast<wgpu::ComputePassTimestampWrites*>(rhs);
    }
    inline const ComputePassTimestampWrites* FromCppAPI(const wgpu::ComputePassTimestampWrites* rhs) {
        return reinterpret_cast<const ComputePassTimestampWrites*>(rhs);
    }
    inline ComputePassTimestampWrites* FromCppAPI(wgpu::ComputePassTimestampWrites* rhs) {
        return reinterpret_cast<ComputePassTimestampWrites*>(rhs);
    }

    inline const WGPUConstantEntry* ToAPI(const ConstantEntry* rhs) {
        return reinterpret_cast<const WGPUConstantEntry*>(rhs);
    }
    inline WGPUConstantEntry* ToAPI(ConstantEntry* rhs) {
        return reinterpret_cast<WGPUConstantEntry*>(rhs);
    }
    inline const ConstantEntry* FromAPI(const WGPUConstantEntry* rhs) {
        return reinterpret_cast<const ConstantEntry*>(rhs);
    }
    inline ConstantEntry* FromAPI(WGPUConstantEntry* rhs) {
        return reinterpret_cast<ConstantEntry*>(rhs);
    }
    inline const wgpu::ConstantEntry* ToCppAPI(const ConstantEntry* rhs) {
        return reinterpret_cast<const wgpu::ConstantEntry*>(rhs);
    }
    inline wgpu::ConstantEntry* ToCppAPI(ConstantEntry* rhs) {
        return reinterpret_cast<wgpu::ConstantEntry*>(rhs);
    }
    inline const ConstantEntry* FromCppAPI(const wgpu::ConstantEntry* rhs) {
        return reinterpret_cast<const ConstantEntry*>(rhs);
    }
    inline ConstantEntry* FromCppAPI(wgpu::ConstantEntry* rhs) {
        return reinterpret_cast<ConstantEntry*>(rhs);
    }

    inline const WGPUCopyTextureForBrowserOptions* ToAPI(const CopyTextureForBrowserOptions* rhs) {
        return reinterpret_cast<const WGPUCopyTextureForBrowserOptions*>(rhs);
    }
    inline WGPUCopyTextureForBrowserOptions* ToAPI(CopyTextureForBrowserOptions* rhs) {
        return reinterpret_cast<WGPUCopyTextureForBrowserOptions*>(rhs);
    }
    inline const CopyTextureForBrowserOptions* FromAPI(const WGPUCopyTextureForBrowserOptions* rhs) {
        return reinterpret_cast<const CopyTextureForBrowserOptions*>(rhs);
    }
    inline CopyTextureForBrowserOptions* FromAPI(WGPUCopyTextureForBrowserOptions* rhs) {
        return reinterpret_cast<CopyTextureForBrowserOptions*>(rhs);
    }
    inline const wgpu::CopyTextureForBrowserOptions* ToCppAPI(const CopyTextureForBrowserOptions* rhs) {
        return reinterpret_cast<const wgpu::CopyTextureForBrowserOptions*>(rhs);
    }
    inline wgpu::CopyTextureForBrowserOptions* ToCppAPI(CopyTextureForBrowserOptions* rhs) {
        return reinterpret_cast<wgpu::CopyTextureForBrowserOptions*>(rhs);
    }
    inline const CopyTextureForBrowserOptions* FromCppAPI(const wgpu::CopyTextureForBrowserOptions* rhs) {
        return reinterpret_cast<const CopyTextureForBrowserOptions*>(rhs);
    }
    inline CopyTextureForBrowserOptions* FromCppAPI(wgpu::CopyTextureForBrowserOptions* rhs) {
        return reinterpret_cast<CopyTextureForBrowserOptions*>(rhs);
    }

    inline const WGPUCreateComputePipelineAsyncCallbackInfo* ToAPI(const CreateComputePipelineAsyncCallbackInfo* rhs) {
        return reinterpret_cast<const WGPUCreateComputePipelineAsyncCallbackInfo*>(rhs);
    }
    inline WGPUCreateComputePipelineAsyncCallbackInfo* ToAPI(CreateComputePipelineAsyncCallbackInfo* rhs) {
        return reinterpret_cast<WGPUCreateComputePipelineAsyncCallbackInfo*>(rhs);
    }
    inline const CreateComputePipelineAsyncCallbackInfo* FromAPI(const WGPUCreateComputePipelineAsyncCallbackInfo* rhs) {
        return reinterpret_cast<const CreateComputePipelineAsyncCallbackInfo*>(rhs);
    }
    inline CreateComputePipelineAsyncCallbackInfo* FromAPI(WGPUCreateComputePipelineAsyncCallbackInfo* rhs) {
        return reinterpret_cast<CreateComputePipelineAsyncCallbackInfo*>(rhs);
    }
    inline const wgpu::CreateComputePipelineAsyncCallbackInfo* ToCppAPI(const CreateComputePipelineAsyncCallbackInfo* rhs) {
        return reinterpret_cast<const wgpu::CreateComputePipelineAsyncCallbackInfo*>(rhs);
    }
    inline wgpu::CreateComputePipelineAsyncCallbackInfo* ToCppAPI(CreateComputePipelineAsyncCallbackInfo* rhs) {
        return reinterpret_cast<wgpu::CreateComputePipelineAsyncCallbackInfo*>(rhs);
    }
    inline const CreateComputePipelineAsyncCallbackInfo* FromCppAPI(const wgpu::CreateComputePipelineAsyncCallbackInfo* rhs) {
        return reinterpret_cast<const CreateComputePipelineAsyncCallbackInfo*>(rhs);
    }
    inline CreateComputePipelineAsyncCallbackInfo* FromCppAPI(wgpu::CreateComputePipelineAsyncCallbackInfo* rhs) {
        return reinterpret_cast<CreateComputePipelineAsyncCallbackInfo*>(rhs);
    }

    inline const WGPUCreateRenderPipelineAsyncCallbackInfo* ToAPI(const CreateRenderPipelineAsyncCallbackInfo* rhs) {
        return reinterpret_cast<const WGPUCreateRenderPipelineAsyncCallbackInfo*>(rhs);
    }
    inline WGPUCreateRenderPipelineAsyncCallbackInfo* ToAPI(CreateRenderPipelineAsyncCallbackInfo* rhs) {
        return reinterpret_cast<WGPUCreateRenderPipelineAsyncCallbackInfo*>(rhs);
    }
    inline const CreateRenderPipelineAsyncCallbackInfo* FromAPI(const WGPUCreateRenderPipelineAsyncCallbackInfo* rhs) {
        return reinterpret_cast<const CreateRenderPipelineAsyncCallbackInfo*>(rhs);
    }
    inline CreateRenderPipelineAsyncCallbackInfo* FromAPI(WGPUCreateRenderPipelineAsyncCallbackInfo* rhs) {
        return reinterpret_cast<CreateRenderPipelineAsyncCallbackInfo*>(rhs);
    }
    inline const wgpu::CreateRenderPipelineAsyncCallbackInfo* ToCppAPI(const CreateRenderPipelineAsyncCallbackInfo* rhs) {
        return reinterpret_cast<const wgpu::CreateRenderPipelineAsyncCallbackInfo*>(rhs);
    }
    inline wgpu::CreateRenderPipelineAsyncCallbackInfo* ToCppAPI(CreateRenderPipelineAsyncCallbackInfo* rhs) {
        return reinterpret_cast<wgpu::CreateRenderPipelineAsyncCallbackInfo*>(rhs);
    }
    inline const CreateRenderPipelineAsyncCallbackInfo* FromCppAPI(const wgpu::CreateRenderPipelineAsyncCallbackInfo* rhs) {
        return reinterpret_cast<const CreateRenderPipelineAsyncCallbackInfo*>(rhs);
    }
    inline CreateRenderPipelineAsyncCallbackInfo* FromCppAPI(wgpu::CreateRenderPipelineAsyncCallbackInfo* rhs) {
        return reinterpret_cast<CreateRenderPipelineAsyncCallbackInfo*>(rhs);
    }

    inline const WGPUDawnWGSLBlocklist* ToAPI(const DawnWGSLBlocklist* rhs) {
        return reinterpret_cast<const WGPUDawnWGSLBlocklist*>(rhs);
    }
    inline WGPUDawnWGSLBlocklist* ToAPI(DawnWGSLBlocklist* rhs) {
        return reinterpret_cast<WGPUDawnWGSLBlocklist*>(rhs);
    }
    inline const DawnWGSLBlocklist* FromAPI(const WGPUDawnWGSLBlocklist* rhs) {
        return reinterpret_cast<const DawnWGSLBlocklist*>(rhs);
    }
    inline DawnWGSLBlocklist* FromAPI(WGPUDawnWGSLBlocklist* rhs) {
        return reinterpret_cast<DawnWGSLBlocklist*>(rhs);
    }
    inline const wgpu::DawnWGSLBlocklist* ToCppAPI(const DawnWGSLBlocklist* rhs) {
        return reinterpret_cast<const wgpu::DawnWGSLBlocklist*>(rhs);
    }
    inline wgpu::DawnWGSLBlocklist* ToCppAPI(DawnWGSLBlocklist* rhs) {
        return reinterpret_cast<wgpu::DawnWGSLBlocklist*>(rhs);
    }
    inline const DawnWGSLBlocklist* FromCppAPI(const wgpu::DawnWGSLBlocklist* rhs) {
        return reinterpret_cast<const DawnWGSLBlocklist*>(rhs);
    }
    inline DawnWGSLBlocklist* FromCppAPI(wgpu::DawnWGSLBlocklist* rhs) {
        return reinterpret_cast<DawnWGSLBlocklist*>(rhs);
    }

    inline const WGPUDawnAdapterPropertiesPowerPreference* ToAPI(const DawnAdapterPropertiesPowerPreference* rhs) {
        return reinterpret_cast<const WGPUDawnAdapterPropertiesPowerPreference*>(rhs);
    }
    inline WGPUDawnAdapterPropertiesPowerPreference* ToAPI(DawnAdapterPropertiesPowerPreference* rhs) {
        return reinterpret_cast<WGPUDawnAdapterPropertiesPowerPreference*>(rhs);
    }
    inline const DawnAdapterPropertiesPowerPreference* FromAPI(const WGPUDawnAdapterPropertiesPowerPreference* rhs) {
        return reinterpret_cast<const DawnAdapterPropertiesPowerPreference*>(rhs);
    }
    inline DawnAdapterPropertiesPowerPreference* FromAPI(WGPUDawnAdapterPropertiesPowerPreference* rhs) {
        return reinterpret_cast<DawnAdapterPropertiesPowerPreference*>(rhs);
    }
    inline const wgpu::DawnAdapterPropertiesPowerPreference* ToCppAPI(const DawnAdapterPropertiesPowerPreference* rhs) {
        return reinterpret_cast<const wgpu::DawnAdapterPropertiesPowerPreference*>(rhs);
    }
    inline wgpu::DawnAdapterPropertiesPowerPreference* ToCppAPI(DawnAdapterPropertiesPowerPreference* rhs) {
        return reinterpret_cast<wgpu::DawnAdapterPropertiesPowerPreference*>(rhs);
    }
    inline const DawnAdapterPropertiesPowerPreference* FromCppAPI(const wgpu::DawnAdapterPropertiesPowerPreference* rhs) {
        return reinterpret_cast<const DawnAdapterPropertiesPowerPreference*>(rhs);
    }
    inline DawnAdapterPropertiesPowerPreference* FromCppAPI(wgpu::DawnAdapterPropertiesPowerPreference* rhs) {
        return reinterpret_cast<DawnAdapterPropertiesPowerPreference*>(rhs);
    }

    inline const WGPUDawnBufferDescriptorErrorInfoFromWireClient* ToAPI(const DawnBufferDescriptorErrorInfoFromWireClient* rhs) {
        return reinterpret_cast<const WGPUDawnBufferDescriptorErrorInfoFromWireClient*>(rhs);
    }
    inline WGPUDawnBufferDescriptorErrorInfoFromWireClient* ToAPI(DawnBufferDescriptorErrorInfoFromWireClient* rhs) {
        return reinterpret_cast<WGPUDawnBufferDescriptorErrorInfoFromWireClient*>(rhs);
    }
    inline const DawnBufferDescriptorErrorInfoFromWireClient* FromAPI(const WGPUDawnBufferDescriptorErrorInfoFromWireClient* rhs) {
        return reinterpret_cast<const DawnBufferDescriptorErrorInfoFromWireClient*>(rhs);
    }
    inline DawnBufferDescriptorErrorInfoFromWireClient* FromAPI(WGPUDawnBufferDescriptorErrorInfoFromWireClient* rhs) {
        return reinterpret_cast<DawnBufferDescriptorErrorInfoFromWireClient*>(rhs);
    }
    inline const wgpu::DawnBufferDescriptorErrorInfoFromWireClient* ToCppAPI(const DawnBufferDescriptorErrorInfoFromWireClient* rhs) {
        return reinterpret_cast<const wgpu::DawnBufferDescriptorErrorInfoFromWireClient*>(rhs);
    }
    inline wgpu::DawnBufferDescriptorErrorInfoFromWireClient* ToCppAPI(DawnBufferDescriptorErrorInfoFromWireClient* rhs) {
        return reinterpret_cast<wgpu::DawnBufferDescriptorErrorInfoFromWireClient*>(rhs);
    }
    inline const DawnBufferDescriptorErrorInfoFromWireClient* FromCppAPI(const wgpu::DawnBufferDescriptorErrorInfoFromWireClient* rhs) {
        return reinterpret_cast<const DawnBufferDescriptorErrorInfoFromWireClient*>(rhs);
    }
    inline DawnBufferDescriptorErrorInfoFromWireClient* FromCppAPI(wgpu::DawnBufferDescriptorErrorInfoFromWireClient* rhs) {
        return reinterpret_cast<DawnBufferDescriptorErrorInfoFromWireClient*>(rhs);
    }

    inline const WGPUDawnCacheDeviceDescriptor* ToAPI(const DawnCacheDeviceDescriptor* rhs) {
        return reinterpret_cast<const WGPUDawnCacheDeviceDescriptor*>(rhs);
    }
    inline WGPUDawnCacheDeviceDescriptor* ToAPI(DawnCacheDeviceDescriptor* rhs) {
        return reinterpret_cast<WGPUDawnCacheDeviceDescriptor*>(rhs);
    }
    inline const DawnCacheDeviceDescriptor* FromAPI(const WGPUDawnCacheDeviceDescriptor* rhs) {
        return reinterpret_cast<const DawnCacheDeviceDescriptor*>(rhs);
    }
    inline DawnCacheDeviceDescriptor* FromAPI(WGPUDawnCacheDeviceDescriptor* rhs) {
        return reinterpret_cast<DawnCacheDeviceDescriptor*>(rhs);
    }
    inline const wgpu::DawnCacheDeviceDescriptor* ToCppAPI(const DawnCacheDeviceDescriptor* rhs) {
        return reinterpret_cast<const wgpu::DawnCacheDeviceDescriptor*>(rhs);
    }
    inline wgpu::DawnCacheDeviceDescriptor* ToCppAPI(DawnCacheDeviceDescriptor* rhs) {
        return reinterpret_cast<wgpu::DawnCacheDeviceDescriptor*>(rhs);
    }
    inline const DawnCacheDeviceDescriptor* FromCppAPI(const wgpu::DawnCacheDeviceDescriptor* rhs) {
        return reinterpret_cast<const DawnCacheDeviceDescriptor*>(rhs);
    }
    inline DawnCacheDeviceDescriptor* FromCppAPI(wgpu::DawnCacheDeviceDescriptor* rhs) {
        return reinterpret_cast<DawnCacheDeviceDescriptor*>(rhs);
    }

    inline const WGPUDawnComputePipelineFullSubgroups* ToAPI(const DawnComputePipelineFullSubgroups* rhs) {
        return reinterpret_cast<const WGPUDawnComputePipelineFullSubgroups*>(rhs);
    }
    inline WGPUDawnComputePipelineFullSubgroups* ToAPI(DawnComputePipelineFullSubgroups* rhs) {
        return reinterpret_cast<WGPUDawnComputePipelineFullSubgroups*>(rhs);
    }
    inline const DawnComputePipelineFullSubgroups* FromAPI(const WGPUDawnComputePipelineFullSubgroups* rhs) {
        return reinterpret_cast<const DawnComputePipelineFullSubgroups*>(rhs);
    }
    inline DawnComputePipelineFullSubgroups* FromAPI(WGPUDawnComputePipelineFullSubgroups* rhs) {
        return reinterpret_cast<DawnComputePipelineFullSubgroups*>(rhs);
    }
    inline const wgpu::DawnComputePipelineFullSubgroups* ToCppAPI(const DawnComputePipelineFullSubgroups* rhs) {
        return reinterpret_cast<const wgpu::DawnComputePipelineFullSubgroups*>(rhs);
    }
    inline wgpu::DawnComputePipelineFullSubgroups* ToCppAPI(DawnComputePipelineFullSubgroups* rhs) {
        return reinterpret_cast<wgpu::DawnComputePipelineFullSubgroups*>(rhs);
    }
    inline const DawnComputePipelineFullSubgroups* FromCppAPI(const wgpu::DawnComputePipelineFullSubgroups* rhs) {
        return reinterpret_cast<const DawnComputePipelineFullSubgroups*>(rhs);
    }
    inline DawnComputePipelineFullSubgroups* FromCppAPI(wgpu::DawnComputePipelineFullSubgroups* rhs) {
        return reinterpret_cast<DawnComputePipelineFullSubgroups*>(rhs);
    }

    inline const WGPUDawnEncoderInternalUsageDescriptor* ToAPI(const DawnEncoderInternalUsageDescriptor* rhs) {
        return reinterpret_cast<const WGPUDawnEncoderInternalUsageDescriptor*>(rhs);
    }
    inline WGPUDawnEncoderInternalUsageDescriptor* ToAPI(DawnEncoderInternalUsageDescriptor* rhs) {
        return reinterpret_cast<WGPUDawnEncoderInternalUsageDescriptor*>(rhs);
    }
    inline const DawnEncoderInternalUsageDescriptor* FromAPI(const WGPUDawnEncoderInternalUsageDescriptor* rhs) {
        return reinterpret_cast<const DawnEncoderInternalUsageDescriptor*>(rhs);
    }
    inline DawnEncoderInternalUsageDescriptor* FromAPI(WGPUDawnEncoderInternalUsageDescriptor* rhs) {
        return reinterpret_cast<DawnEncoderInternalUsageDescriptor*>(rhs);
    }
    inline const wgpu::DawnEncoderInternalUsageDescriptor* ToCppAPI(const DawnEncoderInternalUsageDescriptor* rhs) {
        return reinterpret_cast<const wgpu::DawnEncoderInternalUsageDescriptor*>(rhs);
    }
    inline wgpu::DawnEncoderInternalUsageDescriptor* ToCppAPI(DawnEncoderInternalUsageDescriptor* rhs) {
        return reinterpret_cast<wgpu::DawnEncoderInternalUsageDescriptor*>(rhs);
    }
    inline const DawnEncoderInternalUsageDescriptor* FromCppAPI(const wgpu::DawnEncoderInternalUsageDescriptor* rhs) {
        return reinterpret_cast<const DawnEncoderInternalUsageDescriptor*>(rhs);
    }
    inline DawnEncoderInternalUsageDescriptor* FromCppAPI(wgpu::DawnEncoderInternalUsageDescriptor* rhs) {
        return reinterpret_cast<DawnEncoderInternalUsageDescriptor*>(rhs);
    }

    inline const WGPUDawnExperimentalSubgroupLimits* ToAPI(const DawnExperimentalSubgroupLimits* rhs) {
        return reinterpret_cast<const WGPUDawnExperimentalSubgroupLimits*>(rhs);
    }
    inline WGPUDawnExperimentalSubgroupLimits* ToAPI(DawnExperimentalSubgroupLimits* rhs) {
        return reinterpret_cast<WGPUDawnExperimentalSubgroupLimits*>(rhs);
    }
    inline const DawnExperimentalSubgroupLimits* FromAPI(const WGPUDawnExperimentalSubgroupLimits* rhs) {
        return reinterpret_cast<const DawnExperimentalSubgroupLimits*>(rhs);
    }
    inline DawnExperimentalSubgroupLimits* FromAPI(WGPUDawnExperimentalSubgroupLimits* rhs) {
        return reinterpret_cast<DawnExperimentalSubgroupLimits*>(rhs);
    }
    inline const wgpu::DawnExperimentalSubgroupLimits* ToCppAPI(const DawnExperimentalSubgroupLimits* rhs) {
        return reinterpret_cast<const wgpu::DawnExperimentalSubgroupLimits*>(rhs);
    }
    inline wgpu::DawnExperimentalSubgroupLimits* ToCppAPI(DawnExperimentalSubgroupLimits* rhs) {
        return reinterpret_cast<wgpu::DawnExperimentalSubgroupLimits*>(rhs);
    }
    inline const DawnExperimentalSubgroupLimits* FromCppAPI(const wgpu::DawnExperimentalSubgroupLimits* rhs) {
        return reinterpret_cast<const DawnExperimentalSubgroupLimits*>(rhs);
    }
    inline DawnExperimentalSubgroupLimits* FromCppAPI(wgpu::DawnExperimentalSubgroupLimits* rhs) {
        return reinterpret_cast<DawnExperimentalSubgroupLimits*>(rhs);
    }

    inline const WGPUDawnMultisampleStateRenderToSingleSampled* ToAPI(const DawnMultisampleStateRenderToSingleSampled* rhs) {
        return reinterpret_cast<const WGPUDawnMultisampleStateRenderToSingleSampled*>(rhs);
    }
    inline WGPUDawnMultisampleStateRenderToSingleSampled* ToAPI(DawnMultisampleStateRenderToSingleSampled* rhs) {
        return reinterpret_cast<WGPUDawnMultisampleStateRenderToSingleSampled*>(rhs);
    }
    inline const DawnMultisampleStateRenderToSingleSampled* FromAPI(const WGPUDawnMultisampleStateRenderToSingleSampled* rhs) {
        return reinterpret_cast<const DawnMultisampleStateRenderToSingleSampled*>(rhs);
    }
    inline DawnMultisampleStateRenderToSingleSampled* FromAPI(WGPUDawnMultisampleStateRenderToSingleSampled* rhs) {
        return reinterpret_cast<DawnMultisampleStateRenderToSingleSampled*>(rhs);
    }
    inline const wgpu::DawnMultisampleStateRenderToSingleSampled* ToCppAPI(const DawnMultisampleStateRenderToSingleSampled* rhs) {
        return reinterpret_cast<const wgpu::DawnMultisampleStateRenderToSingleSampled*>(rhs);
    }
    inline wgpu::DawnMultisampleStateRenderToSingleSampled* ToCppAPI(DawnMultisampleStateRenderToSingleSampled* rhs) {
        return reinterpret_cast<wgpu::DawnMultisampleStateRenderToSingleSampled*>(rhs);
    }
    inline const DawnMultisampleStateRenderToSingleSampled* FromCppAPI(const wgpu::DawnMultisampleStateRenderToSingleSampled* rhs) {
        return reinterpret_cast<const DawnMultisampleStateRenderToSingleSampled*>(rhs);
    }
    inline DawnMultisampleStateRenderToSingleSampled* FromCppAPI(wgpu::DawnMultisampleStateRenderToSingleSampled* rhs) {
        return reinterpret_cast<DawnMultisampleStateRenderToSingleSampled*>(rhs);
    }

    inline const WGPUDawnRenderPassColorAttachmentRenderToSingleSampled* ToAPI(const DawnRenderPassColorAttachmentRenderToSingleSampled* rhs) {
        return reinterpret_cast<const WGPUDawnRenderPassColorAttachmentRenderToSingleSampled*>(rhs);
    }
    inline WGPUDawnRenderPassColorAttachmentRenderToSingleSampled* ToAPI(DawnRenderPassColorAttachmentRenderToSingleSampled* rhs) {
        return reinterpret_cast<WGPUDawnRenderPassColorAttachmentRenderToSingleSampled*>(rhs);
    }
    inline const DawnRenderPassColorAttachmentRenderToSingleSampled* FromAPI(const WGPUDawnRenderPassColorAttachmentRenderToSingleSampled* rhs) {
        return reinterpret_cast<const DawnRenderPassColorAttachmentRenderToSingleSampled*>(rhs);
    }
    inline DawnRenderPassColorAttachmentRenderToSingleSampled* FromAPI(WGPUDawnRenderPassColorAttachmentRenderToSingleSampled* rhs) {
        return reinterpret_cast<DawnRenderPassColorAttachmentRenderToSingleSampled*>(rhs);
    }
    inline const wgpu::DawnRenderPassColorAttachmentRenderToSingleSampled* ToCppAPI(const DawnRenderPassColorAttachmentRenderToSingleSampled* rhs) {
        return reinterpret_cast<const wgpu::DawnRenderPassColorAttachmentRenderToSingleSampled*>(rhs);
    }
    inline wgpu::DawnRenderPassColorAttachmentRenderToSingleSampled* ToCppAPI(DawnRenderPassColorAttachmentRenderToSingleSampled* rhs) {
        return reinterpret_cast<wgpu::DawnRenderPassColorAttachmentRenderToSingleSampled*>(rhs);
    }
    inline const DawnRenderPassColorAttachmentRenderToSingleSampled* FromCppAPI(const wgpu::DawnRenderPassColorAttachmentRenderToSingleSampled* rhs) {
        return reinterpret_cast<const DawnRenderPassColorAttachmentRenderToSingleSampled*>(rhs);
    }
    inline DawnRenderPassColorAttachmentRenderToSingleSampled* FromCppAPI(wgpu::DawnRenderPassColorAttachmentRenderToSingleSampled* rhs) {
        return reinterpret_cast<DawnRenderPassColorAttachmentRenderToSingleSampled*>(rhs);
    }

    inline const WGPUDawnShaderModuleSPIRVOptionsDescriptor* ToAPI(const DawnShaderModuleSPIRVOptionsDescriptor* rhs) {
        return reinterpret_cast<const WGPUDawnShaderModuleSPIRVOptionsDescriptor*>(rhs);
    }
    inline WGPUDawnShaderModuleSPIRVOptionsDescriptor* ToAPI(DawnShaderModuleSPIRVOptionsDescriptor* rhs) {
        return reinterpret_cast<WGPUDawnShaderModuleSPIRVOptionsDescriptor*>(rhs);
    }
    inline const DawnShaderModuleSPIRVOptionsDescriptor* FromAPI(const WGPUDawnShaderModuleSPIRVOptionsDescriptor* rhs) {
        return reinterpret_cast<const DawnShaderModuleSPIRVOptionsDescriptor*>(rhs);
    }
    inline DawnShaderModuleSPIRVOptionsDescriptor* FromAPI(WGPUDawnShaderModuleSPIRVOptionsDescriptor* rhs) {
        return reinterpret_cast<DawnShaderModuleSPIRVOptionsDescriptor*>(rhs);
    }
    inline const wgpu::DawnShaderModuleSPIRVOptionsDescriptor* ToCppAPI(const DawnShaderModuleSPIRVOptionsDescriptor* rhs) {
        return reinterpret_cast<const wgpu::DawnShaderModuleSPIRVOptionsDescriptor*>(rhs);
    }
    inline wgpu::DawnShaderModuleSPIRVOptionsDescriptor* ToCppAPI(DawnShaderModuleSPIRVOptionsDescriptor* rhs) {
        return reinterpret_cast<wgpu::DawnShaderModuleSPIRVOptionsDescriptor*>(rhs);
    }
    inline const DawnShaderModuleSPIRVOptionsDescriptor* FromCppAPI(const wgpu::DawnShaderModuleSPIRVOptionsDescriptor* rhs) {
        return reinterpret_cast<const DawnShaderModuleSPIRVOptionsDescriptor*>(rhs);
    }
    inline DawnShaderModuleSPIRVOptionsDescriptor* FromCppAPI(wgpu::DawnShaderModuleSPIRVOptionsDescriptor* rhs) {
        return reinterpret_cast<DawnShaderModuleSPIRVOptionsDescriptor*>(rhs);
    }

    inline const WGPUDawnTextureInternalUsageDescriptor* ToAPI(const DawnTextureInternalUsageDescriptor* rhs) {
        return reinterpret_cast<const WGPUDawnTextureInternalUsageDescriptor*>(rhs);
    }
    inline WGPUDawnTextureInternalUsageDescriptor* ToAPI(DawnTextureInternalUsageDescriptor* rhs) {
        return reinterpret_cast<WGPUDawnTextureInternalUsageDescriptor*>(rhs);
    }
    inline const DawnTextureInternalUsageDescriptor* FromAPI(const WGPUDawnTextureInternalUsageDescriptor* rhs) {
        return reinterpret_cast<const DawnTextureInternalUsageDescriptor*>(rhs);
    }
    inline DawnTextureInternalUsageDescriptor* FromAPI(WGPUDawnTextureInternalUsageDescriptor* rhs) {
        return reinterpret_cast<DawnTextureInternalUsageDescriptor*>(rhs);
    }
    inline const wgpu::DawnTextureInternalUsageDescriptor* ToCppAPI(const DawnTextureInternalUsageDescriptor* rhs) {
        return reinterpret_cast<const wgpu::DawnTextureInternalUsageDescriptor*>(rhs);
    }
    inline wgpu::DawnTextureInternalUsageDescriptor* ToCppAPI(DawnTextureInternalUsageDescriptor* rhs) {
        return reinterpret_cast<wgpu::DawnTextureInternalUsageDescriptor*>(rhs);
    }
    inline const DawnTextureInternalUsageDescriptor* FromCppAPI(const wgpu::DawnTextureInternalUsageDescriptor* rhs) {
        return reinterpret_cast<const DawnTextureInternalUsageDescriptor*>(rhs);
    }
    inline DawnTextureInternalUsageDescriptor* FromCppAPI(wgpu::DawnTextureInternalUsageDescriptor* rhs) {
        return reinterpret_cast<DawnTextureInternalUsageDescriptor*>(rhs);
    }

    inline const WGPUDawnTogglesDescriptor* ToAPI(const DawnTogglesDescriptor* rhs) {
        return reinterpret_cast<const WGPUDawnTogglesDescriptor*>(rhs);
    }
    inline WGPUDawnTogglesDescriptor* ToAPI(DawnTogglesDescriptor* rhs) {
        return reinterpret_cast<WGPUDawnTogglesDescriptor*>(rhs);
    }
    inline const DawnTogglesDescriptor* FromAPI(const WGPUDawnTogglesDescriptor* rhs) {
        return reinterpret_cast<const DawnTogglesDescriptor*>(rhs);
    }
    inline DawnTogglesDescriptor* FromAPI(WGPUDawnTogglesDescriptor* rhs) {
        return reinterpret_cast<DawnTogglesDescriptor*>(rhs);
    }
    inline const wgpu::DawnTogglesDescriptor* ToCppAPI(const DawnTogglesDescriptor* rhs) {
        return reinterpret_cast<const wgpu::DawnTogglesDescriptor*>(rhs);
    }
    inline wgpu::DawnTogglesDescriptor* ToCppAPI(DawnTogglesDescriptor* rhs) {
        return reinterpret_cast<wgpu::DawnTogglesDescriptor*>(rhs);
    }
    inline const DawnTogglesDescriptor* FromCppAPI(const wgpu::DawnTogglesDescriptor* rhs) {
        return reinterpret_cast<const DawnTogglesDescriptor*>(rhs);
    }
    inline DawnTogglesDescriptor* FromCppAPI(wgpu::DawnTogglesDescriptor* rhs) {
        return reinterpret_cast<DawnTogglesDescriptor*>(rhs);
    }

    inline const WGPUDawnWireWGSLControl* ToAPI(const DawnWireWGSLControl* rhs) {
        return reinterpret_cast<const WGPUDawnWireWGSLControl*>(rhs);
    }
    inline WGPUDawnWireWGSLControl* ToAPI(DawnWireWGSLControl* rhs) {
        return reinterpret_cast<WGPUDawnWireWGSLControl*>(rhs);
    }
    inline const DawnWireWGSLControl* FromAPI(const WGPUDawnWireWGSLControl* rhs) {
        return reinterpret_cast<const DawnWireWGSLControl*>(rhs);
    }
    inline DawnWireWGSLControl* FromAPI(WGPUDawnWireWGSLControl* rhs) {
        return reinterpret_cast<DawnWireWGSLControl*>(rhs);
    }
    inline const wgpu::DawnWireWGSLControl* ToCppAPI(const DawnWireWGSLControl* rhs) {
        return reinterpret_cast<const wgpu::DawnWireWGSLControl*>(rhs);
    }
    inline wgpu::DawnWireWGSLControl* ToCppAPI(DawnWireWGSLControl* rhs) {
        return reinterpret_cast<wgpu::DawnWireWGSLControl*>(rhs);
    }
    inline const DawnWireWGSLControl* FromCppAPI(const wgpu::DawnWireWGSLControl* rhs) {
        return reinterpret_cast<const DawnWireWGSLControl*>(rhs);
    }
    inline DawnWireWGSLControl* FromCppAPI(wgpu::DawnWireWGSLControl* rhs) {
        return reinterpret_cast<DawnWireWGSLControl*>(rhs);
    }

    inline const WGPUDepthStencilStateDepthWriteDefinedDawn* ToAPI(const DepthStencilStateDepthWriteDefinedDawn* rhs) {
        return reinterpret_cast<const WGPUDepthStencilStateDepthWriteDefinedDawn*>(rhs);
    }
    inline WGPUDepthStencilStateDepthWriteDefinedDawn* ToAPI(DepthStencilStateDepthWriteDefinedDawn* rhs) {
        return reinterpret_cast<WGPUDepthStencilStateDepthWriteDefinedDawn*>(rhs);
    }
    inline const DepthStencilStateDepthWriteDefinedDawn* FromAPI(const WGPUDepthStencilStateDepthWriteDefinedDawn* rhs) {
        return reinterpret_cast<const DepthStencilStateDepthWriteDefinedDawn*>(rhs);
    }
    inline DepthStencilStateDepthWriteDefinedDawn* FromAPI(WGPUDepthStencilStateDepthWriteDefinedDawn* rhs) {
        return reinterpret_cast<DepthStencilStateDepthWriteDefinedDawn*>(rhs);
    }
    inline const wgpu::DepthStencilStateDepthWriteDefinedDawn* ToCppAPI(const DepthStencilStateDepthWriteDefinedDawn* rhs) {
        return reinterpret_cast<const wgpu::DepthStencilStateDepthWriteDefinedDawn*>(rhs);
    }
    inline wgpu::DepthStencilStateDepthWriteDefinedDawn* ToCppAPI(DepthStencilStateDepthWriteDefinedDawn* rhs) {
        return reinterpret_cast<wgpu::DepthStencilStateDepthWriteDefinedDawn*>(rhs);
    }
    inline const DepthStencilStateDepthWriteDefinedDawn* FromCppAPI(const wgpu::DepthStencilStateDepthWriteDefinedDawn* rhs) {
        return reinterpret_cast<const DepthStencilStateDepthWriteDefinedDawn*>(rhs);
    }
    inline DepthStencilStateDepthWriteDefinedDawn* FromCppAPI(wgpu::DepthStencilStateDepthWriteDefinedDawn* rhs) {
        return reinterpret_cast<DepthStencilStateDepthWriteDefinedDawn*>(rhs);
    }

    inline const WGPUDeviceLostCallbackInfo* ToAPI(const DeviceLostCallbackInfo* rhs) {
        return reinterpret_cast<const WGPUDeviceLostCallbackInfo*>(rhs);
    }
    inline WGPUDeviceLostCallbackInfo* ToAPI(DeviceLostCallbackInfo* rhs) {
        return reinterpret_cast<WGPUDeviceLostCallbackInfo*>(rhs);
    }
    inline const DeviceLostCallbackInfo* FromAPI(const WGPUDeviceLostCallbackInfo* rhs) {
        return reinterpret_cast<const DeviceLostCallbackInfo*>(rhs);
    }
    inline DeviceLostCallbackInfo* FromAPI(WGPUDeviceLostCallbackInfo* rhs) {
        return reinterpret_cast<DeviceLostCallbackInfo*>(rhs);
    }
    inline const wgpu::DeviceLostCallbackInfo* ToCppAPI(const DeviceLostCallbackInfo* rhs) {
        return reinterpret_cast<const wgpu::DeviceLostCallbackInfo*>(rhs);
    }
    inline wgpu::DeviceLostCallbackInfo* ToCppAPI(DeviceLostCallbackInfo* rhs) {
        return reinterpret_cast<wgpu::DeviceLostCallbackInfo*>(rhs);
    }
    inline const DeviceLostCallbackInfo* FromCppAPI(const wgpu::DeviceLostCallbackInfo* rhs) {
        return reinterpret_cast<const DeviceLostCallbackInfo*>(rhs);
    }
    inline DeviceLostCallbackInfo* FromCppAPI(wgpu::DeviceLostCallbackInfo* rhs) {
        return reinterpret_cast<DeviceLostCallbackInfo*>(rhs);
    }

    inline const WGPUDrmFormatProperties* ToAPI(const DrmFormatProperties* rhs) {
        return reinterpret_cast<const WGPUDrmFormatProperties*>(rhs);
    }
    inline WGPUDrmFormatProperties* ToAPI(DrmFormatProperties* rhs) {
        return reinterpret_cast<WGPUDrmFormatProperties*>(rhs);
    }
    inline const DrmFormatProperties* FromAPI(const WGPUDrmFormatProperties* rhs) {
        return reinterpret_cast<const DrmFormatProperties*>(rhs);
    }
    inline DrmFormatProperties* FromAPI(WGPUDrmFormatProperties* rhs) {
        return reinterpret_cast<DrmFormatProperties*>(rhs);
    }
    inline const wgpu::DrmFormatProperties* ToCppAPI(const DrmFormatProperties* rhs) {
        return reinterpret_cast<const wgpu::DrmFormatProperties*>(rhs);
    }
    inline wgpu::DrmFormatProperties* ToCppAPI(DrmFormatProperties* rhs) {
        return reinterpret_cast<wgpu::DrmFormatProperties*>(rhs);
    }
    inline const DrmFormatProperties* FromCppAPI(const wgpu::DrmFormatProperties* rhs) {
        return reinterpret_cast<const DrmFormatProperties*>(rhs);
    }
    inline DrmFormatProperties* FromCppAPI(wgpu::DrmFormatProperties* rhs) {
        return reinterpret_cast<DrmFormatProperties*>(rhs);
    }

    inline const WGPUExtent2D* ToAPI(const Extent2D* rhs) {
        return reinterpret_cast<const WGPUExtent2D*>(rhs);
    }
    inline WGPUExtent2D* ToAPI(Extent2D* rhs) {
        return reinterpret_cast<WGPUExtent2D*>(rhs);
    }
    inline const Extent2D* FromAPI(const WGPUExtent2D* rhs) {
        return reinterpret_cast<const Extent2D*>(rhs);
    }
    inline Extent2D* FromAPI(WGPUExtent2D* rhs) {
        return reinterpret_cast<Extent2D*>(rhs);
    }
    inline const wgpu::Extent2D* ToCppAPI(const Extent2D* rhs) {
        return reinterpret_cast<const wgpu::Extent2D*>(rhs);
    }
    inline wgpu::Extent2D* ToCppAPI(Extent2D* rhs) {
        return reinterpret_cast<wgpu::Extent2D*>(rhs);
    }
    inline const Extent2D* FromCppAPI(const wgpu::Extent2D* rhs) {
        return reinterpret_cast<const Extent2D*>(rhs);
    }
    inline Extent2D* FromCppAPI(wgpu::Extent2D* rhs) {
        return reinterpret_cast<Extent2D*>(rhs);
    }

    inline const WGPUExtent3D* ToAPI(const Extent3D* rhs) {
        return reinterpret_cast<const WGPUExtent3D*>(rhs);
    }
    inline WGPUExtent3D* ToAPI(Extent3D* rhs) {
        return reinterpret_cast<WGPUExtent3D*>(rhs);
    }
    inline const Extent3D* FromAPI(const WGPUExtent3D* rhs) {
        return reinterpret_cast<const Extent3D*>(rhs);
    }
    inline Extent3D* FromAPI(WGPUExtent3D* rhs) {
        return reinterpret_cast<Extent3D*>(rhs);
    }
    inline const wgpu::Extent3D* ToCppAPI(const Extent3D* rhs) {
        return reinterpret_cast<const wgpu::Extent3D*>(rhs);
    }
    inline wgpu::Extent3D* ToCppAPI(Extent3D* rhs) {
        return reinterpret_cast<wgpu::Extent3D*>(rhs);
    }
    inline const Extent3D* FromCppAPI(const wgpu::Extent3D* rhs) {
        return reinterpret_cast<const Extent3D*>(rhs);
    }
    inline Extent3D* FromCppAPI(wgpu::Extent3D* rhs) {
        return reinterpret_cast<Extent3D*>(rhs);
    }

    inline const WGPUExternalTextureBindingEntry* ToAPI(const ExternalTextureBindingEntry* rhs) {
        return reinterpret_cast<const WGPUExternalTextureBindingEntry*>(rhs);
    }
    inline WGPUExternalTextureBindingEntry* ToAPI(ExternalTextureBindingEntry* rhs) {
        return reinterpret_cast<WGPUExternalTextureBindingEntry*>(rhs);
    }
    inline const ExternalTextureBindingEntry* FromAPI(const WGPUExternalTextureBindingEntry* rhs) {
        return reinterpret_cast<const ExternalTextureBindingEntry*>(rhs);
    }
    inline ExternalTextureBindingEntry* FromAPI(WGPUExternalTextureBindingEntry* rhs) {
        return reinterpret_cast<ExternalTextureBindingEntry*>(rhs);
    }
    inline const wgpu::ExternalTextureBindingEntry* ToCppAPI(const ExternalTextureBindingEntry* rhs) {
        return reinterpret_cast<const wgpu::ExternalTextureBindingEntry*>(rhs);
    }
    inline wgpu::ExternalTextureBindingEntry* ToCppAPI(ExternalTextureBindingEntry* rhs) {
        return reinterpret_cast<wgpu::ExternalTextureBindingEntry*>(rhs);
    }
    inline const ExternalTextureBindingEntry* FromCppAPI(const wgpu::ExternalTextureBindingEntry* rhs) {
        return reinterpret_cast<const ExternalTextureBindingEntry*>(rhs);
    }
    inline ExternalTextureBindingEntry* FromCppAPI(wgpu::ExternalTextureBindingEntry* rhs) {
        return reinterpret_cast<ExternalTextureBindingEntry*>(rhs);
    }

    inline const WGPUExternalTextureBindingLayout* ToAPI(const ExternalTextureBindingLayout* rhs) {
        return reinterpret_cast<const WGPUExternalTextureBindingLayout*>(rhs);
    }
    inline WGPUExternalTextureBindingLayout* ToAPI(ExternalTextureBindingLayout* rhs) {
        return reinterpret_cast<WGPUExternalTextureBindingLayout*>(rhs);
    }
    inline const ExternalTextureBindingLayout* FromAPI(const WGPUExternalTextureBindingLayout* rhs) {
        return reinterpret_cast<const ExternalTextureBindingLayout*>(rhs);
    }
    inline ExternalTextureBindingLayout* FromAPI(WGPUExternalTextureBindingLayout* rhs) {
        return reinterpret_cast<ExternalTextureBindingLayout*>(rhs);
    }
    inline const wgpu::ExternalTextureBindingLayout* ToCppAPI(const ExternalTextureBindingLayout* rhs) {
        return reinterpret_cast<const wgpu::ExternalTextureBindingLayout*>(rhs);
    }
    inline wgpu::ExternalTextureBindingLayout* ToCppAPI(ExternalTextureBindingLayout* rhs) {
        return reinterpret_cast<wgpu::ExternalTextureBindingLayout*>(rhs);
    }
    inline const ExternalTextureBindingLayout* FromCppAPI(const wgpu::ExternalTextureBindingLayout* rhs) {
        return reinterpret_cast<const ExternalTextureBindingLayout*>(rhs);
    }
    inline ExternalTextureBindingLayout* FromCppAPI(wgpu::ExternalTextureBindingLayout* rhs) {
        return reinterpret_cast<ExternalTextureBindingLayout*>(rhs);
    }

    inline const WGPUFormatCapabilities* ToAPI(const FormatCapabilities* rhs) {
        return reinterpret_cast<const WGPUFormatCapabilities*>(rhs);
    }
    inline WGPUFormatCapabilities* ToAPI(FormatCapabilities* rhs) {
        return reinterpret_cast<WGPUFormatCapabilities*>(rhs);
    }
    inline const FormatCapabilities* FromAPI(const WGPUFormatCapabilities* rhs) {
        return reinterpret_cast<const FormatCapabilities*>(rhs);
    }
    inline FormatCapabilities* FromAPI(WGPUFormatCapabilities* rhs) {
        return reinterpret_cast<FormatCapabilities*>(rhs);
    }
    inline const wgpu::FormatCapabilities* ToCppAPI(const FormatCapabilities* rhs) {
        return reinterpret_cast<const wgpu::FormatCapabilities*>(rhs);
    }
    inline wgpu::FormatCapabilities* ToCppAPI(FormatCapabilities* rhs) {
        return reinterpret_cast<wgpu::FormatCapabilities*>(rhs);
    }
    inline const FormatCapabilities* FromCppAPI(const wgpu::FormatCapabilities* rhs) {
        return reinterpret_cast<const FormatCapabilities*>(rhs);
    }
    inline FormatCapabilities* FromCppAPI(wgpu::FormatCapabilities* rhs) {
        return reinterpret_cast<FormatCapabilities*>(rhs);
    }

    inline const WGPUFuture* ToAPI(const Future* rhs) {
        return reinterpret_cast<const WGPUFuture*>(rhs);
    }
    inline WGPUFuture* ToAPI(Future* rhs) {
        return reinterpret_cast<WGPUFuture*>(rhs);
    }
    inline const Future* FromAPI(const WGPUFuture* rhs) {
        return reinterpret_cast<const Future*>(rhs);
    }
    inline Future* FromAPI(WGPUFuture* rhs) {
        return reinterpret_cast<Future*>(rhs);
    }
    inline const wgpu::Future* ToCppAPI(const Future* rhs) {
        return reinterpret_cast<const wgpu::Future*>(rhs);
    }
    inline wgpu::Future* ToCppAPI(Future* rhs) {
        return reinterpret_cast<wgpu::Future*>(rhs);
    }
    inline const Future* FromCppAPI(const wgpu::Future* rhs) {
        return reinterpret_cast<const Future*>(rhs);
    }
    inline Future* FromCppAPI(wgpu::Future* rhs) {
        return reinterpret_cast<Future*>(rhs);
    }

    inline const WGPUInstanceFeatures* ToAPI(const InstanceFeatures* rhs) {
        return reinterpret_cast<const WGPUInstanceFeatures*>(rhs);
    }
    inline WGPUInstanceFeatures* ToAPI(InstanceFeatures* rhs) {
        return reinterpret_cast<WGPUInstanceFeatures*>(rhs);
    }
    inline const InstanceFeatures* FromAPI(const WGPUInstanceFeatures* rhs) {
        return reinterpret_cast<const InstanceFeatures*>(rhs);
    }
    inline InstanceFeatures* FromAPI(WGPUInstanceFeatures* rhs) {
        return reinterpret_cast<InstanceFeatures*>(rhs);
    }
    inline const wgpu::InstanceFeatures* ToCppAPI(const InstanceFeatures* rhs) {
        return reinterpret_cast<const wgpu::InstanceFeatures*>(rhs);
    }
    inline wgpu::InstanceFeatures* ToCppAPI(InstanceFeatures* rhs) {
        return reinterpret_cast<wgpu::InstanceFeatures*>(rhs);
    }
    inline const InstanceFeatures* FromCppAPI(const wgpu::InstanceFeatures* rhs) {
        return reinterpret_cast<const InstanceFeatures*>(rhs);
    }
    inline InstanceFeatures* FromCppAPI(wgpu::InstanceFeatures* rhs) {
        return reinterpret_cast<InstanceFeatures*>(rhs);
    }

    inline const WGPULimits* ToAPI(const Limits* rhs) {
        return reinterpret_cast<const WGPULimits*>(rhs);
    }
    inline WGPULimits* ToAPI(Limits* rhs) {
        return reinterpret_cast<WGPULimits*>(rhs);
    }
    inline const Limits* FromAPI(const WGPULimits* rhs) {
        return reinterpret_cast<const Limits*>(rhs);
    }
    inline Limits* FromAPI(WGPULimits* rhs) {
        return reinterpret_cast<Limits*>(rhs);
    }
    inline const wgpu::Limits* ToCppAPI(const Limits* rhs) {
        return reinterpret_cast<const wgpu::Limits*>(rhs);
    }
    inline wgpu::Limits* ToCppAPI(Limits* rhs) {
        return reinterpret_cast<wgpu::Limits*>(rhs);
    }
    inline const Limits* FromCppAPI(const wgpu::Limits* rhs) {
        return reinterpret_cast<const Limits*>(rhs);
    }
    inline Limits* FromCppAPI(wgpu::Limits* rhs) {
        return reinterpret_cast<Limits*>(rhs);
    }

    inline const WGPUMemoryHeapInfo* ToAPI(const MemoryHeapInfo* rhs) {
        return reinterpret_cast<const WGPUMemoryHeapInfo*>(rhs);
    }
    inline WGPUMemoryHeapInfo* ToAPI(MemoryHeapInfo* rhs) {
        return reinterpret_cast<WGPUMemoryHeapInfo*>(rhs);
    }
    inline const MemoryHeapInfo* FromAPI(const WGPUMemoryHeapInfo* rhs) {
        return reinterpret_cast<const MemoryHeapInfo*>(rhs);
    }
    inline MemoryHeapInfo* FromAPI(WGPUMemoryHeapInfo* rhs) {
        return reinterpret_cast<MemoryHeapInfo*>(rhs);
    }
    inline const wgpu::MemoryHeapInfo* ToCppAPI(const MemoryHeapInfo* rhs) {
        return reinterpret_cast<const wgpu::MemoryHeapInfo*>(rhs);
    }
    inline wgpu::MemoryHeapInfo* ToCppAPI(MemoryHeapInfo* rhs) {
        return reinterpret_cast<wgpu::MemoryHeapInfo*>(rhs);
    }
    inline const MemoryHeapInfo* FromCppAPI(const wgpu::MemoryHeapInfo* rhs) {
        return reinterpret_cast<const MemoryHeapInfo*>(rhs);
    }
    inline MemoryHeapInfo* FromCppAPI(wgpu::MemoryHeapInfo* rhs) {
        return reinterpret_cast<MemoryHeapInfo*>(rhs);
    }

    inline const WGPUMultisampleState* ToAPI(const MultisampleState* rhs) {
        return reinterpret_cast<const WGPUMultisampleState*>(rhs);
    }
    inline WGPUMultisampleState* ToAPI(MultisampleState* rhs) {
        return reinterpret_cast<WGPUMultisampleState*>(rhs);
    }
    inline const MultisampleState* FromAPI(const WGPUMultisampleState* rhs) {
        return reinterpret_cast<const MultisampleState*>(rhs);
    }
    inline MultisampleState* FromAPI(WGPUMultisampleState* rhs) {
        return reinterpret_cast<MultisampleState*>(rhs);
    }
    inline const wgpu::MultisampleState* ToCppAPI(const MultisampleState* rhs) {
        return reinterpret_cast<const wgpu::MultisampleState*>(rhs);
    }
    inline wgpu::MultisampleState* ToCppAPI(MultisampleState* rhs) {
        return reinterpret_cast<wgpu::MultisampleState*>(rhs);
    }
    inline const MultisampleState* FromCppAPI(const wgpu::MultisampleState* rhs) {
        return reinterpret_cast<const MultisampleState*>(rhs);
    }
    inline MultisampleState* FromCppAPI(wgpu::MultisampleState* rhs) {
        return reinterpret_cast<MultisampleState*>(rhs);
    }

    inline const WGPUOrigin2D* ToAPI(const Origin2D* rhs) {
        return reinterpret_cast<const WGPUOrigin2D*>(rhs);
    }
    inline WGPUOrigin2D* ToAPI(Origin2D* rhs) {
        return reinterpret_cast<WGPUOrigin2D*>(rhs);
    }
    inline const Origin2D* FromAPI(const WGPUOrigin2D* rhs) {
        return reinterpret_cast<const Origin2D*>(rhs);
    }
    inline Origin2D* FromAPI(WGPUOrigin2D* rhs) {
        return reinterpret_cast<Origin2D*>(rhs);
    }
    inline const wgpu::Origin2D* ToCppAPI(const Origin2D* rhs) {
        return reinterpret_cast<const wgpu::Origin2D*>(rhs);
    }
    inline wgpu::Origin2D* ToCppAPI(Origin2D* rhs) {
        return reinterpret_cast<wgpu::Origin2D*>(rhs);
    }
    inline const Origin2D* FromCppAPI(const wgpu::Origin2D* rhs) {
        return reinterpret_cast<const Origin2D*>(rhs);
    }
    inline Origin2D* FromCppAPI(wgpu::Origin2D* rhs) {
        return reinterpret_cast<Origin2D*>(rhs);
    }

    inline const WGPUOrigin3D* ToAPI(const Origin3D* rhs) {
        return reinterpret_cast<const WGPUOrigin3D*>(rhs);
    }
    inline WGPUOrigin3D* ToAPI(Origin3D* rhs) {
        return reinterpret_cast<WGPUOrigin3D*>(rhs);
    }
    inline const Origin3D* FromAPI(const WGPUOrigin3D* rhs) {
        return reinterpret_cast<const Origin3D*>(rhs);
    }
    inline Origin3D* FromAPI(WGPUOrigin3D* rhs) {
        return reinterpret_cast<Origin3D*>(rhs);
    }
    inline const wgpu::Origin3D* ToCppAPI(const Origin3D* rhs) {
        return reinterpret_cast<const wgpu::Origin3D*>(rhs);
    }
    inline wgpu::Origin3D* ToCppAPI(Origin3D* rhs) {
        return reinterpret_cast<wgpu::Origin3D*>(rhs);
    }
    inline const Origin3D* FromCppAPI(const wgpu::Origin3D* rhs) {
        return reinterpret_cast<const Origin3D*>(rhs);
    }
    inline Origin3D* FromCppAPI(wgpu::Origin3D* rhs) {
        return reinterpret_cast<Origin3D*>(rhs);
    }

    inline const WGPUPipelineLayoutDescriptor* ToAPI(const PipelineLayoutDescriptor* rhs) {
        return reinterpret_cast<const WGPUPipelineLayoutDescriptor*>(rhs);
    }
    inline WGPUPipelineLayoutDescriptor* ToAPI(PipelineLayoutDescriptor* rhs) {
        return reinterpret_cast<WGPUPipelineLayoutDescriptor*>(rhs);
    }
    inline const PipelineLayoutDescriptor* FromAPI(const WGPUPipelineLayoutDescriptor* rhs) {
        return reinterpret_cast<const PipelineLayoutDescriptor*>(rhs);
    }
    inline PipelineLayoutDescriptor* FromAPI(WGPUPipelineLayoutDescriptor* rhs) {
        return reinterpret_cast<PipelineLayoutDescriptor*>(rhs);
    }
    inline const wgpu::PipelineLayoutDescriptor* ToCppAPI(const PipelineLayoutDescriptor* rhs) {
        return reinterpret_cast<const wgpu::PipelineLayoutDescriptor*>(rhs);
    }
    inline wgpu::PipelineLayoutDescriptor* ToCppAPI(PipelineLayoutDescriptor* rhs) {
        return reinterpret_cast<wgpu::PipelineLayoutDescriptor*>(rhs);
    }
    inline const PipelineLayoutDescriptor* FromCppAPI(const wgpu::PipelineLayoutDescriptor* rhs) {
        return reinterpret_cast<const PipelineLayoutDescriptor*>(rhs);
    }
    inline PipelineLayoutDescriptor* FromCppAPI(wgpu::PipelineLayoutDescriptor* rhs) {
        return reinterpret_cast<PipelineLayoutDescriptor*>(rhs);
    }

    inline const WGPUPipelineLayoutStorageAttachment* ToAPI(const PipelineLayoutStorageAttachment* rhs) {
        return reinterpret_cast<const WGPUPipelineLayoutStorageAttachment*>(rhs);
    }
    inline WGPUPipelineLayoutStorageAttachment* ToAPI(PipelineLayoutStorageAttachment* rhs) {
        return reinterpret_cast<WGPUPipelineLayoutStorageAttachment*>(rhs);
    }
    inline const PipelineLayoutStorageAttachment* FromAPI(const WGPUPipelineLayoutStorageAttachment* rhs) {
        return reinterpret_cast<const PipelineLayoutStorageAttachment*>(rhs);
    }
    inline PipelineLayoutStorageAttachment* FromAPI(WGPUPipelineLayoutStorageAttachment* rhs) {
        return reinterpret_cast<PipelineLayoutStorageAttachment*>(rhs);
    }
    inline const wgpu::PipelineLayoutStorageAttachment* ToCppAPI(const PipelineLayoutStorageAttachment* rhs) {
        return reinterpret_cast<const wgpu::PipelineLayoutStorageAttachment*>(rhs);
    }
    inline wgpu::PipelineLayoutStorageAttachment* ToCppAPI(PipelineLayoutStorageAttachment* rhs) {
        return reinterpret_cast<wgpu::PipelineLayoutStorageAttachment*>(rhs);
    }
    inline const PipelineLayoutStorageAttachment* FromCppAPI(const wgpu::PipelineLayoutStorageAttachment* rhs) {
        return reinterpret_cast<const PipelineLayoutStorageAttachment*>(rhs);
    }
    inline PipelineLayoutStorageAttachment* FromCppAPI(wgpu::PipelineLayoutStorageAttachment* rhs) {
        return reinterpret_cast<PipelineLayoutStorageAttachment*>(rhs);
    }

    inline const WGPUPopErrorScopeCallbackInfo* ToAPI(const PopErrorScopeCallbackInfo* rhs) {
        return reinterpret_cast<const WGPUPopErrorScopeCallbackInfo*>(rhs);
    }
    inline WGPUPopErrorScopeCallbackInfo* ToAPI(PopErrorScopeCallbackInfo* rhs) {
        return reinterpret_cast<WGPUPopErrorScopeCallbackInfo*>(rhs);
    }
    inline const PopErrorScopeCallbackInfo* FromAPI(const WGPUPopErrorScopeCallbackInfo* rhs) {
        return reinterpret_cast<const PopErrorScopeCallbackInfo*>(rhs);
    }
    inline PopErrorScopeCallbackInfo* FromAPI(WGPUPopErrorScopeCallbackInfo* rhs) {
        return reinterpret_cast<PopErrorScopeCallbackInfo*>(rhs);
    }
    inline const wgpu::PopErrorScopeCallbackInfo* ToCppAPI(const PopErrorScopeCallbackInfo* rhs) {
        return reinterpret_cast<const wgpu::PopErrorScopeCallbackInfo*>(rhs);
    }
    inline wgpu::PopErrorScopeCallbackInfo* ToCppAPI(PopErrorScopeCallbackInfo* rhs) {
        return reinterpret_cast<wgpu::PopErrorScopeCallbackInfo*>(rhs);
    }
    inline const PopErrorScopeCallbackInfo* FromCppAPI(const wgpu::PopErrorScopeCallbackInfo* rhs) {
        return reinterpret_cast<const PopErrorScopeCallbackInfo*>(rhs);
    }
    inline PopErrorScopeCallbackInfo* FromCppAPI(wgpu::PopErrorScopeCallbackInfo* rhs) {
        return reinterpret_cast<PopErrorScopeCallbackInfo*>(rhs);
    }

    inline const WGPUPrimitiveDepthClipControl* ToAPI(const PrimitiveDepthClipControl* rhs) {
        return reinterpret_cast<const WGPUPrimitiveDepthClipControl*>(rhs);
    }
    inline WGPUPrimitiveDepthClipControl* ToAPI(PrimitiveDepthClipControl* rhs) {
        return reinterpret_cast<WGPUPrimitiveDepthClipControl*>(rhs);
    }
    inline const PrimitiveDepthClipControl* FromAPI(const WGPUPrimitiveDepthClipControl* rhs) {
        return reinterpret_cast<const PrimitiveDepthClipControl*>(rhs);
    }
    inline PrimitiveDepthClipControl* FromAPI(WGPUPrimitiveDepthClipControl* rhs) {
        return reinterpret_cast<PrimitiveDepthClipControl*>(rhs);
    }
    inline const wgpu::PrimitiveDepthClipControl* ToCppAPI(const PrimitiveDepthClipControl* rhs) {
        return reinterpret_cast<const wgpu::PrimitiveDepthClipControl*>(rhs);
    }
    inline wgpu::PrimitiveDepthClipControl* ToCppAPI(PrimitiveDepthClipControl* rhs) {
        return reinterpret_cast<wgpu::PrimitiveDepthClipControl*>(rhs);
    }
    inline const PrimitiveDepthClipControl* FromCppAPI(const wgpu::PrimitiveDepthClipControl* rhs) {
        return reinterpret_cast<const PrimitiveDepthClipControl*>(rhs);
    }
    inline PrimitiveDepthClipControl* FromCppAPI(wgpu::PrimitiveDepthClipControl* rhs) {
        return reinterpret_cast<PrimitiveDepthClipControl*>(rhs);
    }

    inline const WGPUPrimitiveState* ToAPI(const PrimitiveState* rhs) {
        return reinterpret_cast<const WGPUPrimitiveState*>(rhs);
    }
    inline WGPUPrimitiveState* ToAPI(PrimitiveState* rhs) {
        return reinterpret_cast<WGPUPrimitiveState*>(rhs);
    }
    inline const PrimitiveState* FromAPI(const WGPUPrimitiveState* rhs) {
        return reinterpret_cast<const PrimitiveState*>(rhs);
    }
    inline PrimitiveState* FromAPI(WGPUPrimitiveState* rhs) {
        return reinterpret_cast<PrimitiveState*>(rhs);
    }
    inline const wgpu::PrimitiveState* ToCppAPI(const PrimitiveState* rhs) {
        return reinterpret_cast<const wgpu::PrimitiveState*>(rhs);
    }
    inline wgpu::PrimitiveState* ToCppAPI(PrimitiveState* rhs) {
        return reinterpret_cast<wgpu::PrimitiveState*>(rhs);
    }
    inline const PrimitiveState* FromCppAPI(const wgpu::PrimitiveState* rhs) {
        return reinterpret_cast<const PrimitiveState*>(rhs);
    }
    inline PrimitiveState* FromCppAPI(wgpu::PrimitiveState* rhs) {
        return reinterpret_cast<PrimitiveState*>(rhs);
    }

    inline const WGPUQuerySetDescriptor* ToAPI(const QuerySetDescriptor* rhs) {
        return reinterpret_cast<const WGPUQuerySetDescriptor*>(rhs);
    }
    inline WGPUQuerySetDescriptor* ToAPI(QuerySetDescriptor* rhs) {
        return reinterpret_cast<WGPUQuerySetDescriptor*>(rhs);
    }
    inline const QuerySetDescriptor* FromAPI(const WGPUQuerySetDescriptor* rhs) {
        return reinterpret_cast<const QuerySetDescriptor*>(rhs);
    }
    inline QuerySetDescriptor* FromAPI(WGPUQuerySetDescriptor* rhs) {
        return reinterpret_cast<QuerySetDescriptor*>(rhs);
    }
    inline const wgpu::QuerySetDescriptor* ToCppAPI(const QuerySetDescriptor* rhs) {
        return reinterpret_cast<const wgpu::QuerySetDescriptor*>(rhs);
    }
    inline wgpu::QuerySetDescriptor* ToCppAPI(QuerySetDescriptor* rhs) {
        return reinterpret_cast<wgpu::QuerySetDescriptor*>(rhs);
    }
    inline const QuerySetDescriptor* FromCppAPI(const wgpu::QuerySetDescriptor* rhs) {
        return reinterpret_cast<const QuerySetDescriptor*>(rhs);
    }
    inline QuerySetDescriptor* FromCppAPI(wgpu::QuerySetDescriptor* rhs) {
        return reinterpret_cast<QuerySetDescriptor*>(rhs);
    }

    inline const WGPUQueueDescriptor* ToAPI(const QueueDescriptor* rhs) {
        return reinterpret_cast<const WGPUQueueDescriptor*>(rhs);
    }
    inline WGPUQueueDescriptor* ToAPI(QueueDescriptor* rhs) {
        return reinterpret_cast<WGPUQueueDescriptor*>(rhs);
    }
    inline const QueueDescriptor* FromAPI(const WGPUQueueDescriptor* rhs) {
        return reinterpret_cast<const QueueDescriptor*>(rhs);
    }
    inline QueueDescriptor* FromAPI(WGPUQueueDescriptor* rhs) {
        return reinterpret_cast<QueueDescriptor*>(rhs);
    }
    inline const wgpu::QueueDescriptor* ToCppAPI(const QueueDescriptor* rhs) {
        return reinterpret_cast<const wgpu::QueueDescriptor*>(rhs);
    }
    inline wgpu::QueueDescriptor* ToCppAPI(QueueDescriptor* rhs) {
        return reinterpret_cast<wgpu::QueueDescriptor*>(rhs);
    }
    inline const QueueDescriptor* FromCppAPI(const wgpu::QueueDescriptor* rhs) {
        return reinterpret_cast<const QueueDescriptor*>(rhs);
    }
    inline QueueDescriptor* FromCppAPI(wgpu::QueueDescriptor* rhs) {
        return reinterpret_cast<QueueDescriptor*>(rhs);
    }

    inline const WGPUQueueWorkDoneCallbackInfo* ToAPI(const QueueWorkDoneCallbackInfo* rhs) {
        return reinterpret_cast<const WGPUQueueWorkDoneCallbackInfo*>(rhs);
    }
    inline WGPUQueueWorkDoneCallbackInfo* ToAPI(QueueWorkDoneCallbackInfo* rhs) {
        return reinterpret_cast<WGPUQueueWorkDoneCallbackInfo*>(rhs);
    }
    inline const QueueWorkDoneCallbackInfo* FromAPI(const WGPUQueueWorkDoneCallbackInfo* rhs) {
        return reinterpret_cast<const QueueWorkDoneCallbackInfo*>(rhs);
    }
    inline QueueWorkDoneCallbackInfo* FromAPI(WGPUQueueWorkDoneCallbackInfo* rhs) {
        return reinterpret_cast<QueueWorkDoneCallbackInfo*>(rhs);
    }
    inline const wgpu::QueueWorkDoneCallbackInfo* ToCppAPI(const QueueWorkDoneCallbackInfo* rhs) {
        return reinterpret_cast<const wgpu::QueueWorkDoneCallbackInfo*>(rhs);
    }
    inline wgpu::QueueWorkDoneCallbackInfo* ToCppAPI(QueueWorkDoneCallbackInfo* rhs) {
        return reinterpret_cast<wgpu::QueueWorkDoneCallbackInfo*>(rhs);
    }
    inline const QueueWorkDoneCallbackInfo* FromCppAPI(const wgpu::QueueWorkDoneCallbackInfo* rhs) {
        return reinterpret_cast<const QueueWorkDoneCallbackInfo*>(rhs);
    }
    inline QueueWorkDoneCallbackInfo* FromCppAPI(wgpu::QueueWorkDoneCallbackInfo* rhs) {
        return reinterpret_cast<QueueWorkDoneCallbackInfo*>(rhs);
    }

    inline const WGPURenderBundleDescriptor* ToAPI(const RenderBundleDescriptor* rhs) {
        return reinterpret_cast<const WGPURenderBundleDescriptor*>(rhs);
    }
    inline WGPURenderBundleDescriptor* ToAPI(RenderBundleDescriptor* rhs) {
        return reinterpret_cast<WGPURenderBundleDescriptor*>(rhs);
    }
    inline const RenderBundleDescriptor* FromAPI(const WGPURenderBundleDescriptor* rhs) {
        return reinterpret_cast<const RenderBundleDescriptor*>(rhs);
    }
    inline RenderBundleDescriptor* FromAPI(WGPURenderBundleDescriptor* rhs) {
        return reinterpret_cast<RenderBundleDescriptor*>(rhs);
    }
    inline const wgpu::RenderBundleDescriptor* ToCppAPI(const RenderBundleDescriptor* rhs) {
        return reinterpret_cast<const wgpu::RenderBundleDescriptor*>(rhs);
    }
    inline wgpu::RenderBundleDescriptor* ToCppAPI(RenderBundleDescriptor* rhs) {
        return reinterpret_cast<wgpu::RenderBundleDescriptor*>(rhs);
    }
    inline const RenderBundleDescriptor* FromCppAPI(const wgpu::RenderBundleDescriptor* rhs) {
        return reinterpret_cast<const RenderBundleDescriptor*>(rhs);
    }
    inline RenderBundleDescriptor* FromCppAPI(wgpu::RenderBundleDescriptor* rhs) {
        return reinterpret_cast<RenderBundleDescriptor*>(rhs);
    }

    inline const WGPURenderBundleEncoderDescriptor* ToAPI(const RenderBundleEncoderDescriptor* rhs) {
        return reinterpret_cast<const WGPURenderBundleEncoderDescriptor*>(rhs);
    }
    inline WGPURenderBundleEncoderDescriptor* ToAPI(RenderBundleEncoderDescriptor* rhs) {
        return reinterpret_cast<WGPURenderBundleEncoderDescriptor*>(rhs);
    }
    inline const RenderBundleEncoderDescriptor* FromAPI(const WGPURenderBundleEncoderDescriptor* rhs) {
        return reinterpret_cast<const RenderBundleEncoderDescriptor*>(rhs);
    }
    inline RenderBundleEncoderDescriptor* FromAPI(WGPURenderBundleEncoderDescriptor* rhs) {
        return reinterpret_cast<RenderBundleEncoderDescriptor*>(rhs);
    }
    inline const wgpu::RenderBundleEncoderDescriptor* ToCppAPI(const RenderBundleEncoderDescriptor* rhs) {
        return reinterpret_cast<const wgpu::RenderBundleEncoderDescriptor*>(rhs);
    }
    inline wgpu::RenderBundleEncoderDescriptor* ToCppAPI(RenderBundleEncoderDescriptor* rhs) {
        return reinterpret_cast<wgpu::RenderBundleEncoderDescriptor*>(rhs);
    }
    inline const RenderBundleEncoderDescriptor* FromCppAPI(const wgpu::RenderBundleEncoderDescriptor* rhs) {
        return reinterpret_cast<const RenderBundleEncoderDescriptor*>(rhs);
    }
    inline RenderBundleEncoderDescriptor* FromCppAPI(wgpu::RenderBundleEncoderDescriptor* rhs) {
        return reinterpret_cast<RenderBundleEncoderDescriptor*>(rhs);
    }

    inline const WGPURenderPassDepthStencilAttachment* ToAPI(const RenderPassDepthStencilAttachment* rhs) {
        return reinterpret_cast<const WGPURenderPassDepthStencilAttachment*>(rhs);
    }
    inline WGPURenderPassDepthStencilAttachment* ToAPI(RenderPassDepthStencilAttachment* rhs) {
        return reinterpret_cast<WGPURenderPassDepthStencilAttachment*>(rhs);
    }
    inline const RenderPassDepthStencilAttachment* FromAPI(const WGPURenderPassDepthStencilAttachment* rhs) {
        return reinterpret_cast<const RenderPassDepthStencilAttachment*>(rhs);
    }
    inline RenderPassDepthStencilAttachment* FromAPI(WGPURenderPassDepthStencilAttachment* rhs) {
        return reinterpret_cast<RenderPassDepthStencilAttachment*>(rhs);
    }
    inline const wgpu::RenderPassDepthStencilAttachment* ToCppAPI(const RenderPassDepthStencilAttachment* rhs) {
        return reinterpret_cast<const wgpu::RenderPassDepthStencilAttachment*>(rhs);
    }
    inline wgpu::RenderPassDepthStencilAttachment* ToCppAPI(RenderPassDepthStencilAttachment* rhs) {
        return reinterpret_cast<wgpu::RenderPassDepthStencilAttachment*>(rhs);
    }
    inline const RenderPassDepthStencilAttachment* FromCppAPI(const wgpu::RenderPassDepthStencilAttachment* rhs) {
        return reinterpret_cast<const RenderPassDepthStencilAttachment*>(rhs);
    }
    inline RenderPassDepthStencilAttachment* FromCppAPI(wgpu::RenderPassDepthStencilAttachment* rhs) {
        return reinterpret_cast<RenderPassDepthStencilAttachment*>(rhs);
    }

    inline const WGPURenderPassDescriptorMaxDrawCount* ToAPI(const RenderPassDescriptorMaxDrawCount* rhs) {
        return reinterpret_cast<const WGPURenderPassDescriptorMaxDrawCount*>(rhs);
    }
    inline WGPURenderPassDescriptorMaxDrawCount* ToAPI(RenderPassDescriptorMaxDrawCount* rhs) {
        return reinterpret_cast<WGPURenderPassDescriptorMaxDrawCount*>(rhs);
    }
    inline const RenderPassDescriptorMaxDrawCount* FromAPI(const WGPURenderPassDescriptorMaxDrawCount* rhs) {
        return reinterpret_cast<const RenderPassDescriptorMaxDrawCount*>(rhs);
    }
    inline RenderPassDescriptorMaxDrawCount* FromAPI(WGPURenderPassDescriptorMaxDrawCount* rhs) {
        return reinterpret_cast<RenderPassDescriptorMaxDrawCount*>(rhs);
    }
    inline const wgpu::RenderPassDescriptorMaxDrawCount* ToCppAPI(const RenderPassDescriptorMaxDrawCount* rhs) {
        return reinterpret_cast<const wgpu::RenderPassDescriptorMaxDrawCount*>(rhs);
    }
    inline wgpu::RenderPassDescriptorMaxDrawCount* ToCppAPI(RenderPassDescriptorMaxDrawCount* rhs) {
        return reinterpret_cast<wgpu::RenderPassDescriptorMaxDrawCount*>(rhs);
    }
    inline const RenderPassDescriptorMaxDrawCount* FromCppAPI(const wgpu::RenderPassDescriptorMaxDrawCount* rhs) {
        return reinterpret_cast<const RenderPassDescriptorMaxDrawCount*>(rhs);
    }
    inline RenderPassDescriptorMaxDrawCount* FromCppAPI(wgpu::RenderPassDescriptorMaxDrawCount* rhs) {
        return reinterpret_cast<RenderPassDescriptorMaxDrawCount*>(rhs);
    }

    inline const WGPURenderPassTimestampWrites* ToAPI(const RenderPassTimestampWrites* rhs) {
        return reinterpret_cast<const WGPURenderPassTimestampWrites*>(rhs);
    }
    inline WGPURenderPassTimestampWrites* ToAPI(RenderPassTimestampWrites* rhs) {
        return reinterpret_cast<WGPURenderPassTimestampWrites*>(rhs);
    }
    inline const RenderPassTimestampWrites* FromAPI(const WGPURenderPassTimestampWrites* rhs) {
        return reinterpret_cast<const RenderPassTimestampWrites*>(rhs);
    }
    inline RenderPassTimestampWrites* FromAPI(WGPURenderPassTimestampWrites* rhs) {
        return reinterpret_cast<RenderPassTimestampWrites*>(rhs);
    }
    inline const wgpu::RenderPassTimestampWrites* ToCppAPI(const RenderPassTimestampWrites* rhs) {
        return reinterpret_cast<const wgpu::RenderPassTimestampWrites*>(rhs);
    }
    inline wgpu::RenderPassTimestampWrites* ToCppAPI(RenderPassTimestampWrites* rhs) {
        return reinterpret_cast<wgpu::RenderPassTimestampWrites*>(rhs);
    }
    inline const RenderPassTimestampWrites* FromCppAPI(const wgpu::RenderPassTimestampWrites* rhs) {
        return reinterpret_cast<const RenderPassTimestampWrites*>(rhs);
    }
    inline RenderPassTimestampWrites* FromCppAPI(wgpu::RenderPassTimestampWrites* rhs) {
        return reinterpret_cast<RenderPassTimestampWrites*>(rhs);
    }

    inline const WGPURequestAdapterCallbackInfo* ToAPI(const RequestAdapterCallbackInfo* rhs) {
        return reinterpret_cast<const WGPURequestAdapterCallbackInfo*>(rhs);
    }
    inline WGPURequestAdapterCallbackInfo* ToAPI(RequestAdapterCallbackInfo* rhs) {
        return reinterpret_cast<WGPURequestAdapterCallbackInfo*>(rhs);
    }
    inline const RequestAdapterCallbackInfo* FromAPI(const WGPURequestAdapterCallbackInfo* rhs) {
        return reinterpret_cast<const RequestAdapterCallbackInfo*>(rhs);
    }
    inline RequestAdapterCallbackInfo* FromAPI(WGPURequestAdapterCallbackInfo* rhs) {
        return reinterpret_cast<RequestAdapterCallbackInfo*>(rhs);
    }
    inline const wgpu::RequestAdapterCallbackInfo* ToCppAPI(const RequestAdapterCallbackInfo* rhs) {
        return reinterpret_cast<const wgpu::RequestAdapterCallbackInfo*>(rhs);
    }
    inline wgpu::RequestAdapterCallbackInfo* ToCppAPI(RequestAdapterCallbackInfo* rhs) {
        return reinterpret_cast<wgpu::RequestAdapterCallbackInfo*>(rhs);
    }
    inline const RequestAdapterCallbackInfo* FromCppAPI(const wgpu::RequestAdapterCallbackInfo* rhs) {
        return reinterpret_cast<const RequestAdapterCallbackInfo*>(rhs);
    }
    inline RequestAdapterCallbackInfo* FromCppAPI(wgpu::RequestAdapterCallbackInfo* rhs) {
        return reinterpret_cast<RequestAdapterCallbackInfo*>(rhs);
    }

    inline const WGPURequestAdapterOptions* ToAPI(const RequestAdapterOptions* rhs) {
        return reinterpret_cast<const WGPURequestAdapterOptions*>(rhs);
    }
    inline WGPURequestAdapterOptions* ToAPI(RequestAdapterOptions* rhs) {
        return reinterpret_cast<WGPURequestAdapterOptions*>(rhs);
    }
    inline const RequestAdapterOptions* FromAPI(const WGPURequestAdapterOptions* rhs) {
        return reinterpret_cast<const RequestAdapterOptions*>(rhs);
    }
    inline RequestAdapterOptions* FromAPI(WGPURequestAdapterOptions* rhs) {
        return reinterpret_cast<RequestAdapterOptions*>(rhs);
    }
    inline const wgpu::RequestAdapterOptions* ToCppAPI(const RequestAdapterOptions* rhs) {
        return reinterpret_cast<const wgpu::RequestAdapterOptions*>(rhs);
    }
    inline wgpu::RequestAdapterOptions* ToCppAPI(RequestAdapterOptions* rhs) {
        return reinterpret_cast<wgpu::RequestAdapterOptions*>(rhs);
    }
    inline const RequestAdapterOptions* FromCppAPI(const wgpu::RequestAdapterOptions* rhs) {
        return reinterpret_cast<const RequestAdapterOptions*>(rhs);
    }
    inline RequestAdapterOptions* FromCppAPI(wgpu::RequestAdapterOptions* rhs) {
        return reinterpret_cast<RequestAdapterOptions*>(rhs);
    }

    inline const WGPURequestDeviceCallbackInfo* ToAPI(const RequestDeviceCallbackInfo* rhs) {
        return reinterpret_cast<const WGPURequestDeviceCallbackInfo*>(rhs);
    }
    inline WGPURequestDeviceCallbackInfo* ToAPI(RequestDeviceCallbackInfo* rhs) {
        return reinterpret_cast<WGPURequestDeviceCallbackInfo*>(rhs);
    }
    inline const RequestDeviceCallbackInfo* FromAPI(const WGPURequestDeviceCallbackInfo* rhs) {
        return reinterpret_cast<const RequestDeviceCallbackInfo*>(rhs);
    }
    inline RequestDeviceCallbackInfo* FromAPI(WGPURequestDeviceCallbackInfo* rhs) {
        return reinterpret_cast<RequestDeviceCallbackInfo*>(rhs);
    }
    inline const wgpu::RequestDeviceCallbackInfo* ToCppAPI(const RequestDeviceCallbackInfo* rhs) {
        return reinterpret_cast<const wgpu::RequestDeviceCallbackInfo*>(rhs);
    }
    inline wgpu::RequestDeviceCallbackInfo* ToCppAPI(RequestDeviceCallbackInfo* rhs) {
        return reinterpret_cast<wgpu::RequestDeviceCallbackInfo*>(rhs);
    }
    inline const RequestDeviceCallbackInfo* FromCppAPI(const wgpu::RequestDeviceCallbackInfo* rhs) {
        return reinterpret_cast<const RequestDeviceCallbackInfo*>(rhs);
    }
    inline RequestDeviceCallbackInfo* FromCppAPI(wgpu::RequestDeviceCallbackInfo* rhs) {
        return reinterpret_cast<RequestDeviceCallbackInfo*>(rhs);
    }

    inline const WGPUSamplerBindingLayout* ToAPI(const SamplerBindingLayout* rhs) {
        return reinterpret_cast<const WGPUSamplerBindingLayout*>(rhs);
    }
    inline WGPUSamplerBindingLayout* ToAPI(SamplerBindingLayout* rhs) {
        return reinterpret_cast<WGPUSamplerBindingLayout*>(rhs);
    }
    inline const SamplerBindingLayout* FromAPI(const WGPUSamplerBindingLayout* rhs) {
        return reinterpret_cast<const SamplerBindingLayout*>(rhs);
    }
    inline SamplerBindingLayout* FromAPI(WGPUSamplerBindingLayout* rhs) {
        return reinterpret_cast<SamplerBindingLayout*>(rhs);
    }
    inline const wgpu::SamplerBindingLayout* ToCppAPI(const SamplerBindingLayout* rhs) {
        return reinterpret_cast<const wgpu::SamplerBindingLayout*>(rhs);
    }
    inline wgpu::SamplerBindingLayout* ToCppAPI(SamplerBindingLayout* rhs) {
        return reinterpret_cast<wgpu::SamplerBindingLayout*>(rhs);
    }
    inline const SamplerBindingLayout* FromCppAPI(const wgpu::SamplerBindingLayout* rhs) {
        return reinterpret_cast<const SamplerBindingLayout*>(rhs);
    }
    inline SamplerBindingLayout* FromCppAPI(wgpu::SamplerBindingLayout* rhs) {
        return reinterpret_cast<SamplerBindingLayout*>(rhs);
    }

    inline const WGPUSamplerDescriptor* ToAPI(const SamplerDescriptor* rhs) {
        return reinterpret_cast<const WGPUSamplerDescriptor*>(rhs);
    }
    inline WGPUSamplerDescriptor* ToAPI(SamplerDescriptor* rhs) {
        return reinterpret_cast<WGPUSamplerDescriptor*>(rhs);
    }
    inline const SamplerDescriptor* FromAPI(const WGPUSamplerDescriptor* rhs) {
        return reinterpret_cast<const SamplerDescriptor*>(rhs);
    }
    inline SamplerDescriptor* FromAPI(WGPUSamplerDescriptor* rhs) {
        return reinterpret_cast<SamplerDescriptor*>(rhs);
    }
    inline const wgpu::SamplerDescriptor* ToCppAPI(const SamplerDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SamplerDescriptor*>(rhs);
    }
    inline wgpu::SamplerDescriptor* ToCppAPI(SamplerDescriptor* rhs) {
        return reinterpret_cast<wgpu::SamplerDescriptor*>(rhs);
    }
    inline const SamplerDescriptor* FromCppAPI(const wgpu::SamplerDescriptor* rhs) {
        return reinterpret_cast<const SamplerDescriptor*>(rhs);
    }
    inline SamplerDescriptor* FromCppAPI(wgpu::SamplerDescriptor* rhs) {
        return reinterpret_cast<SamplerDescriptor*>(rhs);
    }

    inline const WGPUShaderModuleSPIRVDescriptor* ToAPI(const ShaderModuleSPIRVDescriptor* rhs) {
        return reinterpret_cast<const WGPUShaderModuleSPIRVDescriptor*>(rhs);
    }
    inline WGPUShaderModuleSPIRVDescriptor* ToAPI(ShaderModuleSPIRVDescriptor* rhs) {
        return reinterpret_cast<WGPUShaderModuleSPIRVDescriptor*>(rhs);
    }
    inline const ShaderModuleSPIRVDescriptor* FromAPI(const WGPUShaderModuleSPIRVDescriptor* rhs) {
        return reinterpret_cast<const ShaderModuleSPIRVDescriptor*>(rhs);
    }
    inline ShaderModuleSPIRVDescriptor* FromAPI(WGPUShaderModuleSPIRVDescriptor* rhs) {
        return reinterpret_cast<ShaderModuleSPIRVDescriptor*>(rhs);
    }
    inline const wgpu::ShaderModuleSPIRVDescriptor* ToCppAPI(const ShaderModuleSPIRVDescriptor* rhs) {
        return reinterpret_cast<const wgpu::ShaderModuleSPIRVDescriptor*>(rhs);
    }
    inline wgpu::ShaderModuleSPIRVDescriptor* ToCppAPI(ShaderModuleSPIRVDescriptor* rhs) {
        return reinterpret_cast<wgpu::ShaderModuleSPIRVDescriptor*>(rhs);
    }
    inline const ShaderModuleSPIRVDescriptor* FromCppAPI(const wgpu::ShaderModuleSPIRVDescriptor* rhs) {
        return reinterpret_cast<const ShaderModuleSPIRVDescriptor*>(rhs);
    }
    inline ShaderModuleSPIRVDescriptor* FromCppAPI(wgpu::ShaderModuleSPIRVDescriptor* rhs) {
        return reinterpret_cast<ShaderModuleSPIRVDescriptor*>(rhs);
    }

    inline const WGPUShaderModuleWGSLDescriptor* ToAPI(const ShaderModuleWGSLDescriptor* rhs) {
        return reinterpret_cast<const WGPUShaderModuleWGSLDescriptor*>(rhs);
    }
    inline WGPUShaderModuleWGSLDescriptor* ToAPI(ShaderModuleWGSLDescriptor* rhs) {
        return reinterpret_cast<WGPUShaderModuleWGSLDescriptor*>(rhs);
    }
    inline const ShaderModuleWGSLDescriptor* FromAPI(const WGPUShaderModuleWGSLDescriptor* rhs) {
        return reinterpret_cast<const ShaderModuleWGSLDescriptor*>(rhs);
    }
    inline ShaderModuleWGSLDescriptor* FromAPI(WGPUShaderModuleWGSLDescriptor* rhs) {
        return reinterpret_cast<ShaderModuleWGSLDescriptor*>(rhs);
    }
    inline const wgpu::ShaderModuleWGSLDescriptor* ToCppAPI(const ShaderModuleWGSLDescriptor* rhs) {
        return reinterpret_cast<const wgpu::ShaderModuleWGSLDescriptor*>(rhs);
    }
    inline wgpu::ShaderModuleWGSLDescriptor* ToCppAPI(ShaderModuleWGSLDescriptor* rhs) {
        return reinterpret_cast<wgpu::ShaderModuleWGSLDescriptor*>(rhs);
    }
    inline const ShaderModuleWGSLDescriptor* FromCppAPI(const wgpu::ShaderModuleWGSLDescriptor* rhs) {
        return reinterpret_cast<const ShaderModuleWGSLDescriptor*>(rhs);
    }
    inline ShaderModuleWGSLDescriptor* FromCppAPI(wgpu::ShaderModuleWGSLDescriptor* rhs) {
        return reinterpret_cast<ShaderModuleWGSLDescriptor*>(rhs);
    }

    inline const WGPUShaderModuleCompilationOptions* ToAPI(const ShaderModuleCompilationOptions* rhs) {
        return reinterpret_cast<const WGPUShaderModuleCompilationOptions*>(rhs);
    }
    inline WGPUShaderModuleCompilationOptions* ToAPI(ShaderModuleCompilationOptions* rhs) {
        return reinterpret_cast<WGPUShaderModuleCompilationOptions*>(rhs);
    }
    inline const ShaderModuleCompilationOptions* FromAPI(const WGPUShaderModuleCompilationOptions* rhs) {
        return reinterpret_cast<const ShaderModuleCompilationOptions*>(rhs);
    }
    inline ShaderModuleCompilationOptions* FromAPI(WGPUShaderModuleCompilationOptions* rhs) {
        return reinterpret_cast<ShaderModuleCompilationOptions*>(rhs);
    }
    inline const wgpu::ShaderModuleCompilationOptions* ToCppAPI(const ShaderModuleCompilationOptions* rhs) {
        return reinterpret_cast<const wgpu::ShaderModuleCompilationOptions*>(rhs);
    }
    inline wgpu::ShaderModuleCompilationOptions* ToCppAPI(ShaderModuleCompilationOptions* rhs) {
        return reinterpret_cast<wgpu::ShaderModuleCompilationOptions*>(rhs);
    }
    inline const ShaderModuleCompilationOptions* FromCppAPI(const wgpu::ShaderModuleCompilationOptions* rhs) {
        return reinterpret_cast<const ShaderModuleCompilationOptions*>(rhs);
    }
    inline ShaderModuleCompilationOptions* FromCppAPI(wgpu::ShaderModuleCompilationOptions* rhs) {
        return reinterpret_cast<ShaderModuleCompilationOptions*>(rhs);
    }

    inline const WGPUShaderModuleDescriptor* ToAPI(const ShaderModuleDescriptor* rhs) {
        return reinterpret_cast<const WGPUShaderModuleDescriptor*>(rhs);
    }
    inline WGPUShaderModuleDescriptor* ToAPI(ShaderModuleDescriptor* rhs) {
        return reinterpret_cast<WGPUShaderModuleDescriptor*>(rhs);
    }
    inline const ShaderModuleDescriptor* FromAPI(const WGPUShaderModuleDescriptor* rhs) {
        return reinterpret_cast<const ShaderModuleDescriptor*>(rhs);
    }
    inline ShaderModuleDescriptor* FromAPI(WGPUShaderModuleDescriptor* rhs) {
        return reinterpret_cast<ShaderModuleDescriptor*>(rhs);
    }
    inline const wgpu::ShaderModuleDescriptor* ToCppAPI(const ShaderModuleDescriptor* rhs) {
        return reinterpret_cast<const wgpu::ShaderModuleDescriptor*>(rhs);
    }
    inline wgpu::ShaderModuleDescriptor* ToCppAPI(ShaderModuleDescriptor* rhs) {
        return reinterpret_cast<wgpu::ShaderModuleDescriptor*>(rhs);
    }
    inline const ShaderModuleDescriptor* FromCppAPI(const wgpu::ShaderModuleDescriptor* rhs) {
        return reinterpret_cast<const ShaderModuleDescriptor*>(rhs);
    }
    inline ShaderModuleDescriptor* FromCppAPI(wgpu::ShaderModuleDescriptor* rhs) {
        return reinterpret_cast<ShaderModuleDescriptor*>(rhs);
    }

    inline const WGPUSharedBufferMemoryBeginAccessDescriptor* ToAPI(const SharedBufferMemoryBeginAccessDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedBufferMemoryBeginAccessDescriptor*>(rhs);
    }
    inline WGPUSharedBufferMemoryBeginAccessDescriptor* ToAPI(SharedBufferMemoryBeginAccessDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedBufferMemoryBeginAccessDescriptor*>(rhs);
    }
    inline const SharedBufferMemoryBeginAccessDescriptor* FromAPI(const WGPUSharedBufferMemoryBeginAccessDescriptor* rhs) {
        return reinterpret_cast<const SharedBufferMemoryBeginAccessDescriptor*>(rhs);
    }
    inline SharedBufferMemoryBeginAccessDescriptor* FromAPI(WGPUSharedBufferMemoryBeginAccessDescriptor* rhs) {
        return reinterpret_cast<SharedBufferMemoryBeginAccessDescriptor*>(rhs);
    }
    inline const wgpu::SharedBufferMemoryBeginAccessDescriptor* ToCppAPI(const SharedBufferMemoryBeginAccessDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedBufferMemoryBeginAccessDescriptor*>(rhs);
    }
    inline wgpu::SharedBufferMemoryBeginAccessDescriptor* ToCppAPI(SharedBufferMemoryBeginAccessDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedBufferMemoryBeginAccessDescriptor*>(rhs);
    }
    inline const SharedBufferMemoryBeginAccessDescriptor* FromCppAPI(const wgpu::SharedBufferMemoryBeginAccessDescriptor* rhs) {
        return reinterpret_cast<const SharedBufferMemoryBeginAccessDescriptor*>(rhs);
    }
    inline SharedBufferMemoryBeginAccessDescriptor* FromCppAPI(wgpu::SharedBufferMemoryBeginAccessDescriptor* rhs) {
        return reinterpret_cast<SharedBufferMemoryBeginAccessDescriptor*>(rhs);
    }

    inline const WGPUSharedBufferMemoryDescriptor* ToAPI(const SharedBufferMemoryDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedBufferMemoryDescriptor*>(rhs);
    }
    inline WGPUSharedBufferMemoryDescriptor* ToAPI(SharedBufferMemoryDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedBufferMemoryDescriptor*>(rhs);
    }
    inline const SharedBufferMemoryDescriptor* FromAPI(const WGPUSharedBufferMemoryDescriptor* rhs) {
        return reinterpret_cast<const SharedBufferMemoryDescriptor*>(rhs);
    }
    inline SharedBufferMemoryDescriptor* FromAPI(WGPUSharedBufferMemoryDescriptor* rhs) {
        return reinterpret_cast<SharedBufferMemoryDescriptor*>(rhs);
    }
    inline const wgpu::SharedBufferMemoryDescriptor* ToCppAPI(const SharedBufferMemoryDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedBufferMemoryDescriptor*>(rhs);
    }
    inline wgpu::SharedBufferMemoryDescriptor* ToCppAPI(SharedBufferMemoryDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedBufferMemoryDescriptor*>(rhs);
    }
    inline const SharedBufferMemoryDescriptor* FromCppAPI(const wgpu::SharedBufferMemoryDescriptor* rhs) {
        return reinterpret_cast<const SharedBufferMemoryDescriptor*>(rhs);
    }
    inline SharedBufferMemoryDescriptor* FromCppAPI(wgpu::SharedBufferMemoryDescriptor* rhs) {
        return reinterpret_cast<SharedBufferMemoryDescriptor*>(rhs);
    }

    inline const WGPUSharedBufferMemoryEndAccessState* ToAPI(const SharedBufferMemoryEndAccessState* rhs) {
        return reinterpret_cast<const WGPUSharedBufferMemoryEndAccessState*>(rhs);
    }
    inline WGPUSharedBufferMemoryEndAccessState* ToAPI(SharedBufferMemoryEndAccessState* rhs) {
        return reinterpret_cast<WGPUSharedBufferMemoryEndAccessState*>(rhs);
    }
    inline const SharedBufferMemoryEndAccessState* FromAPI(const WGPUSharedBufferMemoryEndAccessState* rhs) {
        return reinterpret_cast<const SharedBufferMemoryEndAccessState*>(rhs);
    }
    inline SharedBufferMemoryEndAccessState* FromAPI(WGPUSharedBufferMemoryEndAccessState* rhs) {
        return reinterpret_cast<SharedBufferMemoryEndAccessState*>(rhs);
    }
    inline const wgpu::SharedBufferMemoryEndAccessState* ToCppAPI(const SharedBufferMemoryEndAccessState* rhs) {
        return reinterpret_cast<const wgpu::SharedBufferMemoryEndAccessState*>(rhs);
    }
    inline wgpu::SharedBufferMemoryEndAccessState* ToCppAPI(SharedBufferMemoryEndAccessState* rhs) {
        return reinterpret_cast<wgpu::SharedBufferMemoryEndAccessState*>(rhs);
    }
    inline const SharedBufferMemoryEndAccessState* FromCppAPI(const wgpu::SharedBufferMemoryEndAccessState* rhs) {
        return reinterpret_cast<const SharedBufferMemoryEndAccessState*>(rhs);
    }
    inline SharedBufferMemoryEndAccessState* FromCppAPI(wgpu::SharedBufferMemoryEndAccessState* rhs) {
        return reinterpret_cast<SharedBufferMemoryEndAccessState*>(rhs);
    }

    inline const WGPUSharedBufferMemoryProperties* ToAPI(const SharedBufferMemoryProperties* rhs) {
        return reinterpret_cast<const WGPUSharedBufferMemoryProperties*>(rhs);
    }
    inline WGPUSharedBufferMemoryProperties* ToAPI(SharedBufferMemoryProperties* rhs) {
        return reinterpret_cast<WGPUSharedBufferMemoryProperties*>(rhs);
    }
    inline const SharedBufferMemoryProperties* FromAPI(const WGPUSharedBufferMemoryProperties* rhs) {
        return reinterpret_cast<const SharedBufferMemoryProperties*>(rhs);
    }
    inline SharedBufferMemoryProperties* FromAPI(WGPUSharedBufferMemoryProperties* rhs) {
        return reinterpret_cast<SharedBufferMemoryProperties*>(rhs);
    }
    inline const wgpu::SharedBufferMemoryProperties* ToCppAPI(const SharedBufferMemoryProperties* rhs) {
        return reinterpret_cast<const wgpu::SharedBufferMemoryProperties*>(rhs);
    }
    inline wgpu::SharedBufferMemoryProperties* ToCppAPI(SharedBufferMemoryProperties* rhs) {
        return reinterpret_cast<wgpu::SharedBufferMemoryProperties*>(rhs);
    }
    inline const SharedBufferMemoryProperties* FromCppAPI(const wgpu::SharedBufferMemoryProperties* rhs) {
        return reinterpret_cast<const SharedBufferMemoryProperties*>(rhs);
    }
    inline SharedBufferMemoryProperties* FromCppAPI(wgpu::SharedBufferMemoryProperties* rhs) {
        return reinterpret_cast<SharedBufferMemoryProperties*>(rhs);
    }

    inline const WGPUSharedFenceDXGISharedHandleDescriptor* ToAPI(const SharedFenceDXGISharedHandleDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedFenceDXGISharedHandleDescriptor*>(rhs);
    }
    inline WGPUSharedFenceDXGISharedHandleDescriptor* ToAPI(SharedFenceDXGISharedHandleDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedFenceDXGISharedHandleDescriptor*>(rhs);
    }
    inline const SharedFenceDXGISharedHandleDescriptor* FromAPI(const WGPUSharedFenceDXGISharedHandleDescriptor* rhs) {
        return reinterpret_cast<const SharedFenceDXGISharedHandleDescriptor*>(rhs);
    }
    inline SharedFenceDXGISharedHandleDescriptor* FromAPI(WGPUSharedFenceDXGISharedHandleDescriptor* rhs) {
        return reinterpret_cast<SharedFenceDXGISharedHandleDescriptor*>(rhs);
    }
    inline const wgpu::SharedFenceDXGISharedHandleDescriptor* ToCppAPI(const SharedFenceDXGISharedHandleDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedFenceDXGISharedHandleDescriptor*>(rhs);
    }
    inline wgpu::SharedFenceDXGISharedHandleDescriptor* ToCppAPI(SharedFenceDXGISharedHandleDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedFenceDXGISharedHandleDescriptor*>(rhs);
    }
    inline const SharedFenceDXGISharedHandleDescriptor* FromCppAPI(const wgpu::SharedFenceDXGISharedHandleDescriptor* rhs) {
        return reinterpret_cast<const SharedFenceDXGISharedHandleDescriptor*>(rhs);
    }
    inline SharedFenceDXGISharedHandleDescriptor* FromCppAPI(wgpu::SharedFenceDXGISharedHandleDescriptor* rhs) {
        return reinterpret_cast<SharedFenceDXGISharedHandleDescriptor*>(rhs);
    }

    inline const WGPUSharedFenceDXGISharedHandleExportInfo* ToAPI(const SharedFenceDXGISharedHandleExportInfo* rhs) {
        return reinterpret_cast<const WGPUSharedFenceDXGISharedHandleExportInfo*>(rhs);
    }
    inline WGPUSharedFenceDXGISharedHandleExportInfo* ToAPI(SharedFenceDXGISharedHandleExportInfo* rhs) {
        return reinterpret_cast<WGPUSharedFenceDXGISharedHandleExportInfo*>(rhs);
    }
    inline const SharedFenceDXGISharedHandleExportInfo* FromAPI(const WGPUSharedFenceDXGISharedHandleExportInfo* rhs) {
        return reinterpret_cast<const SharedFenceDXGISharedHandleExportInfo*>(rhs);
    }
    inline SharedFenceDXGISharedHandleExportInfo* FromAPI(WGPUSharedFenceDXGISharedHandleExportInfo* rhs) {
        return reinterpret_cast<SharedFenceDXGISharedHandleExportInfo*>(rhs);
    }
    inline const wgpu::SharedFenceDXGISharedHandleExportInfo* ToCppAPI(const SharedFenceDXGISharedHandleExportInfo* rhs) {
        return reinterpret_cast<const wgpu::SharedFenceDXGISharedHandleExportInfo*>(rhs);
    }
    inline wgpu::SharedFenceDXGISharedHandleExportInfo* ToCppAPI(SharedFenceDXGISharedHandleExportInfo* rhs) {
        return reinterpret_cast<wgpu::SharedFenceDXGISharedHandleExportInfo*>(rhs);
    }
    inline const SharedFenceDXGISharedHandleExportInfo* FromCppAPI(const wgpu::SharedFenceDXGISharedHandleExportInfo* rhs) {
        return reinterpret_cast<const SharedFenceDXGISharedHandleExportInfo*>(rhs);
    }
    inline SharedFenceDXGISharedHandleExportInfo* FromCppAPI(wgpu::SharedFenceDXGISharedHandleExportInfo* rhs) {
        return reinterpret_cast<SharedFenceDXGISharedHandleExportInfo*>(rhs);
    }

    inline const WGPUSharedFenceMTLSharedEventDescriptor* ToAPI(const SharedFenceMTLSharedEventDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedFenceMTLSharedEventDescriptor*>(rhs);
    }
    inline WGPUSharedFenceMTLSharedEventDescriptor* ToAPI(SharedFenceMTLSharedEventDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedFenceMTLSharedEventDescriptor*>(rhs);
    }
    inline const SharedFenceMTLSharedEventDescriptor* FromAPI(const WGPUSharedFenceMTLSharedEventDescriptor* rhs) {
        return reinterpret_cast<const SharedFenceMTLSharedEventDescriptor*>(rhs);
    }
    inline SharedFenceMTLSharedEventDescriptor* FromAPI(WGPUSharedFenceMTLSharedEventDescriptor* rhs) {
        return reinterpret_cast<SharedFenceMTLSharedEventDescriptor*>(rhs);
    }
    inline const wgpu::SharedFenceMTLSharedEventDescriptor* ToCppAPI(const SharedFenceMTLSharedEventDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedFenceMTLSharedEventDescriptor*>(rhs);
    }
    inline wgpu::SharedFenceMTLSharedEventDescriptor* ToCppAPI(SharedFenceMTLSharedEventDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedFenceMTLSharedEventDescriptor*>(rhs);
    }
    inline const SharedFenceMTLSharedEventDescriptor* FromCppAPI(const wgpu::SharedFenceMTLSharedEventDescriptor* rhs) {
        return reinterpret_cast<const SharedFenceMTLSharedEventDescriptor*>(rhs);
    }
    inline SharedFenceMTLSharedEventDescriptor* FromCppAPI(wgpu::SharedFenceMTLSharedEventDescriptor* rhs) {
        return reinterpret_cast<SharedFenceMTLSharedEventDescriptor*>(rhs);
    }

    inline const WGPUSharedFenceMTLSharedEventExportInfo* ToAPI(const SharedFenceMTLSharedEventExportInfo* rhs) {
        return reinterpret_cast<const WGPUSharedFenceMTLSharedEventExportInfo*>(rhs);
    }
    inline WGPUSharedFenceMTLSharedEventExportInfo* ToAPI(SharedFenceMTLSharedEventExportInfo* rhs) {
        return reinterpret_cast<WGPUSharedFenceMTLSharedEventExportInfo*>(rhs);
    }
    inline const SharedFenceMTLSharedEventExportInfo* FromAPI(const WGPUSharedFenceMTLSharedEventExportInfo* rhs) {
        return reinterpret_cast<const SharedFenceMTLSharedEventExportInfo*>(rhs);
    }
    inline SharedFenceMTLSharedEventExportInfo* FromAPI(WGPUSharedFenceMTLSharedEventExportInfo* rhs) {
        return reinterpret_cast<SharedFenceMTLSharedEventExportInfo*>(rhs);
    }
    inline const wgpu::SharedFenceMTLSharedEventExportInfo* ToCppAPI(const SharedFenceMTLSharedEventExportInfo* rhs) {
        return reinterpret_cast<const wgpu::SharedFenceMTLSharedEventExportInfo*>(rhs);
    }
    inline wgpu::SharedFenceMTLSharedEventExportInfo* ToCppAPI(SharedFenceMTLSharedEventExportInfo* rhs) {
        return reinterpret_cast<wgpu::SharedFenceMTLSharedEventExportInfo*>(rhs);
    }
    inline const SharedFenceMTLSharedEventExportInfo* FromCppAPI(const wgpu::SharedFenceMTLSharedEventExportInfo* rhs) {
        return reinterpret_cast<const SharedFenceMTLSharedEventExportInfo*>(rhs);
    }
    inline SharedFenceMTLSharedEventExportInfo* FromCppAPI(wgpu::SharedFenceMTLSharedEventExportInfo* rhs) {
        return reinterpret_cast<SharedFenceMTLSharedEventExportInfo*>(rhs);
    }

    inline const WGPUSharedFenceDescriptor* ToAPI(const SharedFenceDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedFenceDescriptor*>(rhs);
    }
    inline WGPUSharedFenceDescriptor* ToAPI(SharedFenceDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedFenceDescriptor*>(rhs);
    }
    inline const SharedFenceDescriptor* FromAPI(const WGPUSharedFenceDescriptor* rhs) {
        return reinterpret_cast<const SharedFenceDescriptor*>(rhs);
    }
    inline SharedFenceDescriptor* FromAPI(WGPUSharedFenceDescriptor* rhs) {
        return reinterpret_cast<SharedFenceDescriptor*>(rhs);
    }
    inline const wgpu::SharedFenceDescriptor* ToCppAPI(const SharedFenceDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedFenceDescriptor*>(rhs);
    }
    inline wgpu::SharedFenceDescriptor* ToCppAPI(SharedFenceDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedFenceDescriptor*>(rhs);
    }
    inline const SharedFenceDescriptor* FromCppAPI(const wgpu::SharedFenceDescriptor* rhs) {
        return reinterpret_cast<const SharedFenceDescriptor*>(rhs);
    }
    inline SharedFenceDescriptor* FromCppAPI(wgpu::SharedFenceDescriptor* rhs) {
        return reinterpret_cast<SharedFenceDescriptor*>(rhs);
    }

    inline const WGPUSharedFenceExportInfo* ToAPI(const SharedFenceExportInfo* rhs) {
        return reinterpret_cast<const WGPUSharedFenceExportInfo*>(rhs);
    }
    inline WGPUSharedFenceExportInfo* ToAPI(SharedFenceExportInfo* rhs) {
        return reinterpret_cast<WGPUSharedFenceExportInfo*>(rhs);
    }
    inline const SharedFenceExportInfo* FromAPI(const WGPUSharedFenceExportInfo* rhs) {
        return reinterpret_cast<const SharedFenceExportInfo*>(rhs);
    }
    inline SharedFenceExportInfo* FromAPI(WGPUSharedFenceExportInfo* rhs) {
        return reinterpret_cast<SharedFenceExportInfo*>(rhs);
    }
    inline const wgpu::SharedFenceExportInfo* ToCppAPI(const SharedFenceExportInfo* rhs) {
        return reinterpret_cast<const wgpu::SharedFenceExportInfo*>(rhs);
    }
    inline wgpu::SharedFenceExportInfo* ToCppAPI(SharedFenceExportInfo* rhs) {
        return reinterpret_cast<wgpu::SharedFenceExportInfo*>(rhs);
    }
    inline const SharedFenceExportInfo* FromCppAPI(const wgpu::SharedFenceExportInfo* rhs) {
        return reinterpret_cast<const SharedFenceExportInfo*>(rhs);
    }
    inline SharedFenceExportInfo* FromCppAPI(wgpu::SharedFenceExportInfo* rhs) {
        return reinterpret_cast<SharedFenceExportInfo*>(rhs);
    }

    inline const WGPUSharedFenceVkSemaphoreOpaqueFDDescriptor* ToAPI(const SharedFenceVkSemaphoreOpaqueFDDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedFenceVkSemaphoreOpaqueFDDescriptor*>(rhs);
    }
    inline WGPUSharedFenceVkSemaphoreOpaqueFDDescriptor* ToAPI(SharedFenceVkSemaphoreOpaqueFDDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedFenceVkSemaphoreOpaqueFDDescriptor*>(rhs);
    }
    inline const SharedFenceVkSemaphoreOpaqueFDDescriptor* FromAPI(const WGPUSharedFenceVkSemaphoreOpaqueFDDescriptor* rhs) {
        return reinterpret_cast<const SharedFenceVkSemaphoreOpaqueFDDescriptor*>(rhs);
    }
    inline SharedFenceVkSemaphoreOpaqueFDDescriptor* FromAPI(WGPUSharedFenceVkSemaphoreOpaqueFDDescriptor* rhs) {
        return reinterpret_cast<SharedFenceVkSemaphoreOpaqueFDDescriptor*>(rhs);
    }
    inline const wgpu::SharedFenceVkSemaphoreOpaqueFDDescriptor* ToCppAPI(const SharedFenceVkSemaphoreOpaqueFDDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedFenceVkSemaphoreOpaqueFDDescriptor*>(rhs);
    }
    inline wgpu::SharedFenceVkSemaphoreOpaqueFDDescriptor* ToCppAPI(SharedFenceVkSemaphoreOpaqueFDDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedFenceVkSemaphoreOpaqueFDDescriptor*>(rhs);
    }
    inline const SharedFenceVkSemaphoreOpaqueFDDescriptor* FromCppAPI(const wgpu::SharedFenceVkSemaphoreOpaqueFDDescriptor* rhs) {
        return reinterpret_cast<const SharedFenceVkSemaphoreOpaqueFDDescriptor*>(rhs);
    }
    inline SharedFenceVkSemaphoreOpaqueFDDescriptor* FromCppAPI(wgpu::SharedFenceVkSemaphoreOpaqueFDDescriptor* rhs) {
        return reinterpret_cast<SharedFenceVkSemaphoreOpaqueFDDescriptor*>(rhs);
    }

    inline const WGPUSharedFenceVkSemaphoreOpaqueFDExportInfo* ToAPI(const SharedFenceVkSemaphoreOpaqueFDExportInfo* rhs) {
        return reinterpret_cast<const WGPUSharedFenceVkSemaphoreOpaqueFDExportInfo*>(rhs);
    }
    inline WGPUSharedFenceVkSemaphoreOpaqueFDExportInfo* ToAPI(SharedFenceVkSemaphoreOpaqueFDExportInfo* rhs) {
        return reinterpret_cast<WGPUSharedFenceVkSemaphoreOpaqueFDExportInfo*>(rhs);
    }
    inline const SharedFenceVkSemaphoreOpaqueFDExportInfo* FromAPI(const WGPUSharedFenceVkSemaphoreOpaqueFDExportInfo* rhs) {
        return reinterpret_cast<const SharedFenceVkSemaphoreOpaqueFDExportInfo*>(rhs);
    }
    inline SharedFenceVkSemaphoreOpaqueFDExportInfo* FromAPI(WGPUSharedFenceVkSemaphoreOpaqueFDExportInfo* rhs) {
        return reinterpret_cast<SharedFenceVkSemaphoreOpaqueFDExportInfo*>(rhs);
    }
    inline const wgpu::SharedFenceVkSemaphoreOpaqueFDExportInfo* ToCppAPI(const SharedFenceVkSemaphoreOpaqueFDExportInfo* rhs) {
        return reinterpret_cast<const wgpu::SharedFenceVkSemaphoreOpaqueFDExportInfo*>(rhs);
    }
    inline wgpu::SharedFenceVkSemaphoreOpaqueFDExportInfo* ToCppAPI(SharedFenceVkSemaphoreOpaqueFDExportInfo* rhs) {
        return reinterpret_cast<wgpu::SharedFenceVkSemaphoreOpaqueFDExportInfo*>(rhs);
    }
    inline const SharedFenceVkSemaphoreOpaqueFDExportInfo* FromCppAPI(const wgpu::SharedFenceVkSemaphoreOpaqueFDExportInfo* rhs) {
        return reinterpret_cast<const SharedFenceVkSemaphoreOpaqueFDExportInfo*>(rhs);
    }
    inline SharedFenceVkSemaphoreOpaqueFDExportInfo* FromCppAPI(wgpu::SharedFenceVkSemaphoreOpaqueFDExportInfo* rhs) {
        return reinterpret_cast<SharedFenceVkSemaphoreOpaqueFDExportInfo*>(rhs);
    }

    inline const WGPUSharedFenceVkSemaphoreSyncFDDescriptor* ToAPI(const SharedFenceVkSemaphoreSyncFDDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedFenceVkSemaphoreSyncFDDescriptor*>(rhs);
    }
    inline WGPUSharedFenceVkSemaphoreSyncFDDescriptor* ToAPI(SharedFenceVkSemaphoreSyncFDDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedFenceVkSemaphoreSyncFDDescriptor*>(rhs);
    }
    inline const SharedFenceVkSemaphoreSyncFDDescriptor* FromAPI(const WGPUSharedFenceVkSemaphoreSyncFDDescriptor* rhs) {
        return reinterpret_cast<const SharedFenceVkSemaphoreSyncFDDescriptor*>(rhs);
    }
    inline SharedFenceVkSemaphoreSyncFDDescriptor* FromAPI(WGPUSharedFenceVkSemaphoreSyncFDDescriptor* rhs) {
        return reinterpret_cast<SharedFenceVkSemaphoreSyncFDDescriptor*>(rhs);
    }
    inline const wgpu::SharedFenceVkSemaphoreSyncFDDescriptor* ToCppAPI(const SharedFenceVkSemaphoreSyncFDDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedFenceVkSemaphoreSyncFDDescriptor*>(rhs);
    }
    inline wgpu::SharedFenceVkSemaphoreSyncFDDescriptor* ToCppAPI(SharedFenceVkSemaphoreSyncFDDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedFenceVkSemaphoreSyncFDDescriptor*>(rhs);
    }
    inline const SharedFenceVkSemaphoreSyncFDDescriptor* FromCppAPI(const wgpu::SharedFenceVkSemaphoreSyncFDDescriptor* rhs) {
        return reinterpret_cast<const SharedFenceVkSemaphoreSyncFDDescriptor*>(rhs);
    }
    inline SharedFenceVkSemaphoreSyncFDDescriptor* FromCppAPI(wgpu::SharedFenceVkSemaphoreSyncFDDescriptor* rhs) {
        return reinterpret_cast<SharedFenceVkSemaphoreSyncFDDescriptor*>(rhs);
    }

    inline const WGPUSharedFenceVkSemaphoreSyncFDExportInfo* ToAPI(const SharedFenceVkSemaphoreSyncFDExportInfo* rhs) {
        return reinterpret_cast<const WGPUSharedFenceVkSemaphoreSyncFDExportInfo*>(rhs);
    }
    inline WGPUSharedFenceVkSemaphoreSyncFDExportInfo* ToAPI(SharedFenceVkSemaphoreSyncFDExportInfo* rhs) {
        return reinterpret_cast<WGPUSharedFenceVkSemaphoreSyncFDExportInfo*>(rhs);
    }
    inline const SharedFenceVkSemaphoreSyncFDExportInfo* FromAPI(const WGPUSharedFenceVkSemaphoreSyncFDExportInfo* rhs) {
        return reinterpret_cast<const SharedFenceVkSemaphoreSyncFDExportInfo*>(rhs);
    }
    inline SharedFenceVkSemaphoreSyncFDExportInfo* FromAPI(WGPUSharedFenceVkSemaphoreSyncFDExportInfo* rhs) {
        return reinterpret_cast<SharedFenceVkSemaphoreSyncFDExportInfo*>(rhs);
    }
    inline const wgpu::SharedFenceVkSemaphoreSyncFDExportInfo* ToCppAPI(const SharedFenceVkSemaphoreSyncFDExportInfo* rhs) {
        return reinterpret_cast<const wgpu::SharedFenceVkSemaphoreSyncFDExportInfo*>(rhs);
    }
    inline wgpu::SharedFenceVkSemaphoreSyncFDExportInfo* ToCppAPI(SharedFenceVkSemaphoreSyncFDExportInfo* rhs) {
        return reinterpret_cast<wgpu::SharedFenceVkSemaphoreSyncFDExportInfo*>(rhs);
    }
    inline const SharedFenceVkSemaphoreSyncFDExportInfo* FromCppAPI(const wgpu::SharedFenceVkSemaphoreSyncFDExportInfo* rhs) {
        return reinterpret_cast<const SharedFenceVkSemaphoreSyncFDExportInfo*>(rhs);
    }
    inline SharedFenceVkSemaphoreSyncFDExportInfo* FromCppAPI(wgpu::SharedFenceVkSemaphoreSyncFDExportInfo* rhs) {
        return reinterpret_cast<SharedFenceVkSemaphoreSyncFDExportInfo*>(rhs);
    }

    inline const WGPUSharedFenceVkSemaphoreZirconHandleDescriptor* ToAPI(const SharedFenceVkSemaphoreZirconHandleDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedFenceVkSemaphoreZirconHandleDescriptor*>(rhs);
    }
    inline WGPUSharedFenceVkSemaphoreZirconHandleDescriptor* ToAPI(SharedFenceVkSemaphoreZirconHandleDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedFenceVkSemaphoreZirconHandleDescriptor*>(rhs);
    }
    inline const SharedFenceVkSemaphoreZirconHandleDescriptor* FromAPI(const WGPUSharedFenceVkSemaphoreZirconHandleDescriptor* rhs) {
        return reinterpret_cast<const SharedFenceVkSemaphoreZirconHandleDescriptor*>(rhs);
    }
    inline SharedFenceVkSemaphoreZirconHandleDescriptor* FromAPI(WGPUSharedFenceVkSemaphoreZirconHandleDescriptor* rhs) {
        return reinterpret_cast<SharedFenceVkSemaphoreZirconHandleDescriptor*>(rhs);
    }
    inline const wgpu::SharedFenceVkSemaphoreZirconHandleDescriptor* ToCppAPI(const SharedFenceVkSemaphoreZirconHandleDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedFenceVkSemaphoreZirconHandleDescriptor*>(rhs);
    }
    inline wgpu::SharedFenceVkSemaphoreZirconHandleDescriptor* ToCppAPI(SharedFenceVkSemaphoreZirconHandleDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedFenceVkSemaphoreZirconHandleDescriptor*>(rhs);
    }
    inline const SharedFenceVkSemaphoreZirconHandleDescriptor* FromCppAPI(const wgpu::SharedFenceVkSemaphoreZirconHandleDescriptor* rhs) {
        return reinterpret_cast<const SharedFenceVkSemaphoreZirconHandleDescriptor*>(rhs);
    }
    inline SharedFenceVkSemaphoreZirconHandleDescriptor* FromCppAPI(wgpu::SharedFenceVkSemaphoreZirconHandleDescriptor* rhs) {
        return reinterpret_cast<SharedFenceVkSemaphoreZirconHandleDescriptor*>(rhs);
    }

    inline const WGPUSharedFenceVkSemaphoreZirconHandleExportInfo* ToAPI(const SharedFenceVkSemaphoreZirconHandleExportInfo* rhs) {
        return reinterpret_cast<const WGPUSharedFenceVkSemaphoreZirconHandleExportInfo*>(rhs);
    }
    inline WGPUSharedFenceVkSemaphoreZirconHandleExportInfo* ToAPI(SharedFenceVkSemaphoreZirconHandleExportInfo* rhs) {
        return reinterpret_cast<WGPUSharedFenceVkSemaphoreZirconHandleExportInfo*>(rhs);
    }
    inline const SharedFenceVkSemaphoreZirconHandleExportInfo* FromAPI(const WGPUSharedFenceVkSemaphoreZirconHandleExportInfo* rhs) {
        return reinterpret_cast<const SharedFenceVkSemaphoreZirconHandleExportInfo*>(rhs);
    }
    inline SharedFenceVkSemaphoreZirconHandleExportInfo* FromAPI(WGPUSharedFenceVkSemaphoreZirconHandleExportInfo* rhs) {
        return reinterpret_cast<SharedFenceVkSemaphoreZirconHandleExportInfo*>(rhs);
    }
    inline const wgpu::SharedFenceVkSemaphoreZirconHandleExportInfo* ToCppAPI(const SharedFenceVkSemaphoreZirconHandleExportInfo* rhs) {
        return reinterpret_cast<const wgpu::SharedFenceVkSemaphoreZirconHandleExportInfo*>(rhs);
    }
    inline wgpu::SharedFenceVkSemaphoreZirconHandleExportInfo* ToCppAPI(SharedFenceVkSemaphoreZirconHandleExportInfo* rhs) {
        return reinterpret_cast<wgpu::SharedFenceVkSemaphoreZirconHandleExportInfo*>(rhs);
    }
    inline const SharedFenceVkSemaphoreZirconHandleExportInfo* FromCppAPI(const wgpu::SharedFenceVkSemaphoreZirconHandleExportInfo* rhs) {
        return reinterpret_cast<const SharedFenceVkSemaphoreZirconHandleExportInfo*>(rhs);
    }
    inline SharedFenceVkSemaphoreZirconHandleExportInfo* FromCppAPI(wgpu::SharedFenceVkSemaphoreZirconHandleExportInfo* rhs) {
        return reinterpret_cast<SharedFenceVkSemaphoreZirconHandleExportInfo*>(rhs);
    }

    inline const WGPUSharedTextureMemoryD3DSwapchainBeginState* ToAPI(const SharedTextureMemoryD3DSwapchainBeginState* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryD3DSwapchainBeginState*>(rhs);
    }
    inline WGPUSharedTextureMemoryD3DSwapchainBeginState* ToAPI(SharedTextureMemoryD3DSwapchainBeginState* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryD3DSwapchainBeginState*>(rhs);
    }
    inline const SharedTextureMemoryD3DSwapchainBeginState* FromAPI(const WGPUSharedTextureMemoryD3DSwapchainBeginState* rhs) {
        return reinterpret_cast<const SharedTextureMemoryD3DSwapchainBeginState*>(rhs);
    }
    inline SharedTextureMemoryD3DSwapchainBeginState* FromAPI(WGPUSharedTextureMemoryD3DSwapchainBeginState* rhs) {
        return reinterpret_cast<SharedTextureMemoryD3DSwapchainBeginState*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryD3DSwapchainBeginState* ToCppAPI(const SharedTextureMemoryD3DSwapchainBeginState* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryD3DSwapchainBeginState*>(rhs);
    }
    inline wgpu::SharedTextureMemoryD3DSwapchainBeginState* ToCppAPI(SharedTextureMemoryD3DSwapchainBeginState* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryD3DSwapchainBeginState*>(rhs);
    }
    inline const SharedTextureMemoryD3DSwapchainBeginState* FromCppAPI(const wgpu::SharedTextureMemoryD3DSwapchainBeginState* rhs) {
        return reinterpret_cast<const SharedTextureMemoryD3DSwapchainBeginState*>(rhs);
    }
    inline SharedTextureMemoryD3DSwapchainBeginState* FromCppAPI(wgpu::SharedTextureMemoryD3DSwapchainBeginState* rhs) {
        return reinterpret_cast<SharedTextureMemoryD3DSwapchainBeginState*>(rhs);
    }

    inline const WGPUSharedTextureMemoryDXGISharedHandleDescriptor* ToAPI(const SharedTextureMemoryDXGISharedHandleDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryDXGISharedHandleDescriptor*>(rhs);
    }
    inline WGPUSharedTextureMemoryDXGISharedHandleDescriptor* ToAPI(SharedTextureMemoryDXGISharedHandleDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryDXGISharedHandleDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryDXGISharedHandleDescriptor* FromAPI(const WGPUSharedTextureMemoryDXGISharedHandleDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryDXGISharedHandleDescriptor*>(rhs);
    }
    inline SharedTextureMemoryDXGISharedHandleDescriptor* FromAPI(WGPUSharedTextureMemoryDXGISharedHandleDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryDXGISharedHandleDescriptor*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryDXGISharedHandleDescriptor* ToCppAPI(const SharedTextureMemoryDXGISharedHandleDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryDXGISharedHandleDescriptor*>(rhs);
    }
    inline wgpu::SharedTextureMemoryDXGISharedHandleDescriptor* ToCppAPI(SharedTextureMemoryDXGISharedHandleDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryDXGISharedHandleDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryDXGISharedHandleDescriptor* FromCppAPI(const wgpu::SharedTextureMemoryDXGISharedHandleDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryDXGISharedHandleDescriptor*>(rhs);
    }
    inline SharedTextureMemoryDXGISharedHandleDescriptor* FromCppAPI(wgpu::SharedTextureMemoryDXGISharedHandleDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryDXGISharedHandleDescriptor*>(rhs);
    }

    inline const WGPUSharedTextureMemoryEGLImageDescriptor* ToAPI(const SharedTextureMemoryEGLImageDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryEGLImageDescriptor*>(rhs);
    }
    inline WGPUSharedTextureMemoryEGLImageDescriptor* ToAPI(SharedTextureMemoryEGLImageDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryEGLImageDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryEGLImageDescriptor* FromAPI(const WGPUSharedTextureMemoryEGLImageDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryEGLImageDescriptor*>(rhs);
    }
    inline SharedTextureMemoryEGLImageDescriptor* FromAPI(WGPUSharedTextureMemoryEGLImageDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryEGLImageDescriptor*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryEGLImageDescriptor* ToCppAPI(const SharedTextureMemoryEGLImageDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryEGLImageDescriptor*>(rhs);
    }
    inline wgpu::SharedTextureMemoryEGLImageDescriptor* ToCppAPI(SharedTextureMemoryEGLImageDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryEGLImageDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryEGLImageDescriptor* FromCppAPI(const wgpu::SharedTextureMemoryEGLImageDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryEGLImageDescriptor*>(rhs);
    }
    inline SharedTextureMemoryEGLImageDescriptor* FromCppAPI(wgpu::SharedTextureMemoryEGLImageDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryEGLImageDescriptor*>(rhs);
    }

    inline const WGPUSharedTextureMemoryIOSurfaceDescriptor* ToAPI(const SharedTextureMemoryIOSurfaceDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryIOSurfaceDescriptor*>(rhs);
    }
    inline WGPUSharedTextureMemoryIOSurfaceDescriptor* ToAPI(SharedTextureMemoryIOSurfaceDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryIOSurfaceDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryIOSurfaceDescriptor* FromAPI(const WGPUSharedTextureMemoryIOSurfaceDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryIOSurfaceDescriptor*>(rhs);
    }
    inline SharedTextureMemoryIOSurfaceDescriptor* FromAPI(WGPUSharedTextureMemoryIOSurfaceDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryIOSurfaceDescriptor*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryIOSurfaceDescriptor* ToCppAPI(const SharedTextureMemoryIOSurfaceDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryIOSurfaceDescriptor*>(rhs);
    }
    inline wgpu::SharedTextureMemoryIOSurfaceDescriptor* ToCppAPI(SharedTextureMemoryIOSurfaceDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryIOSurfaceDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryIOSurfaceDescriptor* FromCppAPI(const wgpu::SharedTextureMemoryIOSurfaceDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryIOSurfaceDescriptor*>(rhs);
    }
    inline SharedTextureMemoryIOSurfaceDescriptor* FromCppAPI(wgpu::SharedTextureMemoryIOSurfaceDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryIOSurfaceDescriptor*>(rhs);
    }

    inline const WGPUSharedTextureMemoryAHardwareBufferDescriptor* ToAPI(const SharedTextureMemoryAHardwareBufferDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryAHardwareBufferDescriptor*>(rhs);
    }
    inline WGPUSharedTextureMemoryAHardwareBufferDescriptor* ToAPI(SharedTextureMemoryAHardwareBufferDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryAHardwareBufferDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryAHardwareBufferDescriptor* FromAPI(const WGPUSharedTextureMemoryAHardwareBufferDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryAHardwareBufferDescriptor*>(rhs);
    }
    inline SharedTextureMemoryAHardwareBufferDescriptor* FromAPI(WGPUSharedTextureMemoryAHardwareBufferDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryAHardwareBufferDescriptor*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryAHardwareBufferDescriptor* ToCppAPI(const SharedTextureMemoryAHardwareBufferDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryAHardwareBufferDescriptor*>(rhs);
    }
    inline wgpu::SharedTextureMemoryAHardwareBufferDescriptor* ToCppAPI(SharedTextureMemoryAHardwareBufferDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryAHardwareBufferDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryAHardwareBufferDescriptor* FromCppAPI(const wgpu::SharedTextureMemoryAHardwareBufferDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryAHardwareBufferDescriptor*>(rhs);
    }
    inline SharedTextureMemoryAHardwareBufferDescriptor* FromCppAPI(wgpu::SharedTextureMemoryAHardwareBufferDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryAHardwareBufferDescriptor*>(rhs);
    }

    inline const WGPUSharedTextureMemoryBeginAccessDescriptor* ToAPI(const SharedTextureMemoryBeginAccessDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryBeginAccessDescriptor*>(rhs);
    }
    inline WGPUSharedTextureMemoryBeginAccessDescriptor* ToAPI(SharedTextureMemoryBeginAccessDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryBeginAccessDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryBeginAccessDescriptor* FromAPI(const WGPUSharedTextureMemoryBeginAccessDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryBeginAccessDescriptor*>(rhs);
    }
    inline SharedTextureMemoryBeginAccessDescriptor* FromAPI(WGPUSharedTextureMemoryBeginAccessDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryBeginAccessDescriptor*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryBeginAccessDescriptor* ToCppAPI(const SharedTextureMemoryBeginAccessDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryBeginAccessDescriptor*>(rhs);
    }
    inline wgpu::SharedTextureMemoryBeginAccessDescriptor* ToCppAPI(SharedTextureMemoryBeginAccessDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryBeginAccessDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryBeginAccessDescriptor* FromCppAPI(const wgpu::SharedTextureMemoryBeginAccessDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryBeginAccessDescriptor*>(rhs);
    }
    inline SharedTextureMemoryBeginAccessDescriptor* FromCppAPI(wgpu::SharedTextureMemoryBeginAccessDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryBeginAccessDescriptor*>(rhs);
    }

    inline const WGPUSharedTextureMemoryDescriptor* ToAPI(const SharedTextureMemoryDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryDescriptor*>(rhs);
    }
    inline WGPUSharedTextureMemoryDescriptor* ToAPI(SharedTextureMemoryDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryDescriptor* FromAPI(const WGPUSharedTextureMemoryDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryDescriptor*>(rhs);
    }
    inline SharedTextureMemoryDescriptor* FromAPI(WGPUSharedTextureMemoryDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryDescriptor*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryDescriptor* ToCppAPI(const SharedTextureMemoryDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryDescriptor*>(rhs);
    }
    inline wgpu::SharedTextureMemoryDescriptor* ToCppAPI(SharedTextureMemoryDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryDescriptor* FromCppAPI(const wgpu::SharedTextureMemoryDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryDescriptor*>(rhs);
    }
    inline SharedTextureMemoryDescriptor* FromCppAPI(wgpu::SharedTextureMemoryDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryDescriptor*>(rhs);
    }

    inline const WGPUSharedTextureMemoryDmaBufPlane* ToAPI(const SharedTextureMemoryDmaBufPlane* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryDmaBufPlane*>(rhs);
    }
    inline WGPUSharedTextureMemoryDmaBufPlane* ToAPI(SharedTextureMemoryDmaBufPlane* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryDmaBufPlane*>(rhs);
    }
    inline const SharedTextureMemoryDmaBufPlane* FromAPI(const WGPUSharedTextureMemoryDmaBufPlane* rhs) {
        return reinterpret_cast<const SharedTextureMemoryDmaBufPlane*>(rhs);
    }
    inline SharedTextureMemoryDmaBufPlane* FromAPI(WGPUSharedTextureMemoryDmaBufPlane* rhs) {
        return reinterpret_cast<SharedTextureMemoryDmaBufPlane*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryDmaBufPlane* ToCppAPI(const SharedTextureMemoryDmaBufPlane* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryDmaBufPlane*>(rhs);
    }
    inline wgpu::SharedTextureMemoryDmaBufPlane* ToCppAPI(SharedTextureMemoryDmaBufPlane* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryDmaBufPlane*>(rhs);
    }
    inline const SharedTextureMemoryDmaBufPlane* FromCppAPI(const wgpu::SharedTextureMemoryDmaBufPlane* rhs) {
        return reinterpret_cast<const SharedTextureMemoryDmaBufPlane*>(rhs);
    }
    inline SharedTextureMemoryDmaBufPlane* FromCppAPI(wgpu::SharedTextureMemoryDmaBufPlane* rhs) {
        return reinterpret_cast<SharedTextureMemoryDmaBufPlane*>(rhs);
    }

    inline const WGPUSharedTextureMemoryEndAccessState* ToAPI(const SharedTextureMemoryEndAccessState* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryEndAccessState*>(rhs);
    }
    inline WGPUSharedTextureMemoryEndAccessState* ToAPI(SharedTextureMemoryEndAccessState* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryEndAccessState*>(rhs);
    }
    inline const SharedTextureMemoryEndAccessState* FromAPI(const WGPUSharedTextureMemoryEndAccessState* rhs) {
        return reinterpret_cast<const SharedTextureMemoryEndAccessState*>(rhs);
    }
    inline SharedTextureMemoryEndAccessState* FromAPI(WGPUSharedTextureMemoryEndAccessState* rhs) {
        return reinterpret_cast<SharedTextureMemoryEndAccessState*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryEndAccessState* ToCppAPI(const SharedTextureMemoryEndAccessState* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryEndAccessState*>(rhs);
    }
    inline wgpu::SharedTextureMemoryEndAccessState* ToCppAPI(SharedTextureMemoryEndAccessState* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryEndAccessState*>(rhs);
    }
    inline const SharedTextureMemoryEndAccessState* FromCppAPI(const wgpu::SharedTextureMemoryEndAccessState* rhs) {
        return reinterpret_cast<const SharedTextureMemoryEndAccessState*>(rhs);
    }
    inline SharedTextureMemoryEndAccessState* FromCppAPI(wgpu::SharedTextureMemoryEndAccessState* rhs) {
        return reinterpret_cast<SharedTextureMemoryEndAccessState*>(rhs);
    }

    inline const WGPUSharedTextureMemoryOpaqueFDDescriptor* ToAPI(const SharedTextureMemoryOpaqueFDDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryOpaqueFDDescriptor*>(rhs);
    }
    inline WGPUSharedTextureMemoryOpaqueFDDescriptor* ToAPI(SharedTextureMemoryOpaqueFDDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryOpaqueFDDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryOpaqueFDDescriptor* FromAPI(const WGPUSharedTextureMemoryOpaqueFDDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryOpaqueFDDescriptor*>(rhs);
    }
    inline SharedTextureMemoryOpaqueFDDescriptor* FromAPI(WGPUSharedTextureMemoryOpaqueFDDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryOpaqueFDDescriptor*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryOpaqueFDDescriptor* ToCppAPI(const SharedTextureMemoryOpaqueFDDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryOpaqueFDDescriptor*>(rhs);
    }
    inline wgpu::SharedTextureMemoryOpaqueFDDescriptor* ToCppAPI(SharedTextureMemoryOpaqueFDDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryOpaqueFDDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryOpaqueFDDescriptor* FromCppAPI(const wgpu::SharedTextureMemoryOpaqueFDDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryOpaqueFDDescriptor*>(rhs);
    }
    inline SharedTextureMemoryOpaqueFDDescriptor* FromCppAPI(wgpu::SharedTextureMemoryOpaqueFDDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryOpaqueFDDescriptor*>(rhs);
    }

    inline const WGPUSharedTextureMemoryVkDedicatedAllocationDescriptor* ToAPI(const SharedTextureMemoryVkDedicatedAllocationDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryVkDedicatedAllocationDescriptor*>(rhs);
    }
    inline WGPUSharedTextureMemoryVkDedicatedAllocationDescriptor* ToAPI(SharedTextureMemoryVkDedicatedAllocationDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryVkDedicatedAllocationDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryVkDedicatedAllocationDescriptor* FromAPI(const WGPUSharedTextureMemoryVkDedicatedAllocationDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryVkDedicatedAllocationDescriptor*>(rhs);
    }
    inline SharedTextureMemoryVkDedicatedAllocationDescriptor* FromAPI(WGPUSharedTextureMemoryVkDedicatedAllocationDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryVkDedicatedAllocationDescriptor*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryVkDedicatedAllocationDescriptor* ToCppAPI(const SharedTextureMemoryVkDedicatedAllocationDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryVkDedicatedAllocationDescriptor*>(rhs);
    }
    inline wgpu::SharedTextureMemoryVkDedicatedAllocationDescriptor* ToCppAPI(SharedTextureMemoryVkDedicatedAllocationDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryVkDedicatedAllocationDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryVkDedicatedAllocationDescriptor* FromCppAPI(const wgpu::SharedTextureMemoryVkDedicatedAllocationDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryVkDedicatedAllocationDescriptor*>(rhs);
    }
    inline SharedTextureMemoryVkDedicatedAllocationDescriptor* FromCppAPI(wgpu::SharedTextureMemoryVkDedicatedAllocationDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryVkDedicatedAllocationDescriptor*>(rhs);
    }

    inline const WGPUSharedTextureMemoryVkImageLayoutBeginState* ToAPI(const SharedTextureMemoryVkImageLayoutBeginState* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryVkImageLayoutBeginState*>(rhs);
    }
    inline WGPUSharedTextureMemoryVkImageLayoutBeginState* ToAPI(SharedTextureMemoryVkImageLayoutBeginState* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryVkImageLayoutBeginState*>(rhs);
    }
    inline const SharedTextureMemoryVkImageLayoutBeginState* FromAPI(const WGPUSharedTextureMemoryVkImageLayoutBeginState* rhs) {
        return reinterpret_cast<const SharedTextureMemoryVkImageLayoutBeginState*>(rhs);
    }
    inline SharedTextureMemoryVkImageLayoutBeginState* FromAPI(WGPUSharedTextureMemoryVkImageLayoutBeginState* rhs) {
        return reinterpret_cast<SharedTextureMemoryVkImageLayoutBeginState*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryVkImageLayoutBeginState* ToCppAPI(const SharedTextureMemoryVkImageLayoutBeginState* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryVkImageLayoutBeginState*>(rhs);
    }
    inline wgpu::SharedTextureMemoryVkImageLayoutBeginState* ToCppAPI(SharedTextureMemoryVkImageLayoutBeginState* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryVkImageLayoutBeginState*>(rhs);
    }
    inline const SharedTextureMemoryVkImageLayoutBeginState* FromCppAPI(const wgpu::SharedTextureMemoryVkImageLayoutBeginState* rhs) {
        return reinterpret_cast<const SharedTextureMemoryVkImageLayoutBeginState*>(rhs);
    }
    inline SharedTextureMemoryVkImageLayoutBeginState* FromCppAPI(wgpu::SharedTextureMemoryVkImageLayoutBeginState* rhs) {
        return reinterpret_cast<SharedTextureMemoryVkImageLayoutBeginState*>(rhs);
    }

    inline const WGPUSharedTextureMemoryVkImageLayoutEndState* ToAPI(const SharedTextureMemoryVkImageLayoutEndState* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryVkImageLayoutEndState*>(rhs);
    }
    inline WGPUSharedTextureMemoryVkImageLayoutEndState* ToAPI(SharedTextureMemoryVkImageLayoutEndState* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryVkImageLayoutEndState*>(rhs);
    }
    inline const SharedTextureMemoryVkImageLayoutEndState* FromAPI(const WGPUSharedTextureMemoryVkImageLayoutEndState* rhs) {
        return reinterpret_cast<const SharedTextureMemoryVkImageLayoutEndState*>(rhs);
    }
    inline SharedTextureMemoryVkImageLayoutEndState* FromAPI(WGPUSharedTextureMemoryVkImageLayoutEndState* rhs) {
        return reinterpret_cast<SharedTextureMemoryVkImageLayoutEndState*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryVkImageLayoutEndState* ToCppAPI(const SharedTextureMemoryVkImageLayoutEndState* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryVkImageLayoutEndState*>(rhs);
    }
    inline wgpu::SharedTextureMemoryVkImageLayoutEndState* ToCppAPI(SharedTextureMemoryVkImageLayoutEndState* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryVkImageLayoutEndState*>(rhs);
    }
    inline const SharedTextureMemoryVkImageLayoutEndState* FromCppAPI(const wgpu::SharedTextureMemoryVkImageLayoutEndState* rhs) {
        return reinterpret_cast<const SharedTextureMemoryVkImageLayoutEndState*>(rhs);
    }
    inline SharedTextureMemoryVkImageLayoutEndState* FromCppAPI(wgpu::SharedTextureMemoryVkImageLayoutEndState* rhs) {
        return reinterpret_cast<SharedTextureMemoryVkImageLayoutEndState*>(rhs);
    }

    inline const WGPUSharedTextureMemoryZirconHandleDescriptor* ToAPI(const SharedTextureMemoryZirconHandleDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryZirconHandleDescriptor*>(rhs);
    }
    inline WGPUSharedTextureMemoryZirconHandleDescriptor* ToAPI(SharedTextureMemoryZirconHandleDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryZirconHandleDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryZirconHandleDescriptor* FromAPI(const WGPUSharedTextureMemoryZirconHandleDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryZirconHandleDescriptor*>(rhs);
    }
    inline SharedTextureMemoryZirconHandleDescriptor* FromAPI(WGPUSharedTextureMemoryZirconHandleDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryZirconHandleDescriptor*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryZirconHandleDescriptor* ToCppAPI(const SharedTextureMemoryZirconHandleDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryZirconHandleDescriptor*>(rhs);
    }
    inline wgpu::SharedTextureMemoryZirconHandleDescriptor* ToCppAPI(SharedTextureMemoryZirconHandleDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryZirconHandleDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryZirconHandleDescriptor* FromCppAPI(const wgpu::SharedTextureMemoryZirconHandleDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryZirconHandleDescriptor*>(rhs);
    }
    inline SharedTextureMemoryZirconHandleDescriptor* FromCppAPI(wgpu::SharedTextureMemoryZirconHandleDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryZirconHandleDescriptor*>(rhs);
    }

    inline const WGPUStaticSamplerBindingLayout* ToAPI(const StaticSamplerBindingLayout* rhs) {
        return reinterpret_cast<const WGPUStaticSamplerBindingLayout*>(rhs);
    }
    inline WGPUStaticSamplerBindingLayout* ToAPI(StaticSamplerBindingLayout* rhs) {
        return reinterpret_cast<WGPUStaticSamplerBindingLayout*>(rhs);
    }
    inline const StaticSamplerBindingLayout* FromAPI(const WGPUStaticSamplerBindingLayout* rhs) {
        return reinterpret_cast<const StaticSamplerBindingLayout*>(rhs);
    }
    inline StaticSamplerBindingLayout* FromAPI(WGPUStaticSamplerBindingLayout* rhs) {
        return reinterpret_cast<StaticSamplerBindingLayout*>(rhs);
    }
    inline const wgpu::StaticSamplerBindingLayout* ToCppAPI(const StaticSamplerBindingLayout* rhs) {
        return reinterpret_cast<const wgpu::StaticSamplerBindingLayout*>(rhs);
    }
    inline wgpu::StaticSamplerBindingLayout* ToCppAPI(StaticSamplerBindingLayout* rhs) {
        return reinterpret_cast<wgpu::StaticSamplerBindingLayout*>(rhs);
    }
    inline const StaticSamplerBindingLayout* FromCppAPI(const wgpu::StaticSamplerBindingLayout* rhs) {
        return reinterpret_cast<const StaticSamplerBindingLayout*>(rhs);
    }
    inline StaticSamplerBindingLayout* FromCppAPI(wgpu::StaticSamplerBindingLayout* rhs) {
        return reinterpret_cast<StaticSamplerBindingLayout*>(rhs);
    }

    inline const WGPUStencilFaceState* ToAPI(const StencilFaceState* rhs) {
        return reinterpret_cast<const WGPUStencilFaceState*>(rhs);
    }
    inline WGPUStencilFaceState* ToAPI(StencilFaceState* rhs) {
        return reinterpret_cast<WGPUStencilFaceState*>(rhs);
    }
    inline const StencilFaceState* FromAPI(const WGPUStencilFaceState* rhs) {
        return reinterpret_cast<const StencilFaceState*>(rhs);
    }
    inline StencilFaceState* FromAPI(WGPUStencilFaceState* rhs) {
        return reinterpret_cast<StencilFaceState*>(rhs);
    }
    inline const wgpu::StencilFaceState* ToCppAPI(const StencilFaceState* rhs) {
        return reinterpret_cast<const wgpu::StencilFaceState*>(rhs);
    }
    inline wgpu::StencilFaceState* ToCppAPI(StencilFaceState* rhs) {
        return reinterpret_cast<wgpu::StencilFaceState*>(rhs);
    }
    inline const StencilFaceState* FromCppAPI(const wgpu::StencilFaceState* rhs) {
        return reinterpret_cast<const StencilFaceState*>(rhs);
    }
    inline StencilFaceState* FromCppAPI(wgpu::StencilFaceState* rhs) {
        return reinterpret_cast<StencilFaceState*>(rhs);
    }

    inline const WGPUStorageTextureBindingLayout* ToAPI(const StorageTextureBindingLayout* rhs) {
        return reinterpret_cast<const WGPUStorageTextureBindingLayout*>(rhs);
    }
    inline WGPUStorageTextureBindingLayout* ToAPI(StorageTextureBindingLayout* rhs) {
        return reinterpret_cast<WGPUStorageTextureBindingLayout*>(rhs);
    }
    inline const StorageTextureBindingLayout* FromAPI(const WGPUStorageTextureBindingLayout* rhs) {
        return reinterpret_cast<const StorageTextureBindingLayout*>(rhs);
    }
    inline StorageTextureBindingLayout* FromAPI(WGPUStorageTextureBindingLayout* rhs) {
        return reinterpret_cast<StorageTextureBindingLayout*>(rhs);
    }
    inline const wgpu::StorageTextureBindingLayout* ToCppAPI(const StorageTextureBindingLayout* rhs) {
        return reinterpret_cast<const wgpu::StorageTextureBindingLayout*>(rhs);
    }
    inline wgpu::StorageTextureBindingLayout* ToCppAPI(StorageTextureBindingLayout* rhs) {
        return reinterpret_cast<wgpu::StorageTextureBindingLayout*>(rhs);
    }
    inline const StorageTextureBindingLayout* FromCppAPI(const wgpu::StorageTextureBindingLayout* rhs) {
        return reinterpret_cast<const StorageTextureBindingLayout*>(rhs);
    }
    inline StorageTextureBindingLayout* FromCppAPI(wgpu::StorageTextureBindingLayout* rhs) {
        return reinterpret_cast<StorageTextureBindingLayout*>(rhs);
    }

    inline const WGPUSurfaceCapabilities* ToAPI(const SurfaceCapabilities* rhs) {
        return reinterpret_cast<const WGPUSurfaceCapabilities*>(rhs);
    }
    inline WGPUSurfaceCapabilities* ToAPI(SurfaceCapabilities* rhs) {
        return reinterpret_cast<WGPUSurfaceCapabilities*>(rhs);
    }
    inline const SurfaceCapabilities* FromAPI(const WGPUSurfaceCapabilities* rhs) {
        return reinterpret_cast<const SurfaceCapabilities*>(rhs);
    }
    inline SurfaceCapabilities* FromAPI(WGPUSurfaceCapabilities* rhs) {
        return reinterpret_cast<SurfaceCapabilities*>(rhs);
    }
    inline const wgpu::SurfaceCapabilities* ToCppAPI(const SurfaceCapabilities* rhs) {
        return reinterpret_cast<const wgpu::SurfaceCapabilities*>(rhs);
    }
    inline wgpu::SurfaceCapabilities* ToCppAPI(SurfaceCapabilities* rhs) {
        return reinterpret_cast<wgpu::SurfaceCapabilities*>(rhs);
    }
    inline const SurfaceCapabilities* FromCppAPI(const wgpu::SurfaceCapabilities* rhs) {
        return reinterpret_cast<const SurfaceCapabilities*>(rhs);
    }
    inline SurfaceCapabilities* FromCppAPI(wgpu::SurfaceCapabilities* rhs) {
        return reinterpret_cast<SurfaceCapabilities*>(rhs);
    }

    inline const WGPUSurfaceConfiguration* ToAPI(const SurfaceConfiguration* rhs) {
        return reinterpret_cast<const WGPUSurfaceConfiguration*>(rhs);
    }
    inline WGPUSurfaceConfiguration* ToAPI(SurfaceConfiguration* rhs) {
        return reinterpret_cast<WGPUSurfaceConfiguration*>(rhs);
    }
    inline const SurfaceConfiguration* FromAPI(const WGPUSurfaceConfiguration* rhs) {
        return reinterpret_cast<const SurfaceConfiguration*>(rhs);
    }
    inline SurfaceConfiguration* FromAPI(WGPUSurfaceConfiguration* rhs) {
        return reinterpret_cast<SurfaceConfiguration*>(rhs);
    }
    inline const wgpu::SurfaceConfiguration* ToCppAPI(const SurfaceConfiguration* rhs) {
        return reinterpret_cast<const wgpu::SurfaceConfiguration*>(rhs);
    }
    inline wgpu::SurfaceConfiguration* ToCppAPI(SurfaceConfiguration* rhs) {
        return reinterpret_cast<wgpu::SurfaceConfiguration*>(rhs);
    }
    inline const SurfaceConfiguration* FromCppAPI(const wgpu::SurfaceConfiguration* rhs) {
        return reinterpret_cast<const SurfaceConfiguration*>(rhs);
    }
    inline SurfaceConfiguration* FromCppAPI(wgpu::SurfaceConfiguration* rhs) {
        return reinterpret_cast<SurfaceConfiguration*>(rhs);
    }

    inline const WGPUSurfaceDescriptor* ToAPI(const SurfaceDescriptor* rhs) {
        return reinterpret_cast<const WGPUSurfaceDescriptor*>(rhs);
    }
    inline WGPUSurfaceDescriptor* ToAPI(SurfaceDescriptor* rhs) {
        return reinterpret_cast<WGPUSurfaceDescriptor*>(rhs);
    }
    inline const SurfaceDescriptor* FromAPI(const WGPUSurfaceDescriptor* rhs) {
        return reinterpret_cast<const SurfaceDescriptor*>(rhs);
    }
    inline SurfaceDescriptor* FromAPI(WGPUSurfaceDescriptor* rhs) {
        return reinterpret_cast<SurfaceDescriptor*>(rhs);
    }
    inline const wgpu::SurfaceDescriptor* ToCppAPI(const SurfaceDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SurfaceDescriptor*>(rhs);
    }
    inline wgpu::SurfaceDescriptor* ToCppAPI(SurfaceDescriptor* rhs) {
        return reinterpret_cast<wgpu::SurfaceDescriptor*>(rhs);
    }
    inline const SurfaceDescriptor* FromCppAPI(const wgpu::SurfaceDescriptor* rhs) {
        return reinterpret_cast<const SurfaceDescriptor*>(rhs);
    }
    inline SurfaceDescriptor* FromCppAPI(wgpu::SurfaceDescriptor* rhs) {
        return reinterpret_cast<SurfaceDescriptor*>(rhs);
    }

    inline const WGPUSurfaceDescriptorFromAndroidNativeWindow* ToAPI(const SurfaceDescriptorFromAndroidNativeWindow* rhs) {
        return reinterpret_cast<const WGPUSurfaceDescriptorFromAndroidNativeWindow*>(rhs);
    }
    inline WGPUSurfaceDescriptorFromAndroidNativeWindow* ToAPI(SurfaceDescriptorFromAndroidNativeWindow* rhs) {
        return reinterpret_cast<WGPUSurfaceDescriptorFromAndroidNativeWindow*>(rhs);
    }
    inline const SurfaceDescriptorFromAndroidNativeWindow* FromAPI(const WGPUSurfaceDescriptorFromAndroidNativeWindow* rhs) {
        return reinterpret_cast<const SurfaceDescriptorFromAndroidNativeWindow*>(rhs);
    }
    inline SurfaceDescriptorFromAndroidNativeWindow* FromAPI(WGPUSurfaceDescriptorFromAndroidNativeWindow* rhs) {
        return reinterpret_cast<SurfaceDescriptorFromAndroidNativeWindow*>(rhs);
    }
    inline const wgpu::SurfaceDescriptorFromAndroidNativeWindow* ToCppAPI(const SurfaceDescriptorFromAndroidNativeWindow* rhs) {
        return reinterpret_cast<const wgpu::SurfaceDescriptorFromAndroidNativeWindow*>(rhs);
    }
    inline wgpu::SurfaceDescriptorFromAndroidNativeWindow* ToCppAPI(SurfaceDescriptorFromAndroidNativeWindow* rhs) {
        return reinterpret_cast<wgpu::SurfaceDescriptorFromAndroidNativeWindow*>(rhs);
    }
    inline const SurfaceDescriptorFromAndroidNativeWindow* FromCppAPI(const wgpu::SurfaceDescriptorFromAndroidNativeWindow* rhs) {
        return reinterpret_cast<const SurfaceDescriptorFromAndroidNativeWindow*>(rhs);
    }
    inline SurfaceDescriptorFromAndroidNativeWindow* FromCppAPI(wgpu::SurfaceDescriptorFromAndroidNativeWindow* rhs) {
        return reinterpret_cast<SurfaceDescriptorFromAndroidNativeWindow*>(rhs);
    }

    inline const WGPUSurfaceDescriptorFromCanvasHTMLSelector* ToAPI(const SurfaceDescriptorFromCanvasHTMLSelector* rhs) {
        return reinterpret_cast<const WGPUSurfaceDescriptorFromCanvasHTMLSelector*>(rhs);
    }
    inline WGPUSurfaceDescriptorFromCanvasHTMLSelector* ToAPI(SurfaceDescriptorFromCanvasHTMLSelector* rhs) {
        return reinterpret_cast<WGPUSurfaceDescriptorFromCanvasHTMLSelector*>(rhs);
    }
    inline const SurfaceDescriptorFromCanvasHTMLSelector* FromAPI(const WGPUSurfaceDescriptorFromCanvasHTMLSelector* rhs) {
        return reinterpret_cast<const SurfaceDescriptorFromCanvasHTMLSelector*>(rhs);
    }
    inline SurfaceDescriptorFromCanvasHTMLSelector* FromAPI(WGPUSurfaceDescriptorFromCanvasHTMLSelector* rhs) {
        return reinterpret_cast<SurfaceDescriptorFromCanvasHTMLSelector*>(rhs);
    }
    inline const wgpu::SurfaceDescriptorFromCanvasHTMLSelector* ToCppAPI(const SurfaceDescriptorFromCanvasHTMLSelector* rhs) {
        return reinterpret_cast<const wgpu::SurfaceDescriptorFromCanvasHTMLSelector*>(rhs);
    }
    inline wgpu::SurfaceDescriptorFromCanvasHTMLSelector* ToCppAPI(SurfaceDescriptorFromCanvasHTMLSelector* rhs) {
        return reinterpret_cast<wgpu::SurfaceDescriptorFromCanvasHTMLSelector*>(rhs);
    }
    inline const SurfaceDescriptorFromCanvasHTMLSelector* FromCppAPI(const wgpu::SurfaceDescriptorFromCanvasHTMLSelector* rhs) {
        return reinterpret_cast<const SurfaceDescriptorFromCanvasHTMLSelector*>(rhs);
    }
    inline SurfaceDescriptorFromCanvasHTMLSelector* FromCppAPI(wgpu::SurfaceDescriptorFromCanvasHTMLSelector* rhs) {
        return reinterpret_cast<SurfaceDescriptorFromCanvasHTMLSelector*>(rhs);
    }

    inline const WGPUSurfaceDescriptorFromMetalLayer* ToAPI(const SurfaceDescriptorFromMetalLayer* rhs) {
        return reinterpret_cast<const WGPUSurfaceDescriptorFromMetalLayer*>(rhs);
    }
    inline WGPUSurfaceDescriptorFromMetalLayer* ToAPI(SurfaceDescriptorFromMetalLayer* rhs) {
        return reinterpret_cast<WGPUSurfaceDescriptorFromMetalLayer*>(rhs);
    }
    inline const SurfaceDescriptorFromMetalLayer* FromAPI(const WGPUSurfaceDescriptorFromMetalLayer* rhs) {
        return reinterpret_cast<const SurfaceDescriptorFromMetalLayer*>(rhs);
    }
    inline SurfaceDescriptorFromMetalLayer* FromAPI(WGPUSurfaceDescriptorFromMetalLayer* rhs) {
        return reinterpret_cast<SurfaceDescriptorFromMetalLayer*>(rhs);
    }
    inline const wgpu::SurfaceDescriptorFromMetalLayer* ToCppAPI(const SurfaceDescriptorFromMetalLayer* rhs) {
        return reinterpret_cast<const wgpu::SurfaceDescriptorFromMetalLayer*>(rhs);
    }
    inline wgpu::SurfaceDescriptorFromMetalLayer* ToCppAPI(SurfaceDescriptorFromMetalLayer* rhs) {
        return reinterpret_cast<wgpu::SurfaceDescriptorFromMetalLayer*>(rhs);
    }
    inline const SurfaceDescriptorFromMetalLayer* FromCppAPI(const wgpu::SurfaceDescriptorFromMetalLayer* rhs) {
        return reinterpret_cast<const SurfaceDescriptorFromMetalLayer*>(rhs);
    }
    inline SurfaceDescriptorFromMetalLayer* FromCppAPI(wgpu::SurfaceDescriptorFromMetalLayer* rhs) {
        return reinterpret_cast<SurfaceDescriptorFromMetalLayer*>(rhs);
    }

    inline const WGPUSurfaceDescriptorFromWaylandSurface* ToAPI(const SurfaceDescriptorFromWaylandSurface* rhs) {
        return reinterpret_cast<const WGPUSurfaceDescriptorFromWaylandSurface*>(rhs);
    }
    inline WGPUSurfaceDescriptorFromWaylandSurface* ToAPI(SurfaceDescriptorFromWaylandSurface* rhs) {
        return reinterpret_cast<WGPUSurfaceDescriptorFromWaylandSurface*>(rhs);
    }
    inline const SurfaceDescriptorFromWaylandSurface* FromAPI(const WGPUSurfaceDescriptorFromWaylandSurface* rhs) {
        return reinterpret_cast<const SurfaceDescriptorFromWaylandSurface*>(rhs);
    }
    inline SurfaceDescriptorFromWaylandSurface* FromAPI(WGPUSurfaceDescriptorFromWaylandSurface* rhs) {
        return reinterpret_cast<SurfaceDescriptorFromWaylandSurface*>(rhs);
    }
    inline const wgpu::SurfaceDescriptorFromWaylandSurface* ToCppAPI(const SurfaceDescriptorFromWaylandSurface* rhs) {
        return reinterpret_cast<const wgpu::SurfaceDescriptorFromWaylandSurface*>(rhs);
    }
    inline wgpu::SurfaceDescriptorFromWaylandSurface* ToCppAPI(SurfaceDescriptorFromWaylandSurface* rhs) {
        return reinterpret_cast<wgpu::SurfaceDescriptorFromWaylandSurface*>(rhs);
    }
    inline const SurfaceDescriptorFromWaylandSurface* FromCppAPI(const wgpu::SurfaceDescriptorFromWaylandSurface* rhs) {
        return reinterpret_cast<const SurfaceDescriptorFromWaylandSurface*>(rhs);
    }
    inline SurfaceDescriptorFromWaylandSurface* FromCppAPI(wgpu::SurfaceDescriptorFromWaylandSurface* rhs) {
        return reinterpret_cast<SurfaceDescriptorFromWaylandSurface*>(rhs);
    }

    inline const WGPUSurfaceDescriptorFromWindowsHWND* ToAPI(const SurfaceDescriptorFromWindowsHWND* rhs) {
        return reinterpret_cast<const WGPUSurfaceDescriptorFromWindowsHWND*>(rhs);
    }
    inline WGPUSurfaceDescriptorFromWindowsHWND* ToAPI(SurfaceDescriptorFromWindowsHWND* rhs) {
        return reinterpret_cast<WGPUSurfaceDescriptorFromWindowsHWND*>(rhs);
    }
    inline const SurfaceDescriptorFromWindowsHWND* FromAPI(const WGPUSurfaceDescriptorFromWindowsHWND* rhs) {
        return reinterpret_cast<const SurfaceDescriptorFromWindowsHWND*>(rhs);
    }
    inline SurfaceDescriptorFromWindowsHWND* FromAPI(WGPUSurfaceDescriptorFromWindowsHWND* rhs) {
        return reinterpret_cast<SurfaceDescriptorFromWindowsHWND*>(rhs);
    }
    inline const wgpu::SurfaceDescriptorFromWindowsHWND* ToCppAPI(const SurfaceDescriptorFromWindowsHWND* rhs) {
        return reinterpret_cast<const wgpu::SurfaceDescriptorFromWindowsHWND*>(rhs);
    }
    inline wgpu::SurfaceDescriptorFromWindowsHWND* ToCppAPI(SurfaceDescriptorFromWindowsHWND* rhs) {
        return reinterpret_cast<wgpu::SurfaceDescriptorFromWindowsHWND*>(rhs);
    }
    inline const SurfaceDescriptorFromWindowsHWND* FromCppAPI(const wgpu::SurfaceDescriptorFromWindowsHWND* rhs) {
        return reinterpret_cast<const SurfaceDescriptorFromWindowsHWND*>(rhs);
    }
    inline SurfaceDescriptorFromWindowsHWND* FromCppAPI(wgpu::SurfaceDescriptorFromWindowsHWND* rhs) {
        return reinterpret_cast<SurfaceDescriptorFromWindowsHWND*>(rhs);
    }

    inline const WGPUSurfaceDescriptorFromWindowsCoreWindow* ToAPI(const SurfaceDescriptorFromWindowsCoreWindow* rhs) {
        return reinterpret_cast<const WGPUSurfaceDescriptorFromWindowsCoreWindow*>(rhs);
    }
    inline WGPUSurfaceDescriptorFromWindowsCoreWindow* ToAPI(SurfaceDescriptorFromWindowsCoreWindow* rhs) {
        return reinterpret_cast<WGPUSurfaceDescriptorFromWindowsCoreWindow*>(rhs);
    }
    inline const SurfaceDescriptorFromWindowsCoreWindow* FromAPI(const WGPUSurfaceDescriptorFromWindowsCoreWindow* rhs) {
        return reinterpret_cast<const SurfaceDescriptorFromWindowsCoreWindow*>(rhs);
    }
    inline SurfaceDescriptorFromWindowsCoreWindow* FromAPI(WGPUSurfaceDescriptorFromWindowsCoreWindow* rhs) {
        return reinterpret_cast<SurfaceDescriptorFromWindowsCoreWindow*>(rhs);
    }
    inline const wgpu::SurfaceDescriptorFromWindowsCoreWindow* ToCppAPI(const SurfaceDescriptorFromWindowsCoreWindow* rhs) {
        return reinterpret_cast<const wgpu::SurfaceDescriptorFromWindowsCoreWindow*>(rhs);
    }
    inline wgpu::SurfaceDescriptorFromWindowsCoreWindow* ToCppAPI(SurfaceDescriptorFromWindowsCoreWindow* rhs) {
        return reinterpret_cast<wgpu::SurfaceDescriptorFromWindowsCoreWindow*>(rhs);
    }
    inline const SurfaceDescriptorFromWindowsCoreWindow* FromCppAPI(const wgpu::SurfaceDescriptorFromWindowsCoreWindow* rhs) {
        return reinterpret_cast<const SurfaceDescriptorFromWindowsCoreWindow*>(rhs);
    }
    inline SurfaceDescriptorFromWindowsCoreWindow* FromCppAPI(wgpu::SurfaceDescriptorFromWindowsCoreWindow* rhs) {
        return reinterpret_cast<SurfaceDescriptorFromWindowsCoreWindow*>(rhs);
    }

    inline const WGPUSurfaceDescriptorFromWindowsSwapChainPanel* ToAPI(const SurfaceDescriptorFromWindowsSwapChainPanel* rhs) {
        return reinterpret_cast<const WGPUSurfaceDescriptorFromWindowsSwapChainPanel*>(rhs);
    }
    inline WGPUSurfaceDescriptorFromWindowsSwapChainPanel* ToAPI(SurfaceDescriptorFromWindowsSwapChainPanel* rhs) {
        return reinterpret_cast<WGPUSurfaceDescriptorFromWindowsSwapChainPanel*>(rhs);
    }
    inline const SurfaceDescriptorFromWindowsSwapChainPanel* FromAPI(const WGPUSurfaceDescriptorFromWindowsSwapChainPanel* rhs) {
        return reinterpret_cast<const SurfaceDescriptorFromWindowsSwapChainPanel*>(rhs);
    }
    inline SurfaceDescriptorFromWindowsSwapChainPanel* FromAPI(WGPUSurfaceDescriptorFromWindowsSwapChainPanel* rhs) {
        return reinterpret_cast<SurfaceDescriptorFromWindowsSwapChainPanel*>(rhs);
    }
    inline const wgpu::SurfaceDescriptorFromWindowsSwapChainPanel* ToCppAPI(const SurfaceDescriptorFromWindowsSwapChainPanel* rhs) {
        return reinterpret_cast<const wgpu::SurfaceDescriptorFromWindowsSwapChainPanel*>(rhs);
    }
    inline wgpu::SurfaceDescriptorFromWindowsSwapChainPanel* ToCppAPI(SurfaceDescriptorFromWindowsSwapChainPanel* rhs) {
        return reinterpret_cast<wgpu::SurfaceDescriptorFromWindowsSwapChainPanel*>(rhs);
    }
    inline const SurfaceDescriptorFromWindowsSwapChainPanel* FromCppAPI(const wgpu::SurfaceDescriptorFromWindowsSwapChainPanel* rhs) {
        return reinterpret_cast<const SurfaceDescriptorFromWindowsSwapChainPanel*>(rhs);
    }
    inline SurfaceDescriptorFromWindowsSwapChainPanel* FromCppAPI(wgpu::SurfaceDescriptorFromWindowsSwapChainPanel* rhs) {
        return reinterpret_cast<SurfaceDescriptorFromWindowsSwapChainPanel*>(rhs);
    }

    inline const WGPUSurfaceDescriptorFromXlibWindow* ToAPI(const SurfaceDescriptorFromXlibWindow* rhs) {
        return reinterpret_cast<const WGPUSurfaceDescriptorFromXlibWindow*>(rhs);
    }
    inline WGPUSurfaceDescriptorFromXlibWindow* ToAPI(SurfaceDescriptorFromXlibWindow* rhs) {
        return reinterpret_cast<WGPUSurfaceDescriptorFromXlibWindow*>(rhs);
    }
    inline const SurfaceDescriptorFromXlibWindow* FromAPI(const WGPUSurfaceDescriptorFromXlibWindow* rhs) {
        return reinterpret_cast<const SurfaceDescriptorFromXlibWindow*>(rhs);
    }
    inline SurfaceDescriptorFromXlibWindow* FromAPI(WGPUSurfaceDescriptorFromXlibWindow* rhs) {
        return reinterpret_cast<SurfaceDescriptorFromXlibWindow*>(rhs);
    }
    inline const wgpu::SurfaceDescriptorFromXlibWindow* ToCppAPI(const SurfaceDescriptorFromXlibWindow* rhs) {
        return reinterpret_cast<const wgpu::SurfaceDescriptorFromXlibWindow*>(rhs);
    }
    inline wgpu::SurfaceDescriptorFromXlibWindow* ToCppAPI(SurfaceDescriptorFromXlibWindow* rhs) {
        return reinterpret_cast<wgpu::SurfaceDescriptorFromXlibWindow*>(rhs);
    }
    inline const SurfaceDescriptorFromXlibWindow* FromCppAPI(const wgpu::SurfaceDescriptorFromXlibWindow* rhs) {
        return reinterpret_cast<const SurfaceDescriptorFromXlibWindow*>(rhs);
    }
    inline SurfaceDescriptorFromXlibWindow* FromCppAPI(wgpu::SurfaceDescriptorFromXlibWindow* rhs) {
        return reinterpret_cast<SurfaceDescriptorFromXlibWindow*>(rhs);
    }

    inline const WGPUSurfaceTexture* ToAPI(const SurfaceTexture* rhs) {
        return reinterpret_cast<const WGPUSurfaceTexture*>(rhs);
    }
    inline WGPUSurfaceTexture* ToAPI(SurfaceTexture* rhs) {
        return reinterpret_cast<WGPUSurfaceTexture*>(rhs);
    }
    inline const SurfaceTexture* FromAPI(const WGPUSurfaceTexture* rhs) {
        return reinterpret_cast<const SurfaceTexture*>(rhs);
    }
    inline SurfaceTexture* FromAPI(WGPUSurfaceTexture* rhs) {
        return reinterpret_cast<SurfaceTexture*>(rhs);
    }
    inline const wgpu::SurfaceTexture* ToCppAPI(const SurfaceTexture* rhs) {
        return reinterpret_cast<const wgpu::SurfaceTexture*>(rhs);
    }
    inline wgpu::SurfaceTexture* ToCppAPI(SurfaceTexture* rhs) {
        return reinterpret_cast<wgpu::SurfaceTexture*>(rhs);
    }
    inline const SurfaceTexture* FromCppAPI(const wgpu::SurfaceTexture* rhs) {
        return reinterpret_cast<const SurfaceTexture*>(rhs);
    }
    inline SurfaceTexture* FromCppAPI(wgpu::SurfaceTexture* rhs) {
        return reinterpret_cast<SurfaceTexture*>(rhs);
    }

    inline const WGPUSwapChainDescriptor* ToAPI(const SwapChainDescriptor* rhs) {
        return reinterpret_cast<const WGPUSwapChainDescriptor*>(rhs);
    }
    inline WGPUSwapChainDescriptor* ToAPI(SwapChainDescriptor* rhs) {
        return reinterpret_cast<WGPUSwapChainDescriptor*>(rhs);
    }
    inline const SwapChainDescriptor* FromAPI(const WGPUSwapChainDescriptor* rhs) {
        return reinterpret_cast<const SwapChainDescriptor*>(rhs);
    }
    inline SwapChainDescriptor* FromAPI(WGPUSwapChainDescriptor* rhs) {
        return reinterpret_cast<SwapChainDescriptor*>(rhs);
    }
    inline const wgpu::SwapChainDescriptor* ToCppAPI(const SwapChainDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SwapChainDescriptor*>(rhs);
    }
    inline wgpu::SwapChainDescriptor* ToCppAPI(SwapChainDescriptor* rhs) {
        return reinterpret_cast<wgpu::SwapChainDescriptor*>(rhs);
    }
    inline const SwapChainDescriptor* FromCppAPI(const wgpu::SwapChainDescriptor* rhs) {
        return reinterpret_cast<const SwapChainDescriptor*>(rhs);
    }
    inline SwapChainDescriptor* FromCppAPI(wgpu::SwapChainDescriptor* rhs) {
        return reinterpret_cast<SwapChainDescriptor*>(rhs);
    }

    inline const WGPUTextureBindingLayout* ToAPI(const TextureBindingLayout* rhs) {
        return reinterpret_cast<const WGPUTextureBindingLayout*>(rhs);
    }
    inline WGPUTextureBindingLayout* ToAPI(TextureBindingLayout* rhs) {
        return reinterpret_cast<WGPUTextureBindingLayout*>(rhs);
    }
    inline const TextureBindingLayout* FromAPI(const WGPUTextureBindingLayout* rhs) {
        return reinterpret_cast<const TextureBindingLayout*>(rhs);
    }
    inline TextureBindingLayout* FromAPI(WGPUTextureBindingLayout* rhs) {
        return reinterpret_cast<TextureBindingLayout*>(rhs);
    }
    inline const wgpu::TextureBindingLayout* ToCppAPI(const TextureBindingLayout* rhs) {
        return reinterpret_cast<const wgpu::TextureBindingLayout*>(rhs);
    }
    inline wgpu::TextureBindingLayout* ToCppAPI(TextureBindingLayout* rhs) {
        return reinterpret_cast<wgpu::TextureBindingLayout*>(rhs);
    }
    inline const TextureBindingLayout* FromCppAPI(const wgpu::TextureBindingLayout* rhs) {
        return reinterpret_cast<const TextureBindingLayout*>(rhs);
    }
    inline TextureBindingLayout* FromCppAPI(wgpu::TextureBindingLayout* rhs) {
        return reinterpret_cast<TextureBindingLayout*>(rhs);
    }

    inline const WGPUTextureBindingViewDimensionDescriptor* ToAPI(const TextureBindingViewDimensionDescriptor* rhs) {
        return reinterpret_cast<const WGPUTextureBindingViewDimensionDescriptor*>(rhs);
    }
    inline WGPUTextureBindingViewDimensionDescriptor* ToAPI(TextureBindingViewDimensionDescriptor* rhs) {
        return reinterpret_cast<WGPUTextureBindingViewDimensionDescriptor*>(rhs);
    }
    inline const TextureBindingViewDimensionDescriptor* FromAPI(const WGPUTextureBindingViewDimensionDescriptor* rhs) {
        return reinterpret_cast<const TextureBindingViewDimensionDescriptor*>(rhs);
    }
    inline TextureBindingViewDimensionDescriptor* FromAPI(WGPUTextureBindingViewDimensionDescriptor* rhs) {
        return reinterpret_cast<TextureBindingViewDimensionDescriptor*>(rhs);
    }
    inline const wgpu::TextureBindingViewDimensionDescriptor* ToCppAPI(const TextureBindingViewDimensionDescriptor* rhs) {
        return reinterpret_cast<const wgpu::TextureBindingViewDimensionDescriptor*>(rhs);
    }
    inline wgpu::TextureBindingViewDimensionDescriptor* ToCppAPI(TextureBindingViewDimensionDescriptor* rhs) {
        return reinterpret_cast<wgpu::TextureBindingViewDimensionDescriptor*>(rhs);
    }
    inline const TextureBindingViewDimensionDescriptor* FromCppAPI(const wgpu::TextureBindingViewDimensionDescriptor* rhs) {
        return reinterpret_cast<const TextureBindingViewDimensionDescriptor*>(rhs);
    }
    inline TextureBindingViewDimensionDescriptor* FromCppAPI(wgpu::TextureBindingViewDimensionDescriptor* rhs) {
        return reinterpret_cast<TextureBindingViewDimensionDescriptor*>(rhs);
    }

    inline const WGPUTextureDataLayout* ToAPI(const TextureDataLayout* rhs) {
        return reinterpret_cast<const WGPUTextureDataLayout*>(rhs);
    }
    inline WGPUTextureDataLayout* ToAPI(TextureDataLayout* rhs) {
        return reinterpret_cast<WGPUTextureDataLayout*>(rhs);
    }
    inline const TextureDataLayout* FromAPI(const WGPUTextureDataLayout* rhs) {
        return reinterpret_cast<const TextureDataLayout*>(rhs);
    }
    inline TextureDataLayout* FromAPI(WGPUTextureDataLayout* rhs) {
        return reinterpret_cast<TextureDataLayout*>(rhs);
    }
    inline const wgpu::TextureDataLayout* ToCppAPI(const TextureDataLayout* rhs) {
        return reinterpret_cast<const wgpu::TextureDataLayout*>(rhs);
    }
    inline wgpu::TextureDataLayout* ToCppAPI(TextureDataLayout* rhs) {
        return reinterpret_cast<wgpu::TextureDataLayout*>(rhs);
    }
    inline const TextureDataLayout* FromCppAPI(const wgpu::TextureDataLayout* rhs) {
        return reinterpret_cast<const TextureDataLayout*>(rhs);
    }
    inline TextureDataLayout* FromCppAPI(wgpu::TextureDataLayout* rhs) {
        return reinterpret_cast<TextureDataLayout*>(rhs);
    }

    inline const WGPUTextureViewDescriptor* ToAPI(const TextureViewDescriptor* rhs) {
        return reinterpret_cast<const WGPUTextureViewDescriptor*>(rhs);
    }
    inline WGPUTextureViewDescriptor* ToAPI(TextureViewDescriptor* rhs) {
        return reinterpret_cast<WGPUTextureViewDescriptor*>(rhs);
    }
    inline const TextureViewDescriptor* FromAPI(const WGPUTextureViewDescriptor* rhs) {
        return reinterpret_cast<const TextureViewDescriptor*>(rhs);
    }
    inline TextureViewDescriptor* FromAPI(WGPUTextureViewDescriptor* rhs) {
        return reinterpret_cast<TextureViewDescriptor*>(rhs);
    }
    inline const wgpu::TextureViewDescriptor* ToCppAPI(const TextureViewDescriptor* rhs) {
        return reinterpret_cast<const wgpu::TextureViewDescriptor*>(rhs);
    }
    inline wgpu::TextureViewDescriptor* ToCppAPI(TextureViewDescriptor* rhs) {
        return reinterpret_cast<wgpu::TextureViewDescriptor*>(rhs);
    }
    inline const TextureViewDescriptor* FromCppAPI(const wgpu::TextureViewDescriptor* rhs) {
        return reinterpret_cast<const TextureViewDescriptor*>(rhs);
    }
    inline TextureViewDescriptor* FromCppAPI(wgpu::TextureViewDescriptor* rhs) {
        return reinterpret_cast<TextureViewDescriptor*>(rhs);
    }

    inline const WGPUUncapturedErrorCallbackInfo* ToAPI(const UncapturedErrorCallbackInfo* rhs) {
        return reinterpret_cast<const WGPUUncapturedErrorCallbackInfo*>(rhs);
    }
    inline WGPUUncapturedErrorCallbackInfo* ToAPI(UncapturedErrorCallbackInfo* rhs) {
        return reinterpret_cast<WGPUUncapturedErrorCallbackInfo*>(rhs);
    }
    inline const UncapturedErrorCallbackInfo* FromAPI(const WGPUUncapturedErrorCallbackInfo* rhs) {
        return reinterpret_cast<const UncapturedErrorCallbackInfo*>(rhs);
    }
    inline UncapturedErrorCallbackInfo* FromAPI(WGPUUncapturedErrorCallbackInfo* rhs) {
        return reinterpret_cast<UncapturedErrorCallbackInfo*>(rhs);
    }
    inline const wgpu::UncapturedErrorCallbackInfo* ToCppAPI(const UncapturedErrorCallbackInfo* rhs) {
        return reinterpret_cast<const wgpu::UncapturedErrorCallbackInfo*>(rhs);
    }
    inline wgpu::UncapturedErrorCallbackInfo* ToCppAPI(UncapturedErrorCallbackInfo* rhs) {
        return reinterpret_cast<wgpu::UncapturedErrorCallbackInfo*>(rhs);
    }
    inline const UncapturedErrorCallbackInfo* FromCppAPI(const wgpu::UncapturedErrorCallbackInfo* rhs) {
        return reinterpret_cast<const UncapturedErrorCallbackInfo*>(rhs);
    }
    inline UncapturedErrorCallbackInfo* FromCppAPI(wgpu::UncapturedErrorCallbackInfo* rhs) {
        return reinterpret_cast<UncapturedErrorCallbackInfo*>(rhs);
    }

    inline const WGPUVertexAttribute* ToAPI(const VertexAttribute* rhs) {
        return reinterpret_cast<const WGPUVertexAttribute*>(rhs);
    }
    inline WGPUVertexAttribute* ToAPI(VertexAttribute* rhs) {
        return reinterpret_cast<WGPUVertexAttribute*>(rhs);
    }
    inline const VertexAttribute* FromAPI(const WGPUVertexAttribute* rhs) {
        return reinterpret_cast<const VertexAttribute*>(rhs);
    }
    inline VertexAttribute* FromAPI(WGPUVertexAttribute* rhs) {
        return reinterpret_cast<VertexAttribute*>(rhs);
    }
    inline const wgpu::VertexAttribute* ToCppAPI(const VertexAttribute* rhs) {
        return reinterpret_cast<const wgpu::VertexAttribute*>(rhs);
    }
    inline wgpu::VertexAttribute* ToCppAPI(VertexAttribute* rhs) {
        return reinterpret_cast<wgpu::VertexAttribute*>(rhs);
    }
    inline const VertexAttribute* FromCppAPI(const wgpu::VertexAttribute* rhs) {
        return reinterpret_cast<const VertexAttribute*>(rhs);
    }
    inline VertexAttribute* FromCppAPI(wgpu::VertexAttribute* rhs) {
        return reinterpret_cast<VertexAttribute*>(rhs);
    }

    inline const WGPUYCbCrVkDescriptor* ToAPI(const YCbCrVkDescriptor* rhs) {
        return reinterpret_cast<const WGPUYCbCrVkDescriptor*>(rhs);
    }
    inline WGPUYCbCrVkDescriptor* ToAPI(YCbCrVkDescriptor* rhs) {
        return reinterpret_cast<WGPUYCbCrVkDescriptor*>(rhs);
    }
    inline const YCbCrVkDescriptor* FromAPI(const WGPUYCbCrVkDescriptor* rhs) {
        return reinterpret_cast<const YCbCrVkDescriptor*>(rhs);
    }
    inline YCbCrVkDescriptor* FromAPI(WGPUYCbCrVkDescriptor* rhs) {
        return reinterpret_cast<YCbCrVkDescriptor*>(rhs);
    }
    inline const wgpu::YCbCrVkDescriptor* ToCppAPI(const YCbCrVkDescriptor* rhs) {
        return reinterpret_cast<const wgpu::YCbCrVkDescriptor*>(rhs);
    }
    inline wgpu::YCbCrVkDescriptor* ToCppAPI(YCbCrVkDescriptor* rhs) {
        return reinterpret_cast<wgpu::YCbCrVkDescriptor*>(rhs);
    }
    inline const YCbCrVkDescriptor* FromCppAPI(const wgpu::YCbCrVkDescriptor* rhs) {
        return reinterpret_cast<const YCbCrVkDescriptor*>(rhs);
    }
    inline YCbCrVkDescriptor* FromCppAPI(wgpu::YCbCrVkDescriptor* rhs) {
        return reinterpret_cast<YCbCrVkDescriptor*>(rhs);
    }

    inline const WGPUAHardwareBufferProperties* ToAPI(const AHardwareBufferProperties* rhs) {
        return reinterpret_cast<const WGPUAHardwareBufferProperties*>(rhs);
    }
    inline WGPUAHardwareBufferProperties* ToAPI(AHardwareBufferProperties* rhs) {
        return reinterpret_cast<WGPUAHardwareBufferProperties*>(rhs);
    }
    inline const AHardwareBufferProperties* FromAPI(const WGPUAHardwareBufferProperties* rhs) {
        return reinterpret_cast<const AHardwareBufferProperties*>(rhs);
    }
    inline AHardwareBufferProperties* FromAPI(WGPUAHardwareBufferProperties* rhs) {
        return reinterpret_cast<AHardwareBufferProperties*>(rhs);
    }
    inline const wgpu::AHardwareBufferProperties* ToCppAPI(const AHardwareBufferProperties* rhs) {
        return reinterpret_cast<const wgpu::AHardwareBufferProperties*>(rhs);
    }
    inline wgpu::AHardwareBufferProperties* ToCppAPI(AHardwareBufferProperties* rhs) {
        return reinterpret_cast<wgpu::AHardwareBufferProperties*>(rhs);
    }
    inline const AHardwareBufferProperties* FromCppAPI(const wgpu::AHardwareBufferProperties* rhs) {
        return reinterpret_cast<const AHardwareBufferProperties*>(rhs);
    }
    inline AHardwareBufferProperties* FromCppAPI(wgpu::AHardwareBufferProperties* rhs) {
        return reinterpret_cast<AHardwareBufferProperties*>(rhs);
    }

    inline const WGPUAdapterPropertiesMemoryHeaps* ToAPI(const AdapterPropertiesMemoryHeaps* rhs) {
        return reinterpret_cast<const WGPUAdapterPropertiesMemoryHeaps*>(rhs);
    }
    inline WGPUAdapterPropertiesMemoryHeaps* ToAPI(AdapterPropertiesMemoryHeaps* rhs) {
        return reinterpret_cast<WGPUAdapterPropertiesMemoryHeaps*>(rhs);
    }
    inline const AdapterPropertiesMemoryHeaps* FromAPI(const WGPUAdapterPropertiesMemoryHeaps* rhs) {
        return reinterpret_cast<const AdapterPropertiesMemoryHeaps*>(rhs);
    }
    inline AdapterPropertiesMemoryHeaps* FromAPI(WGPUAdapterPropertiesMemoryHeaps* rhs) {
        return reinterpret_cast<AdapterPropertiesMemoryHeaps*>(rhs);
    }
    inline const wgpu::AdapterPropertiesMemoryHeaps* ToCppAPI(const AdapterPropertiesMemoryHeaps* rhs) {
        return reinterpret_cast<const wgpu::AdapterPropertiesMemoryHeaps*>(rhs);
    }
    inline wgpu::AdapterPropertiesMemoryHeaps* ToCppAPI(AdapterPropertiesMemoryHeaps* rhs) {
        return reinterpret_cast<wgpu::AdapterPropertiesMemoryHeaps*>(rhs);
    }
    inline const AdapterPropertiesMemoryHeaps* FromCppAPI(const wgpu::AdapterPropertiesMemoryHeaps* rhs) {
        return reinterpret_cast<const AdapterPropertiesMemoryHeaps*>(rhs);
    }
    inline AdapterPropertiesMemoryHeaps* FromCppAPI(wgpu::AdapterPropertiesMemoryHeaps* rhs) {
        return reinterpret_cast<AdapterPropertiesMemoryHeaps*>(rhs);
    }

    inline const WGPUBindGroupDescriptor* ToAPI(const BindGroupDescriptor* rhs) {
        return reinterpret_cast<const WGPUBindGroupDescriptor*>(rhs);
    }
    inline WGPUBindGroupDescriptor* ToAPI(BindGroupDescriptor* rhs) {
        return reinterpret_cast<WGPUBindGroupDescriptor*>(rhs);
    }
    inline const BindGroupDescriptor* FromAPI(const WGPUBindGroupDescriptor* rhs) {
        return reinterpret_cast<const BindGroupDescriptor*>(rhs);
    }
    inline BindGroupDescriptor* FromAPI(WGPUBindGroupDescriptor* rhs) {
        return reinterpret_cast<BindGroupDescriptor*>(rhs);
    }
    inline const wgpu::BindGroupDescriptor* ToCppAPI(const BindGroupDescriptor* rhs) {
        return reinterpret_cast<const wgpu::BindGroupDescriptor*>(rhs);
    }
    inline wgpu::BindGroupDescriptor* ToCppAPI(BindGroupDescriptor* rhs) {
        return reinterpret_cast<wgpu::BindGroupDescriptor*>(rhs);
    }
    inline const BindGroupDescriptor* FromCppAPI(const wgpu::BindGroupDescriptor* rhs) {
        return reinterpret_cast<const BindGroupDescriptor*>(rhs);
    }
    inline BindGroupDescriptor* FromCppAPI(wgpu::BindGroupDescriptor* rhs) {
        return reinterpret_cast<BindGroupDescriptor*>(rhs);
    }

    inline const WGPUBindGroupLayoutEntry* ToAPI(const BindGroupLayoutEntry* rhs) {
        return reinterpret_cast<const WGPUBindGroupLayoutEntry*>(rhs);
    }
    inline WGPUBindGroupLayoutEntry* ToAPI(BindGroupLayoutEntry* rhs) {
        return reinterpret_cast<WGPUBindGroupLayoutEntry*>(rhs);
    }
    inline const BindGroupLayoutEntry* FromAPI(const WGPUBindGroupLayoutEntry* rhs) {
        return reinterpret_cast<const BindGroupLayoutEntry*>(rhs);
    }
    inline BindGroupLayoutEntry* FromAPI(WGPUBindGroupLayoutEntry* rhs) {
        return reinterpret_cast<BindGroupLayoutEntry*>(rhs);
    }
    inline const wgpu::BindGroupLayoutEntry* ToCppAPI(const BindGroupLayoutEntry* rhs) {
        return reinterpret_cast<const wgpu::BindGroupLayoutEntry*>(rhs);
    }
    inline wgpu::BindGroupLayoutEntry* ToCppAPI(BindGroupLayoutEntry* rhs) {
        return reinterpret_cast<wgpu::BindGroupLayoutEntry*>(rhs);
    }
    inline const BindGroupLayoutEntry* FromCppAPI(const wgpu::BindGroupLayoutEntry* rhs) {
        return reinterpret_cast<const BindGroupLayoutEntry*>(rhs);
    }
    inline BindGroupLayoutEntry* FromCppAPI(wgpu::BindGroupLayoutEntry* rhs) {
        return reinterpret_cast<BindGroupLayoutEntry*>(rhs);
    }

    inline const WGPUBlendState* ToAPI(const BlendState* rhs) {
        return reinterpret_cast<const WGPUBlendState*>(rhs);
    }
    inline WGPUBlendState* ToAPI(BlendState* rhs) {
        return reinterpret_cast<WGPUBlendState*>(rhs);
    }
    inline const BlendState* FromAPI(const WGPUBlendState* rhs) {
        return reinterpret_cast<const BlendState*>(rhs);
    }
    inline BlendState* FromAPI(WGPUBlendState* rhs) {
        return reinterpret_cast<BlendState*>(rhs);
    }
    inline const wgpu::BlendState* ToCppAPI(const BlendState* rhs) {
        return reinterpret_cast<const wgpu::BlendState*>(rhs);
    }
    inline wgpu::BlendState* ToCppAPI(BlendState* rhs) {
        return reinterpret_cast<wgpu::BlendState*>(rhs);
    }
    inline const BlendState* FromCppAPI(const wgpu::BlendState* rhs) {
        return reinterpret_cast<const BlendState*>(rhs);
    }
    inline BlendState* FromCppAPI(wgpu::BlendState* rhs) {
        return reinterpret_cast<BlendState*>(rhs);
    }

    inline const WGPUCompilationInfo* ToAPI(const CompilationInfo* rhs) {
        return reinterpret_cast<const WGPUCompilationInfo*>(rhs);
    }
    inline WGPUCompilationInfo* ToAPI(CompilationInfo* rhs) {
        return reinterpret_cast<WGPUCompilationInfo*>(rhs);
    }
    inline const CompilationInfo* FromAPI(const WGPUCompilationInfo* rhs) {
        return reinterpret_cast<const CompilationInfo*>(rhs);
    }
    inline CompilationInfo* FromAPI(WGPUCompilationInfo* rhs) {
        return reinterpret_cast<CompilationInfo*>(rhs);
    }
    inline const wgpu::CompilationInfo* ToCppAPI(const CompilationInfo* rhs) {
        return reinterpret_cast<const wgpu::CompilationInfo*>(rhs);
    }
    inline wgpu::CompilationInfo* ToCppAPI(CompilationInfo* rhs) {
        return reinterpret_cast<wgpu::CompilationInfo*>(rhs);
    }
    inline const CompilationInfo* FromCppAPI(const wgpu::CompilationInfo* rhs) {
        return reinterpret_cast<const CompilationInfo*>(rhs);
    }
    inline CompilationInfo* FromCppAPI(wgpu::CompilationInfo* rhs) {
        return reinterpret_cast<CompilationInfo*>(rhs);
    }

    inline const WGPUComputePassDescriptor* ToAPI(const ComputePassDescriptor* rhs) {
        return reinterpret_cast<const WGPUComputePassDescriptor*>(rhs);
    }
    inline WGPUComputePassDescriptor* ToAPI(ComputePassDescriptor* rhs) {
        return reinterpret_cast<WGPUComputePassDescriptor*>(rhs);
    }
    inline const ComputePassDescriptor* FromAPI(const WGPUComputePassDescriptor* rhs) {
        return reinterpret_cast<const ComputePassDescriptor*>(rhs);
    }
    inline ComputePassDescriptor* FromAPI(WGPUComputePassDescriptor* rhs) {
        return reinterpret_cast<ComputePassDescriptor*>(rhs);
    }
    inline const wgpu::ComputePassDescriptor* ToCppAPI(const ComputePassDescriptor* rhs) {
        return reinterpret_cast<const wgpu::ComputePassDescriptor*>(rhs);
    }
    inline wgpu::ComputePassDescriptor* ToCppAPI(ComputePassDescriptor* rhs) {
        return reinterpret_cast<wgpu::ComputePassDescriptor*>(rhs);
    }
    inline const ComputePassDescriptor* FromCppAPI(const wgpu::ComputePassDescriptor* rhs) {
        return reinterpret_cast<const ComputePassDescriptor*>(rhs);
    }
    inline ComputePassDescriptor* FromCppAPI(wgpu::ComputePassDescriptor* rhs) {
        return reinterpret_cast<ComputePassDescriptor*>(rhs);
    }

    inline const WGPUDepthStencilState* ToAPI(const DepthStencilState* rhs) {
        return reinterpret_cast<const WGPUDepthStencilState*>(rhs);
    }
    inline WGPUDepthStencilState* ToAPI(DepthStencilState* rhs) {
        return reinterpret_cast<WGPUDepthStencilState*>(rhs);
    }
    inline const DepthStencilState* FromAPI(const WGPUDepthStencilState* rhs) {
        return reinterpret_cast<const DepthStencilState*>(rhs);
    }
    inline DepthStencilState* FromAPI(WGPUDepthStencilState* rhs) {
        return reinterpret_cast<DepthStencilState*>(rhs);
    }
    inline const wgpu::DepthStencilState* ToCppAPI(const DepthStencilState* rhs) {
        return reinterpret_cast<const wgpu::DepthStencilState*>(rhs);
    }
    inline wgpu::DepthStencilState* ToCppAPI(DepthStencilState* rhs) {
        return reinterpret_cast<wgpu::DepthStencilState*>(rhs);
    }
    inline const DepthStencilState* FromCppAPI(const wgpu::DepthStencilState* rhs) {
        return reinterpret_cast<const DepthStencilState*>(rhs);
    }
    inline DepthStencilState* FromCppAPI(wgpu::DepthStencilState* rhs) {
        return reinterpret_cast<DepthStencilState*>(rhs);
    }

    inline const WGPUDrmFormatCapabilities* ToAPI(const DrmFormatCapabilities* rhs) {
        return reinterpret_cast<const WGPUDrmFormatCapabilities*>(rhs);
    }
    inline WGPUDrmFormatCapabilities* ToAPI(DrmFormatCapabilities* rhs) {
        return reinterpret_cast<WGPUDrmFormatCapabilities*>(rhs);
    }
    inline const DrmFormatCapabilities* FromAPI(const WGPUDrmFormatCapabilities* rhs) {
        return reinterpret_cast<const DrmFormatCapabilities*>(rhs);
    }
    inline DrmFormatCapabilities* FromAPI(WGPUDrmFormatCapabilities* rhs) {
        return reinterpret_cast<DrmFormatCapabilities*>(rhs);
    }
    inline const wgpu::DrmFormatCapabilities* ToCppAPI(const DrmFormatCapabilities* rhs) {
        return reinterpret_cast<const wgpu::DrmFormatCapabilities*>(rhs);
    }
    inline wgpu::DrmFormatCapabilities* ToCppAPI(DrmFormatCapabilities* rhs) {
        return reinterpret_cast<wgpu::DrmFormatCapabilities*>(rhs);
    }
    inline const DrmFormatCapabilities* FromCppAPI(const wgpu::DrmFormatCapabilities* rhs) {
        return reinterpret_cast<const DrmFormatCapabilities*>(rhs);
    }
    inline DrmFormatCapabilities* FromCppAPI(wgpu::DrmFormatCapabilities* rhs) {
        return reinterpret_cast<DrmFormatCapabilities*>(rhs);
    }

    inline const WGPUExternalTextureDescriptor* ToAPI(const ExternalTextureDescriptor* rhs) {
        return reinterpret_cast<const WGPUExternalTextureDescriptor*>(rhs);
    }
    inline WGPUExternalTextureDescriptor* ToAPI(ExternalTextureDescriptor* rhs) {
        return reinterpret_cast<WGPUExternalTextureDescriptor*>(rhs);
    }
    inline const ExternalTextureDescriptor* FromAPI(const WGPUExternalTextureDescriptor* rhs) {
        return reinterpret_cast<const ExternalTextureDescriptor*>(rhs);
    }
    inline ExternalTextureDescriptor* FromAPI(WGPUExternalTextureDescriptor* rhs) {
        return reinterpret_cast<ExternalTextureDescriptor*>(rhs);
    }
    inline const wgpu::ExternalTextureDescriptor* ToCppAPI(const ExternalTextureDescriptor* rhs) {
        return reinterpret_cast<const wgpu::ExternalTextureDescriptor*>(rhs);
    }
    inline wgpu::ExternalTextureDescriptor* ToCppAPI(ExternalTextureDescriptor* rhs) {
        return reinterpret_cast<wgpu::ExternalTextureDescriptor*>(rhs);
    }
    inline const ExternalTextureDescriptor* FromCppAPI(const wgpu::ExternalTextureDescriptor* rhs) {
        return reinterpret_cast<const ExternalTextureDescriptor*>(rhs);
    }
    inline ExternalTextureDescriptor* FromCppAPI(wgpu::ExternalTextureDescriptor* rhs) {
        return reinterpret_cast<ExternalTextureDescriptor*>(rhs);
    }

    inline const WGPUFutureWaitInfo* ToAPI(const FutureWaitInfo* rhs) {
        return reinterpret_cast<const WGPUFutureWaitInfo*>(rhs);
    }
    inline WGPUFutureWaitInfo* ToAPI(FutureWaitInfo* rhs) {
        return reinterpret_cast<WGPUFutureWaitInfo*>(rhs);
    }
    inline const FutureWaitInfo* FromAPI(const WGPUFutureWaitInfo* rhs) {
        return reinterpret_cast<const FutureWaitInfo*>(rhs);
    }
    inline FutureWaitInfo* FromAPI(WGPUFutureWaitInfo* rhs) {
        return reinterpret_cast<FutureWaitInfo*>(rhs);
    }
    inline const wgpu::FutureWaitInfo* ToCppAPI(const FutureWaitInfo* rhs) {
        return reinterpret_cast<const wgpu::FutureWaitInfo*>(rhs);
    }
    inline wgpu::FutureWaitInfo* ToCppAPI(FutureWaitInfo* rhs) {
        return reinterpret_cast<wgpu::FutureWaitInfo*>(rhs);
    }
    inline const FutureWaitInfo* FromCppAPI(const wgpu::FutureWaitInfo* rhs) {
        return reinterpret_cast<const FutureWaitInfo*>(rhs);
    }
    inline FutureWaitInfo* FromCppAPI(wgpu::FutureWaitInfo* rhs) {
        return reinterpret_cast<FutureWaitInfo*>(rhs);
    }

    inline const WGPUImageCopyBuffer* ToAPI(const ImageCopyBuffer* rhs) {
        return reinterpret_cast<const WGPUImageCopyBuffer*>(rhs);
    }
    inline WGPUImageCopyBuffer* ToAPI(ImageCopyBuffer* rhs) {
        return reinterpret_cast<WGPUImageCopyBuffer*>(rhs);
    }
    inline const ImageCopyBuffer* FromAPI(const WGPUImageCopyBuffer* rhs) {
        return reinterpret_cast<const ImageCopyBuffer*>(rhs);
    }
    inline ImageCopyBuffer* FromAPI(WGPUImageCopyBuffer* rhs) {
        return reinterpret_cast<ImageCopyBuffer*>(rhs);
    }
    inline const wgpu::ImageCopyBuffer* ToCppAPI(const ImageCopyBuffer* rhs) {
        return reinterpret_cast<const wgpu::ImageCopyBuffer*>(rhs);
    }
    inline wgpu::ImageCopyBuffer* ToCppAPI(ImageCopyBuffer* rhs) {
        return reinterpret_cast<wgpu::ImageCopyBuffer*>(rhs);
    }
    inline const ImageCopyBuffer* FromCppAPI(const wgpu::ImageCopyBuffer* rhs) {
        return reinterpret_cast<const ImageCopyBuffer*>(rhs);
    }
    inline ImageCopyBuffer* FromCppAPI(wgpu::ImageCopyBuffer* rhs) {
        return reinterpret_cast<ImageCopyBuffer*>(rhs);
    }

    inline const WGPUImageCopyExternalTexture* ToAPI(const ImageCopyExternalTexture* rhs) {
        return reinterpret_cast<const WGPUImageCopyExternalTexture*>(rhs);
    }
    inline WGPUImageCopyExternalTexture* ToAPI(ImageCopyExternalTexture* rhs) {
        return reinterpret_cast<WGPUImageCopyExternalTexture*>(rhs);
    }
    inline const ImageCopyExternalTexture* FromAPI(const WGPUImageCopyExternalTexture* rhs) {
        return reinterpret_cast<const ImageCopyExternalTexture*>(rhs);
    }
    inline ImageCopyExternalTexture* FromAPI(WGPUImageCopyExternalTexture* rhs) {
        return reinterpret_cast<ImageCopyExternalTexture*>(rhs);
    }
    inline const wgpu::ImageCopyExternalTexture* ToCppAPI(const ImageCopyExternalTexture* rhs) {
        return reinterpret_cast<const wgpu::ImageCopyExternalTexture*>(rhs);
    }
    inline wgpu::ImageCopyExternalTexture* ToCppAPI(ImageCopyExternalTexture* rhs) {
        return reinterpret_cast<wgpu::ImageCopyExternalTexture*>(rhs);
    }
    inline const ImageCopyExternalTexture* FromCppAPI(const wgpu::ImageCopyExternalTexture* rhs) {
        return reinterpret_cast<const ImageCopyExternalTexture*>(rhs);
    }
    inline ImageCopyExternalTexture* FromCppAPI(wgpu::ImageCopyExternalTexture* rhs) {
        return reinterpret_cast<ImageCopyExternalTexture*>(rhs);
    }

    inline const WGPUImageCopyTexture* ToAPI(const ImageCopyTexture* rhs) {
        return reinterpret_cast<const WGPUImageCopyTexture*>(rhs);
    }
    inline WGPUImageCopyTexture* ToAPI(ImageCopyTexture* rhs) {
        return reinterpret_cast<WGPUImageCopyTexture*>(rhs);
    }
    inline const ImageCopyTexture* FromAPI(const WGPUImageCopyTexture* rhs) {
        return reinterpret_cast<const ImageCopyTexture*>(rhs);
    }
    inline ImageCopyTexture* FromAPI(WGPUImageCopyTexture* rhs) {
        return reinterpret_cast<ImageCopyTexture*>(rhs);
    }
    inline const wgpu::ImageCopyTexture* ToCppAPI(const ImageCopyTexture* rhs) {
        return reinterpret_cast<const wgpu::ImageCopyTexture*>(rhs);
    }
    inline wgpu::ImageCopyTexture* ToCppAPI(ImageCopyTexture* rhs) {
        return reinterpret_cast<wgpu::ImageCopyTexture*>(rhs);
    }
    inline const ImageCopyTexture* FromCppAPI(const wgpu::ImageCopyTexture* rhs) {
        return reinterpret_cast<const ImageCopyTexture*>(rhs);
    }
    inline ImageCopyTexture* FromCppAPI(wgpu::ImageCopyTexture* rhs) {
        return reinterpret_cast<ImageCopyTexture*>(rhs);
    }

    inline const WGPUInstanceDescriptor* ToAPI(const InstanceDescriptor* rhs) {
        return reinterpret_cast<const WGPUInstanceDescriptor*>(rhs);
    }
    inline WGPUInstanceDescriptor* ToAPI(InstanceDescriptor* rhs) {
        return reinterpret_cast<WGPUInstanceDescriptor*>(rhs);
    }
    inline const InstanceDescriptor* FromAPI(const WGPUInstanceDescriptor* rhs) {
        return reinterpret_cast<const InstanceDescriptor*>(rhs);
    }
    inline InstanceDescriptor* FromAPI(WGPUInstanceDescriptor* rhs) {
        return reinterpret_cast<InstanceDescriptor*>(rhs);
    }
    inline const wgpu::InstanceDescriptor* ToCppAPI(const InstanceDescriptor* rhs) {
        return reinterpret_cast<const wgpu::InstanceDescriptor*>(rhs);
    }
    inline wgpu::InstanceDescriptor* ToCppAPI(InstanceDescriptor* rhs) {
        return reinterpret_cast<wgpu::InstanceDescriptor*>(rhs);
    }
    inline const InstanceDescriptor* FromCppAPI(const wgpu::InstanceDescriptor* rhs) {
        return reinterpret_cast<const InstanceDescriptor*>(rhs);
    }
    inline InstanceDescriptor* FromCppAPI(wgpu::InstanceDescriptor* rhs) {
        return reinterpret_cast<InstanceDescriptor*>(rhs);
    }

    inline const WGPUPipelineLayoutPixelLocalStorage* ToAPI(const PipelineLayoutPixelLocalStorage* rhs) {
        return reinterpret_cast<const WGPUPipelineLayoutPixelLocalStorage*>(rhs);
    }
    inline WGPUPipelineLayoutPixelLocalStorage* ToAPI(PipelineLayoutPixelLocalStorage* rhs) {
        return reinterpret_cast<WGPUPipelineLayoutPixelLocalStorage*>(rhs);
    }
    inline const PipelineLayoutPixelLocalStorage* FromAPI(const WGPUPipelineLayoutPixelLocalStorage* rhs) {
        return reinterpret_cast<const PipelineLayoutPixelLocalStorage*>(rhs);
    }
    inline PipelineLayoutPixelLocalStorage* FromAPI(WGPUPipelineLayoutPixelLocalStorage* rhs) {
        return reinterpret_cast<PipelineLayoutPixelLocalStorage*>(rhs);
    }
    inline const wgpu::PipelineLayoutPixelLocalStorage* ToCppAPI(const PipelineLayoutPixelLocalStorage* rhs) {
        return reinterpret_cast<const wgpu::PipelineLayoutPixelLocalStorage*>(rhs);
    }
    inline wgpu::PipelineLayoutPixelLocalStorage* ToCppAPI(PipelineLayoutPixelLocalStorage* rhs) {
        return reinterpret_cast<wgpu::PipelineLayoutPixelLocalStorage*>(rhs);
    }
    inline const PipelineLayoutPixelLocalStorage* FromCppAPI(const wgpu::PipelineLayoutPixelLocalStorage* rhs) {
        return reinterpret_cast<const PipelineLayoutPixelLocalStorage*>(rhs);
    }
    inline PipelineLayoutPixelLocalStorage* FromCppAPI(wgpu::PipelineLayoutPixelLocalStorage* rhs) {
        return reinterpret_cast<PipelineLayoutPixelLocalStorage*>(rhs);
    }

    inline const WGPUProgrammableStageDescriptor* ToAPI(const ProgrammableStageDescriptor* rhs) {
        return reinterpret_cast<const WGPUProgrammableStageDescriptor*>(rhs);
    }
    inline WGPUProgrammableStageDescriptor* ToAPI(ProgrammableStageDescriptor* rhs) {
        return reinterpret_cast<WGPUProgrammableStageDescriptor*>(rhs);
    }
    inline const ProgrammableStageDescriptor* FromAPI(const WGPUProgrammableStageDescriptor* rhs) {
        return reinterpret_cast<const ProgrammableStageDescriptor*>(rhs);
    }
    inline ProgrammableStageDescriptor* FromAPI(WGPUProgrammableStageDescriptor* rhs) {
        return reinterpret_cast<ProgrammableStageDescriptor*>(rhs);
    }
    inline const wgpu::ProgrammableStageDescriptor* ToCppAPI(const ProgrammableStageDescriptor* rhs) {
        return reinterpret_cast<const wgpu::ProgrammableStageDescriptor*>(rhs);
    }
    inline wgpu::ProgrammableStageDescriptor* ToCppAPI(ProgrammableStageDescriptor* rhs) {
        return reinterpret_cast<wgpu::ProgrammableStageDescriptor*>(rhs);
    }
    inline const ProgrammableStageDescriptor* FromCppAPI(const wgpu::ProgrammableStageDescriptor* rhs) {
        return reinterpret_cast<const ProgrammableStageDescriptor*>(rhs);
    }
    inline ProgrammableStageDescriptor* FromCppAPI(wgpu::ProgrammableStageDescriptor* rhs) {
        return reinterpret_cast<ProgrammableStageDescriptor*>(rhs);
    }

    inline const WGPURenderPassColorAttachment* ToAPI(const RenderPassColorAttachment* rhs) {
        return reinterpret_cast<const WGPURenderPassColorAttachment*>(rhs);
    }
    inline WGPURenderPassColorAttachment* ToAPI(RenderPassColorAttachment* rhs) {
        return reinterpret_cast<WGPURenderPassColorAttachment*>(rhs);
    }
    inline const RenderPassColorAttachment* FromAPI(const WGPURenderPassColorAttachment* rhs) {
        return reinterpret_cast<const RenderPassColorAttachment*>(rhs);
    }
    inline RenderPassColorAttachment* FromAPI(WGPURenderPassColorAttachment* rhs) {
        return reinterpret_cast<RenderPassColorAttachment*>(rhs);
    }
    inline const wgpu::RenderPassColorAttachment* ToCppAPI(const RenderPassColorAttachment* rhs) {
        return reinterpret_cast<const wgpu::RenderPassColorAttachment*>(rhs);
    }
    inline wgpu::RenderPassColorAttachment* ToCppAPI(RenderPassColorAttachment* rhs) {
        return reinterpret_cast<wgpu::RenderPassColorAttachment*>(rhs);
    }
    inline const RenderPassColorAttachment* FromCppAPI(const wgpu::RenderPassColorAttachment* rhs) {
        return reinterpret_cast<const RenderPassColorAttachment*>(rhs);
    }
    inline RenderPassColorAttachment* FromCppAPI(wgpu::RenderPassColorAttachment* rhs) {
        return reinterpret_cast<RenderPassColorAttachment*>(rhs);
    }

    inline const WGPURenderPassStorageAttachment* ToAPI(const RenderPassStorageAttachment* rhs) {
        return reinterpret_cast<const WGPURenderPassStorageAttachment*>(rhs);
    }
    inline WGPURenderPassStorageAttachment* ToAPI(RenderPassStorageAttachment* rhs) {
        return reinterpret_cast<WGPURenderPassStorageAttachment*>(rhs);
    }
    inline const RenderPassStorageAttachment* FromAPI(const WGPURenderPassStorageAttachment* rhs) {
        return reinterpret_cast<const RenderPassStorageAttachment*>(rhs);
    }
    inline RenderPassStorageAttachment* FromAPI(WGPURenderPassStorageAttachment* rhs) {
        return reinterpret_cast<RenderPassStorageAttachment*>(rhs);
    }
    inline const wgpu::RenderPassStorageAttachment* ToCppAPI(const RenderPassStorageAttachment* rhs) {
        return reinterpret_cast<const wgpu::RenderPassStorageAttachment*>(rhs);
    }
    inline wgpu::RenderPassStorageAttachment* ToCppAPI(RenderPassStorageAttachment* rhs) {
        return reinterpret_cast<wgpu::RenderPassStorageAttachment*>(rhs);
    }
    inline const RenderPassStorageAttachment* FromCppAPI(const wgpu::RenderPassStorageAttachment* rhs) {
        return reinterpret_cast<const RenderPassStorageAttachment*>(rhs);
    }
    inline RenderPassStorageAttachment* FromCppAPI(wgpu::RenderPassStorageAttachment* rhs) {
        return reinterpret_cast<RenderPassStorageAttachment*>(rhs);
    }

    inline const WGPURequiredLimits* ToAPI(const RequiredLimits* rhs) {
        return reinterpret_cast<const WGPURequiredLimits*>(rhs);
    }
    inline WGPURequiredLimits* ToAPI(RequiredLimits* rhs) {
        return reinterpret_cast<WGPURequiredLimits*>(rhs);
    }
    inline const RequiredLimits* FromAPI(const WGPURequiredLimits* rhs) {
        return reinterpret_cast<const RequiredLimits*>(rhs);
    }
    inline RequiredLimits* FromAPI(WGPURequiredLimits* rhs) {
        return reinterpret_cast<RequiredLimits*>(rhs);
    }
    inline const wgpu::RequiredLimits* ToCppAPI(const RequiredLimits* rhs) {
        return reinterpret_cast<const wgpu::RequiredLimits*>(rhs);
    }
    inline wgpu::RequiredLimits* ToCppAPI(RequiredLimits* rhs) {
        return reinterpret_cast<wgpu::RequiredLimits*>(rhs);
    }
    inline const RequiredLimits* FromCppAPI(const wgpu::RequiredLimits* rhs) {
        return reinterpret_cast<const RequiredLimits*>(rhs);
    }
    inline RequiredLimits* FromCppAPI(wgpu::RequiredLimits* rhs) {
        return reinterpret_cast<RequiredLimits*>(rhs);
    }

    inline const WGPUSharedTextureMemoryAHardwareBufferProperties* ToAPI(const SharedTextureMemoryAHardwareBufferProperties* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryAHardwareBufferProperties*>(rhs);
    }
    inline WGPUSharedTextureMemoryAHardwareBufferProperties* ToAPI(SharedTextureMemoryAHardwareBufferProperties* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryAHardwareBufferProperties*>(rhs);
    }
    inline const SharedTextureMemoryAHardwareBufferProperties* FromAPI(const WGPUSharedTextureMemoryAHardwareBufferProperties* rhs) {
        return reinterpret_cast<const SharedTextureMemoryAHardwareBufferProperties*>(rhs);
    }
    inline SharedTextureMemoryAHardwareBufferProperties* FromAPI(WGPUSharedTextureMemoryAHardwareBufferProperties* rhs) {
        return reinterpret_cast<SharedTextureMemoryAHardwareBufferProperties*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryAHardwareBufferProperties* ToCppAPI(const SharedTextureMemoryAHardwareBufferProperties* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryAHardwareBufferProperties*>(rhs);
    }
    inline wgpu::SharedTextureMemoryAHardwareBufferProperties* ToCppAPI(SharedTextureMemoryAHardwareBufferProperties* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryAHardwareBufferProperties*>(rhs);
    }
    inline const SharedTextureMemoryAHardwareBufferProperties* FromCppAPI(const wgpu::SharedTextureMemoryAHardwareBufferProperties* rhs) {
        return reinterpret_cast<const SharedTextureMemoryAHardwareBufferProperties*>(rhs);
    }
    inline SharedTextureMemoryAHardwareBufferProperties* FromCppAPI(wgpu::SharedTextureMemoryAHardwareBufferProperties* rhs) {
        return reinterpret_cast<SharedTextureMemoryAHardwareBufferProperties*>(rhs);
    }

    inline const WGPUSharedTextureMemoryDmaBufDescriptor* ToAPI(const SharedTextureMemoryDmaBufDescriptor* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryDmaBufDescriptor*>(rhs);
    }
    inline WGPUSharedTextureMemoryDmaBufDescriptor* ToAPI(SharedTextureMemoryDmaBufDescriptor* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryDmaBufDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryDmaBufDescriptor* FromAPI(const WGPUSharedTextureMemoryDmaBufDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryDmaBufDescriptor*>(rhs);
    }
    inline SharedTextureMemoryDmaBufDescriptor* FromAPI(WGPUSharedTextureMemoryDmaBufDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryDmaBufDescriptor*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryDmaBufDescriptor* ToCppAPI(const SharedTextureMemoryDmaBufDescriptor* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryDmaBufDescriptor*>(rhs);
    }
    inline wgpu::SharedTextureMemoryDmaBufDescriptor* ToCppAPI(SharedTextureMemoryDmaBufDescriptor* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryDmaBufDescriptor*>(rhs);
    }
    inline const SharedTextureMemoryDmaBufDescriptor* FromCppAPI(const wgpu::SharedTextureMemoryDmaBufDescriptor* rhs) {
        return reinterpret_cast<const SharedTextureMemoryDmaBufDescriptor*>(rhs);
    }
    inline SharedTextureMemoryDmaBufDescriptor* FromCppAPI(wgpu::SharedTextureMemoryDmaBufDescriptor* rhs) {
        return reinterpret_cast<SharedTextureMemoryDmaBufDescriptor*>(rhs);
    }

    inline const WGPUSharedTextureMemoryProperties* ToAPI(const SharedTextureMemoryProperties* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryProperties*>(rhs);
    }
    inline WGPUSharedTextureMemoryProperties* ToAPI(SharedTextureMemoryProperties* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryProperties*>(rhs);
    }
    inline const SharedTextureMemoryProperties* FromAPI(const WGPUSharedTextureMemoryProperties* rhs) {
        return reinterpret_cast<const SharedTextureMemoryProperties*>(rhs);
    }
    inline SharedTextureMemoryProperties* FromAPI(WGPUSharedTextureMemoryProperties* rhs) {
        return reinterpret_cast<SharedTextureMemoryProperties*>(rhs);
    }
    inline const wgpu::SharedTextureMemoryProperties* ToCppAPI(const SharedTextureMemoryProperties* rhs) {
        return reinterpret_cast<const wgpu::SharedTextureMemoryProperties*>(rhs);
    }
    inline wgpu::SharedTextureMemoryProperties* ToCppAPI(SharedTextureMemoryProperties* rhs) {
        return reinterpret_cast<wgpu::SharedTextureMemoryProperties*>(rhs);
    }
    inline const SharedTextureMemoryProperties* FromCppAPI(const wgpu::SharedTextureMemoryProperties* rhs) {
        return reinterpret_cast<const SharedTextureMemoryProperties*>(rhs);
    }
    inline SharedTextureMemoryProperties* FromCppAPI(wgpu::SharedTextureMemoryProperties* rhs) {
        return reinterpret_cast<SharedTextureMemoryProperties*>(rhs);
    }

    inline const WGPUSupportedLimits* ToAPI(const SupportedLimits* rhs) {
        return reinterpret_cast<const WGPUSupportedLimits*>(rhs);
    }
    inline WGPUSupportedLimits* ToAPI(SupportedLimits* rhs) {
        return reinterpret_cast<WGPUSupportedLimits*>(rhs);
    }
    inline const SupportedLimits* FromAPI(const WGPUSupportedLimits* rhs) {
        return reinterpret_cast<const SupportedLimits*>(rhs);
    }
    inline SupportedLimits* FromAPI(WGPUSupportedLimits* rhs) {
        return reinterpret_cast<SupportedLimits*>(rhs);
    }
    inline const wgpu::SupportedLimits* ToCppAPI(const SupportedLimits* rhs) {
        return reinterpret_cast<const wgpu::SupportedLimits*>(rhs);
    }
    inline wgpu::SupportedLimits* ToCppAPI(SupportedLimits* rhs) {
        return reinterpret_cast<wgpu::SupportedLimits*>(rhs);
    }
    inline const SupportedLimits* FromCppAPI(const wgpu::SupportedLimits* rhs) {
        return reinterpret_cast<const SupportedLimits*>(rhs);
    }
    inline SupportedLimits* FromCppAPI(wgpu::SupportedLimits* rhs) {
        return reinterpret_cast<SupportedLimits*>(rhs);
    }

    inline const WGPUTextureDescriptor* ToAPI(const TextureDescriptor* rhs) {
        return reinterpret_cast<const WGPUTextureDescriptor*>(rhs);
    }
    inline WGPUTextureDescriptor* ToAPI(TextureDescriptor* rhs) {
        return reinterpret_cast<WGPUTextureDescriptor*>(rhs);
    }
    inline const TextureDescriptor* FromAPI(const WGPUTextureDescriptor* rhs) {
        return reinterpret_cast<const TextureDescriptor*>(rhs);
    }
    inline TextureDescriptor* FromAPI(WGPUTextureDescriptor* rhs) {
        return reinterpret_cast<TextureDescriptor*>(rhs);
    }
    inline const wgpu::TextureDescriptor* ToCppAPI(const TextureDescriptor* rhs) {
        return reinterpret_cast<const wgpu::TextureDescriptor*>(rhs);
    }
    inline wgpu::TextureDescriptor* ToCppAPI(TextureDescriptor* rhs) {
        return reinterpret_cast<wgpu::TextureDescriptor*>(rhs);
    }
    inline const TextureDescriptor* FromCppAPI(const wgpu::TextureDescriptor* rhs) {
        return reinterpret_cast<const TextureDescriptor*>(rhs);
    }
    inline TextureDescriptor* FromCppAPI(wgpu::TextureDescriptor* rhs) {
        return reinterpret_cast<TextureDescriptor*>(rhs);
    }

    inline const WGPUVertexBufferLayout* ToAPI(const VertexBufferLayout* rhs) {
        return reinterpret_cast<const WGPUVertexBufferLayout*>(rhs);
    }
    inline WGPUVertexBufferLayout* ToAPI(VertexBufferLayout* rhs) {
        return reinterpret_cast<WGPUVertexBufferLayout*>(rhs);
    }
    inline const VertexBufferLayout* FromAPI(const WGPUVertexBufferLayout* rhs) {
        return reinterpret_cast<const VertexBufferLayout*>(rhs);
    }
    inline VertexBufferLayout* FromAPI(WGPUVertexBufferLayout* rhs) {
        return reinterpret_cast<VertexBufferLayout*>(rhs);
    }
    inline const wgpu::VertexBufferLayout* ToCppAPI(const VertexBufferLayout* rhs) {
        return reinterpret_cast<const wgpu::VertexBufferLayout*>(rhs);
    }
    inline wgpu::VertexBufferLayout* ToCppAPI(VertexBufferLayout* rhs) {
        return reinterpret_cast<wgpu::VertexBufferLayout*>(rhs);
    }
    inline const VertexBufferLayout* FromCppAPI(const wgpu::VertexBufferLayout* rhs) {
        return reinterpret_cast<const VertexBufferLayout*>(rhs);
    }
    inline VertexBufferLayout* FromCppAPI(wgpu::VertexBufferLayout* rhs) {
        return reinterpret_cast<VertexBufferLayout*>(rhs);
    }

    inline const WGPUBindGroupLayoutDescriptor* ToAPI(const BindGroupLayoutDescriptor* rhs) {
        return reinterpret_cast<const WGPUBindGroupLayoutDescriptor*>(rhs);
    }
    inline WGPUBindGroupLayoutDescriptor* ToAPI(BindGroupLayoutDescriptor* rhs) {
        return reinterpret_cast<WGPUBindGroupLayoutDescriptor*>(rhs);
    }
    inline const BindGroupLayoutDescriptor* FromAPI(const WGPUBindGroupLayoutDescriptor* rhs) {
        return reinterpret_cast<const BindGroupLayoutDescriptor*>(rhs);
    }
    inline BindGroupLayoutDescriptor* FromAPI(WGPUBindGroupLayoutDescriptor* rhs) {
        return reinterpret_cast<BindGroupLayoutDescriptor*>(rhs);
    }
    inline const wgpu::BindGroupLayoutDescriptor* ToCppAPI(const BindGroupLayoutDescriptor* rhs) {
        return reinterpret_cast<const wgpu::BindGroupLayoutDescriptor*>(rhs);
    }
    inline wgpu::BindGroupLayoutDescriptor* ToCppAPI(BindGroupLayoutDescriptor* rhs) {
        return reinterpret_cast<wgpu::BindGroupLayoutDescriptor*>(rhs);
    }
    inline const BindGroupLayoutDescriptor* FromCppAPI(const wgpu::BindGroupLayoutDescriptor* rhs) {
        return reinterpret_cast<const BindGroupLayoutDescriptor*>(rhs);
    }
    inline BindGroupLayoutDescriptor* FromCppAPI(wgpu::BindGroupLayoutDescriptor* rhs) {
        return reinterpret_cast<BindGroupLayoutDescriptor*>(rhs);
    }

    inline const WGPUColorTargetState* ToAPI(const ColorTargetState* rhs) {
        return reinterpret_cast<const WGPUColorTargetState*>(rhs);
    }
    inline WGPUColorTargetState* ToAPI(ColorTargetState* rhs) {
        return reinterpret_cast<WGPUColorTargetState*>(rhs);
    }
    inline const ColorTargetState* FromAPI(const WGPUColorTargetState* rhs) {
        return reinterpret_cast<const ColorTargetState*>(rhs);
    }
    inline ColorTargetState* FromAPI(WGPUColorTargetState* rhs) {
        return reinterpret_cast<ColorTargetState*>(rhs);
    }
    inline const wgpu::ColorTargetState* ToCppAPI(const ColorTargetState* rhs) {
        return reinterpret_cast<const wgpu::ColorTargetState*>(rhs);
    }
    inline wgpu::ColorTargetState* ToCppAPI(ColorTargetState* rhs) {
        return reinterpret_cast<wgpu::ColorTargetState*>(rhs);
    }
    inline const ColorTargetState* FromCppAPI(const wgpu::ColorTargetState* rhs) {
        return reinterpret_cast<const ColorTargetState*>(rhs);
    }
    inline ColorTargetState* FromCppAPI(wgpu::ColorTargetState* rhs) {
        return reinterpret_cast<ColorTargetState*>(rhs);
    }

    inline const WGPUComputePipelineDescriptor* ToAPI(const ComputePipelineDescriptor* rhs) {
        return reinterpret_cast<const WGPUComputePipelineDescriptor*>(rhs);
    }
    inline WGPUComputePipelineDescriptor* ToAPI(ComputePipelineDescriptor* rhs) {
        return reinterpret_cast<WGPUComputePipelineDescriptor*>(rhs);
    }
    inline const ComputePipelineDescriptor* FromAPI(const WGPUComputePipelineDescriptor* rhs) {
        return reinterpret_cast<const ComputePipelineDescriptor*>(rhs);
    }
    inline ComputePipelineDescriptor* FromAPI(WGPUComputePipelineDescriptor* rhs) {
        return reinterpret_cast<ComputePipelineDescriptor*>(rhs);
    }
    inline const wgpu::ComputePipelineDescriptor* ToCppAPI(const ComputePipelineDescriptor* rhs) {
        return reinterpret_cast<const wgpu::ComputePipelineDescriptor*>(rhs);
    }
    inline wgpu::ComputePipelineDescriptor* ToCppAPI(ComputePipelineDescriptor* rhs) {
        return reinterpret_cast<wgpu::ComputePipelineDescriptor*>(rhs);
    }
    inline const ComputePipelineDescriptor* FromCppAPI(const wgpu::ComputePipelineDescriptor* rhs) {
        return reinterpret_cast<const ComputePipelineDescriptor*>(rhs);
    }
    inline ComputePipelineDescriptor* FromCppAPI(wgpu::ComputePipelineDescriptor* rhs) {
        return reinterpret_cast<ComputePipelineDescriptor*>(rhs);
    }

    inline const WGPUDeviceDescriptor* ToAPI(const DeviceDescriptor* rhs) {
        return reinterpret_cast<const WGPUDeviceDescriptor*>(rhs);
    }
    inline WGPUDeviceDescriptor* ToAPI(DeviceDescriptor* rhs) {
        return reinterpret_cast<WGPUDeviceDescriptor*>(rhs);
    }
    inline const DeviceDescriptor* FromAPI(const WGPUDeviceDescriptor* rhs) {
        return reinterpret_cast<const DeviceDescriptor*>(rhs);
    }
    inline DeviceDescriptor* FromAPI(WGPUDeviceDescriptor* rhs) {
        return reinterpret_cast<DeviceDescriptor*>(rhs);
    }
    inline const wgpu::DeviceDescriptor* ToCppAPI(const DeviceDescriptor* rhs) {
        return reinterpret_cast<const wgpu::DeviceDescriptor*>(rhs);
    }
    inline wgpu::DeviceDescriptor* ToCppAPI(DeviceDescriptor* rhs) {
        return reinterpret_cast<wgpu::DeviceDescriptor*>(rhs);
    }
    inline const DeviceDescriptor* FromCppAPI(const wgpu::DeviceDescriptor* rhs) {
        return reinterpret_cast<const DeviceDescriptor*>(rhs);
    }
    inline DeviceDescriptor* FromCppAPI(wgpu::DeviceDescriptor* rhs) {
        return reinterpret_cast<DeviceDescriptor*>(rhs);
    }

    inline const WGPURenderPassDescriptor* ToAPI(const RenderPassDescriptor* rhs) {
        return reinterpret_cast<const WGPURenderPassDescriptor*>(rhs);
    }
    inline WGPURenderPassDescriptor* ToAPI(RenderPassDescriptor* rhs) {
        return reinterpret_cast<WGPURenderPassDescriptor*>(rhs);
    }
    inline const RenderPassDescriptor* FromAPI(const WGPURenderPassDescriptor* rhs) {
        return reinterpret_cast<const RenderPassDescriptor*>(rhs);
    }
    inline RenderPassDescriptor* FromAPI(WGPURenderPassDescriptor* rhs) {
        return reinterpret_cast<RenderPassDescriptor*>(rhs);
    }
    inline const wgpu::RenderPassDescriptor* ToCppAPI(const RenderPassDescriptor* rhs) {
        return reinterpret_cast<const wgpu::RenderPassDescriptor*>(rhs);
    }
    inline wgpu::RenderPassDescriptor* ToCppAPI(RenderPassDescriptor* rhs) {
        return reinterpret_cast<wgpu::RenderPassDescriptor*>(rhs);
    }
    inline const RenderPassDescriptor* FromCppAPI(const wgpu::RenderPassDescriptor* rhs) {
        return reinterpret_cast<const RenderPassDescriptor*>(rhs);
    }
    inline RenderPassDescriptor* FromCppAPI(wgpu::RenderPassDescriptor* rhs) {
        return reinterpret_cast<RenderPassDescriptor*>(rhs);
    }

    inline const WGPURenderPassPixelLocalStorage* ToAPI(const RenderPassPixelLocalStorage* rhs) {
        return reinterpret_cast<const WGPURenderPassPixelLocalStorage*>(rhs);
    }
    inline WGPURenderPassPixelLocalStorage* ToAPI(RenderPassPixelLocalStorage* rhs) {
        return reinterpret_cast<WGPURenderPassPixelLocalStorage*>(rhs);
    }
    inline const RenderPassPixelLocalStorage* FromAPI(const WGPURenderPassPixelLocalStorage* rhs) {
        return reinterpret_cast<const RenderPassPixelLocalStorage*>(rhs);
    }
    inline RenderPassPixelLocalStorage* FromAPI(WGPURenderPassPixelLocalStorage* rhs) {
        return reinterpret_cast<RenderPassPixelLocalStorage*>(rhs);
    }
    inline const wgpu::RenderPassPixelLocalStorage* ToCppAPI(const RenderPassPixelLocalStorage* rhs) {
        return reinterpret_cast<const wgpu::RenderPassPixelLocalStorage*>(rhs);
    }
    inline wgpu::RenderPassPixelLocalStorage* ToCppAPI(RenderPassPixelLocalStorage* rhs) {
        return reinterpret_cast<wgpu::RenderPassPixelLocalStorage*>(rhs);
    }
    inline const RenderPassPixelLocalStorage* FromCppAPI(const wgpu::RenderPassPixelLocalStorage* rhs) {
        return reinterpret_cast<const RenderPassPixelLocalStorage*>(rhs);
    }
    inline RenderPassPixelLocalStorage* FromCppAPI(wgpu::RenderPassPixelLocalStorage* rhs) {
        return reinterpret_cast<RenderPassPixelLocalStorage*>(rhs);
    }

    inline const WGPUVertexState* ToAPI(const VertexState* rhs) {
        return reinterpret_cast<const WGPUVertexState*>(rhs);
    }
    inline WGPUVertexState* ToAPI(VertexState* rhs) {
        return reinterpret_cast<WGPUVertexState*>(rhs);
    }
    inline const VertexState* FromAPI(const WGPUVertexState* rhs) {
        return reinterpret_cast<const VertexState*>(rhs);
    }
    inline VertexState* FromAPI(WGPUVertexState* rhs) {
        return reinterpret_cast<VertexState*>(rhs);
    }
    inline const wgpu::VertexState* ToCppAPI(const VertexState* rhs) {
        return reinterpret_cast<const wgpu::VertexState*>(rhs);
    }
    inline wgpu::VertexState* ToCppAPI(VertexState* rhs) {
        return reinterpret_cast<wgpu::VertexState*>(rhs);
    }
    inline const VertexState* FromCppAPI(const wgpu::VertexState* rhs) {
        return reinterpret_cast<const VertexState*>(rhs);
    }
    inline VertexState* FromCppAPI(wgpu::VertexState* rhs) {
        return reinterpret_cast<VertexState*>(rhs);
    }

    inline const WGPUFragmentState* ToAPI(const FragmentState* rhs) {
        return reinterpret_cast<const WGPUFragmentState*>(rhs);
    }
    inline WGPUFragmentState* ToAPI(FragmentState* rhs) {
        return reinterpret_cast<WGPUFragmentState*>(rhs);
    }
    inline const FragmentState* FromAPI(const WGPUFragmentState* rhs) {
        return reinterpret_cast<const FragmentState*>(rhs);
    }
    inline FragmentState* FromAPI(WGPUFragmentState* rhs) {
        return reinterpret_cast<FragmentState*>(rhs);
    }
    inline const wgpu::FragmentState* ToCppAPI(const FragmentState* rhs) {
        return reinterpret_cast<const wgpu::FragmentState*>(rhs);
    }
    inline wgpu::FragmentState* ToCppAPI(FragmentState* rhs) {
        return reinterpret_cast<wgpu::FragmentState*>(rhs);
    }
    inline const FragmentState* FromCppAPI(const wgpu::FragmentState* rhs) {
        return reinterpret_cast<const FragmentState*>(rhs);
    }
    inline FragmentState* FromCppAPI(wgpu::FragmentState* rhs) {
        return reinterpret_cast<FragmentState*>(rhs);
    }

    inline const WGPURenderPipelineDescriptor* ToAPI(const RenderPipelineDescriptor* rhs) {
        return reinterpret_cast<const WGPURenderPipelineDescriptor*>(rhs);
    }
    inline WGPURenderPipelineDescriptor* ToAPI(RenderPipelineDescriptor* rhs) {
        return reinterpret_cast<WGPURenderPipelineDescriptor*>(rhs);
    }
    inline const RenderPipelineDescriptor* FromAPI(const WGPURenderPipelineDescriptor* rhs) {
        return reinterpret_cast<const RenderPipelineDescriptor*>(rhs);
    }
    inline RenderPipelineDescriptor* FromAPI(WGPURenderPipelineDescriptor* rhs) {
        return reinterpret_cast<RenderPipelineDescriptor*>(rhs);
    }
    inline const wgpu::RenderPipelineDescriptor* ToCppAPI(const RenderPipelineDescriptor* rhs) {
        return reinterpret_cast<const wgpu::RenderPipelineDescriptor*>(rhs);
    }
    inline wgpu::RenderPipelineDescriptor* ToCppAPI(RenderPipelineDescriptor* rhs) {
        return reinterpret_cast<wgpu::RenderPipelineDescriptor*>(rhs);
    }
    inline const RenderPipelineDescriptor* FromCppAPI(const wgpu::RenderPipelineDescriptor* rhs) {
        return reinterpret_cast<const RenderPipelineDescriptor*>(rhs);
    }
    inline RenderPipelineDescriptor* FromCppAPI(wgpu::RenderPipelineDescriptor* rhs) {
        return reinterpret_cast<RenderPipelineDescriptor*>(rhs);
    }


    inline const WGPUAdapterImpl* ToAPI(const AdapterBase* rhs) {
        return reinterpret_cast<const WGPUAdapterImpl*>(rhs);
    }

    inline WGPUAdapterImpl* ToAPI(AdapterBase* rhs) {
        return reinterpret_cast<WGPUAdapterImpl*>(rhs);
    }

    inline const AdapterBase* FromAPI(const WGPUAdapterImpl* rhs) {
        return reinterpret_cast<const AdapterBase*>(rhs);
    }

    inline AdapterBase* FromAPI(WGPUAdapterImpl* rhs) {
        return reinterpret_cast<AdapterBase*>(rhs);
    }
    inline const WGPUBindGroupImpl* ToAPI(const BindGroupBase* rhs) {
        return reinterpret_cast<const WGPUBindGroupImpl*>(rhs);
    }

    inline WGPUBindGroupImpl* ToAPI(BindGroupBase* rhs) {
        return reinterpret_cast<WGPUBindGroupImpl*>(rhs);
    }

    inline const BindGroupBase* FromAPI(const WGPUBindGroupImpl* rhs) {
        return reinterpret_cast<const BindGroupBase*>(rhs);
    }

    inline BindGroupBase* FromAPI(WGPUBindGroupImpl* rhs) {
        return reinterpret_cast<BindGroupBase*>(rhs);
    }
    inline const WGPUBindGroupLayoutImpl* ToAPI(const BindGroupLayoutBase* rhs) {
        return reinterpret_cast<const WGPUBindGroupLayoutImpl*>(rhs);
    }

    inline WGPUBindGroupLayoutImpl* ToAPI(BindGroupLayoutBase* rhs) {
        return reinterpret_cast<WGPUBindGroupLayoutImpl*>(rhs);
    }

    inline const BindGroupLayoutBase* FromAPI(const WGPUBindGroupLayoutImpl* rhs) {
        return reinterpret_cast<const BindGroupLayoutBase*>(rhs);
    }

    inline BindGroupLayoutBase* FromAPI(WGPUBindGroupLayoutImpl* rhs) {
        return reinterpret_cast<BindGroupLayoutBase*>(rhs);
    }
    inline const WGPUBufferImpl* ToAPI(const BufferBase* rhs) {
        return reinterpret_cast<const WGPUBufferImpl*>(rhs);
    }

    inline WGPUBufferImpl* ToAPI(BufferBase* rhs) {
        return reinterpret_cast<WGPUBufferImpl*>(rhs);
    }

    inline const BufferBase* FromAPI(const WGPUBufferImpl* rhs) {
        return reinterpret_cast<const BufferBase*>(rhs);
    }

    inline BufferBase* FromAPI(WGPUBufferImpl* rhs) {
        return reinterpret_cast<BufferBase*>(rhs);
    }
    inline const WGPUCommandBufferImpl* ToAPI(const CommandBufferBase* rhs) {
        return reinterpret_cast<const WGPUCommandBufferImpl*>(rhs);
    }

    inline WGPUCommandBufferImpl* ToAPI(CommandBufferBase* rhs) {
        return reinterpret_cast<WGPUCommandBufferImpl*>(rhs);
    }

    inline const CommandBufferBase* FromAPI(const WGPUCommandBufferImpl* rhs) {
        return reinterpret_cast<const CommandBufferBase*>(rhs);
    }

    inline CommandBufferBase* FromAPI(WGPUCommandBufferImpl* rhs) {
        return reinterpret_cast<CommandBufferBase*>(rhs);
    }
    inline const WGPUCommandEncoderImpl* ToAPI(const CommandEncoderBase* rhs) {
        return reinterpret_cast<const WGPUCommandEncoderImpl*>(rhs);
    }

    inline WGPUCommandEncoderImpl* ToAPI(CommandEncoderBase* rhs) {
        return reinterpret_cast<WGPUCommandEncoderImpl*>(rhs);
    }

    inline const CommandEncoderBase* FromAPI(const WGPUCommandEncoderImpl* rhs) {
        return reinterpret_cast<const CommandEncoderBase*>(rhs);
    }

    inline CommandEncoderBase* FromAPI(WGPUCommandEncoderImpl* rhs) {
        return reinterpret_cast<CommandEncoderBase*>(rhs);
    }
    inline const WGPUComputePassEncoderImpl* ToAPI(const ComputePassEncoderBase* rhs) {
        return reinterpret_cast<const WGPUComputePassEncoderImpl*>(rhs);
    }

    inline WGPUComputePassEncoderImpl* ToAPI(ComputePassEncoderBase* rhs) {
        return reinterpret_cast<WGPUComputePassEncoderImpl*>(rhs);
    }

    inline const ComputePassEncoderBase* FromAPI(const WGPUComputePassEncoderImpl* rhs) {
        return reinterpret_cast<const ComputePassEncoderBase*>(rhs);
    }

    inline ComputePassEncoderBase* FromAPI(WGPUComputePassEncoderImpl* rhs) {
        return reinterpret_cast<ComputePassEncoderBase*>(rhs);
    }
    inline const WGPUComputePipelineImpl* ToAPI(const ComputePipelineBase* rhs) {
        return reinterpret_cast<const WGPUComputePipelineImpl*>(rhs);
    }

    inline WGPUComputePipelineImpl* ToAPI(ComputePipelineBase* rhs) {
        return reinterpret_cast<WGPUComputePipelineImpl*>(rhs);
    }

    inline const ComputePipelineBase* FromAPI(const WGPUComputePipelineImpl* rhs) {
        return reinterpret_cast<const ComputePipelineBase*>(rhs);
    }

    inline ComputePipelineBase* FromAPI(WGPUComputePipelineImpl* rhs) {
        return reinterpret_cast<ComputePipelineBase*>(rhs);
    }
    inline const WGPUDeviceImpl* ToAPI(const DeviceBase* rhs) {
        return reinterpret_cast<const WGPUDeviceImpl*>(rhs);
    }

    inline WGPUDeviceImpl* ToAPI(DeviceBase* rhs) {
        return reinterpret_cast<WGPUDeviceImpl*>(rhs);
    }

    inline const DeviceBase* FromAPI(const WGPUDeviceImpl* rhs) {
        return reinterpret_cast<const DeviceBase*>(rhs);
    }

    inline DeviceBase* FromAPI(WGPUDeviceImpl* rhs) {
        return reinterpret_cast<DeviceBase*>(rhs);
    }
    inline const WGPUExternalTextureImpl* ToAPI(const ExternalTextureBase* rhs) {
        return reinterpret_cast<const WGPUExternalTextureImpl*>(rhs);
    }

    inline WGPUExternalTextureImpl* ToAPI(ExternalTextureBase* rhs) {
        return reinterpret_cast<WGPUExternalTextureImpl*>(rhs);
    }

    inline const ExternalTextureBase* FromAPI(const WGPUExternalTextureImpl* rhs) {
        return reinterpret_cast<const ExternalTextureBase*>(rhs);
    }

    inline ExternalTextureBase* FromAPI(WGPUExternalTextureImpl* rhs) {
        return reinterpret_cast<ExternalTextureBase*>(rhs);
    }
    inline const WGPUInstanceImpl* ToAPI(const InstanceBase* rhs) {
        return reinterpret_cast<const WGPUInstanceImpl*>(rhs);
    }

    inline WGPUInstanceImpl* ToAPI(InstanceBase* rhs) {
        return reinterpret_cast<WGPUInstanceImpl*>(rhs);
    }

    inline const InstanceBase* FromAPI(const WGPUInstanceImpl* rhs) {
        return reinterpret_cast<const InstanceBase*>(rhs);
    }

    inline InstanceBase* FromAPI(WGPUInstanceImpl* rhs) {
        return reinterpret_cast<InstanceBase*>(rhs);
    }
    inline const WGPUPipelineLayoutImpl* ToAPI(const PipelineLayoutBase* rhs) {
        return reinterpret_cast<const WGPUPipelineLayoutImpl*>(rhs);
    }

    inline WGPUPipelineLayoutImpl* ToAPI(PipelineLayoutBase* rhs) {
        return reinterpret_cast<WGPUPipelineLayoutImpl*>(rhs);
    }

    inline const PipelineLayoutBase* FromAPI(const WGPUPipelineLayoutImpl* rhs) {
        return reinterpret_cast<const PipelineLayoutBase*>(rhs);
    }

    inline PipelineLayoutBase* FromAPI(WGPUPipelineLayoutImpl* rhs) {
        return reinterpret_cast<PipelineLayoutBase*>(rhs);
    }
    inline const WGPUQuerySetImpl* ToAPI(const QuerySetBase* rhs) {
        return reinterpret_cast<const WGPUQuerySetImpl*>(rhs);
    }

    inline WGPUQuerySetImpl* ToAPI(QuerySetBase* rhs) {
        return reinterpret_cast<WGPUQuerySetImpl*>(rhs);
    }

    inline const QuerySetBase* FromAPI(const WGPUQuerySetImpl* rhs) {
        return reinterpret_cast<const QuerySetBase*>(rhs);
    }

    inline QuerySetBase* FromAPI(WGPUQuerySetImpl* rhs) {
        return reinterpret_cast<QuerySetBase*>(rhs);
    }
    inline const WGPUQueueImpl* ToAPI(const QueueBase* rhs) {
        return reinterpret_cast<const WGPUQueueImpl*>(rhs);
    }

    inline WGPUQueueImpl* ToAPI(QueueBase* rhs) {
        return reinterpret_cast<WGPUQueueImpl*>(rhs);
    }

    inline const QueueBase* FromAPI(const WGPUQueueImpl* rhs) {
        return reinterpret_cast<const QueueBase*>(rhs);
    }

    inline QueueBase* FromAPI(WGPUQueueImpl* rhs) {
        return reinterpret_cast<QueueBase*>(rhs);
    }
    inline const WGPURenderBundleImpl* ToAPI(const RenderBundleBase* rhs) {
        return reinterpret_cast<const WGPURenderBundleImpl*>(rhs);
    }

    inline WGPURenderBundleImpl* ToAPI(RenderBundleBase* rhs) {
        return reinterpret_cast<WGPURenderBundleImpl*>(rhs);
    }

    inline const RenderBundleBase* FromAPI(const WGPURenderBundleImpl* rhs) {
        return reinterpret_cast<const RenderBundleBase*>(rhs);
    }

    inline RenderBundleBase* FromAPI(WGPURenderBundleImpl* rhs) {
        return reinterpret_cast<RenderBundleBase*>(rhs);
    }
    inline const WGPURenderBundleEncoderImpl* ToAPI(const RenderBundleEncoderBase* rhs) {
        return reinterpret_cast<const WGPURenderBundleEncoderImpl*>(rhs);
    }

    inline WGPURenderBundleEncoderImpl* ToAPI(RenderBundleEncoderBase* rhs) {
        return reinterpret_cast<WGPURenderBundleEncoderImpl*>(rhs);
    }

    inline const RenderBundleEncoderBase* FromAPI(const WGPURenderBundleEncoderImpl* rhs) {
        return reinterpret_cast<const RenderBundleEncoderBase*>(rhs);
    }

    inline RenderBundleEncoderBase* FromAPI(WGPURenderBundleEncoderImpl* rhs) {
        return reinterpret_cast<RenderBundleEncoderBase*>(rhs);
    }
    inline const WGPURenderPassEncoderImpl* ToAPI(const RenderPassEncoderBase* rhs) {
        return reinterpret_cast<const WGPURenderPassEncoderImpl*>(rhs);
    }

    inline WGPURenderPassEncoderImpl* ToAPI(RenderPassEncoderBase* rhs) {
        return reinterpret_cast<WGPURenderPassEncoderImpl*>(rhs);
    }

    inline const RenderPassEncoderBase* FromAPI(const WGPURenderPassEncoderImpl* rhs) {
        return reinterpret_cast<const RenderPassEncoderBase*>(rhs);
    }

    inline RenderPassEncoderBase* FromAPI(WGPURenderPassEncoderImpl* rhs) {
        return reinterpret_cast<RenderPassEncoderBase*>(rhs);
    }
    inline const WGPURenderPipelineImpl* ToAPI(const RenderPipelineBase* rhs) {
        return reinterpret_cast<const WGPURenderPipelineImpl*>(rhs);
    }

    inline WGPURenderPipelineImpl* ToAPI(RenderPipelineBase* rhs) {
        return reinterpret_cast<WGPURenderPipelineImpl*>(rhs);
    }

    inline const RenderPipelineBase* FromAPI(const WGPURenderPipelineImpl* rhs) {
        return reinterpret_cast<const RenderPipelineBase*>(rhs);
    }

    inline RenderPipelineBase* FromAPI(WGPURenderPipelineImpl* rhs) {
        return reinterpret_cast<RenderPipelineBase*>(rhs);
    }
    inline const WGPUSamplerImpl* ToAPI(const SamplerBase* rhs) {
        return reinterpret_cast<const WGPUSamplerImpl*>(rhs);
    }

    inline WGPUSamplerImpl* ToAPI(SamplerBase* rhs) {
        return reinterpret_cast<WGPUSamplerImpl*>(rhs);
    }

    inline const SamplerBase* FromAPI(const WGPUSamplerImpl* rhs) {
        return reinterpret_cast<const SamplerBase*>(rhs);
    }

    inline SamplerBase* FromAPI(WGPUSamplerImpl* rhs) {
        return reinterpret_cast<SamplerBase*>(rhs);
    }
    inline const WGPUShaderModuleImpl* ToAPI(const ShaderModuleBase* rhs) {
        return reinterpret_cast<const WGPUShaderModuleImpl*>(rhs);
    }

    inline WGPUShaderModuleImpl* ToAPI(ShaderModuleBase* rhs) {
        return reinterpret_cast<WGPUShaderModuleImpl*>(rhs);
    }

    inline const ShaderModuleBase* FromAPI(const WGPUShaderModuleImpl* rhs) {
        return reinterpret_cast<const ShaderModuleBase*>(rhs);
    }

    inline ShaderModuleBase* FromAPI(WGPUShaderModuleImpl* rhs) {
        return reinterpret_cast<ShaderModuleBase*>(rhs);
    }
    inline const WGPUSharedBufferMemoryImpl* ToAPI(const SharedBufferMemoryBase* rhs) {
        return reinterpret_cast<const WGPUSharedBufferMemoryImpl*>(rhs);
    }

    inline WGPUSharedBufferMemoryImpl* ToAPI(SharedBufferMemoryBase* rhs) {
        return reinterpret_cast<WGPUSharedBufferMemoryImpl*>(rhs);
    }

    inline const SharedBufferMemoryBase* FromAPI(const WGPUSharedBufferMemoryImpl* rhs) {
        return reinterpret_cast<const SharedBufferMemoryBase*>(rhs);
    }

    inline SharedBufferMemoryBase* FromAPI(WGPUSharedBufferMemoryImpl* rhs) {
        return reinterpret_cast<SharedBufferMemoryBase*>(rhs);
    }
    inline const WGPUSharedFenceImpl* ToAPI(const SharedFenceBase* rhs) {
        return reinterpret_cast<const WGPUSharedFenceImpl*>(rhs);
    }

    inline WGPUSharedFenceImpl* ToAPI(SharedFenceBase* rhs) {
        return reinterpret_cast<WGPUSharedFenceImpl*>(rhs);
    }

    inline const SharedFenceBase* FromAPI(const WGPUSharedFenceImpl* rhs) {
        return reinterpret_cast<const SharedFenceBase*>(rhs);
    }

    inline SharedFenceBase* FromAPI(WGPUSharedFenceImpl* rhs) {
        return reinterpret_cast<SharedFenceBase*>(rhs);
    }
    inline const WGPUSharedTextureMemoryImpl* ToAPI(const SharedTextureMemoryBase* rhs) {
        return reinterpret_cast<const WGPUSharedTextureMemoryImpl*>(rhs);
    }

    inline WGPUSharedTextureMemoryImpl* ToAPI(SharedTextureMemoryBase* rhs) {
        return reinterpret_cast<WGPUSharedTextureMemoryImpl*>(rhs);
    }

    inline const SharedTextureMemoryBase* FromAPI(const WGPUSharedTextureMemoryImpl* rhs) {
        return reinterpret_cast<const SharedTextureMemoryBase*>(rhs);
    }

    inline SharedTextureMemoryBase* FromAPI(WGPUSharedTextureMemoryImpl* rhs) {
        return reinterpret_cast<SharedTextureMemoryBase*>(rhs);
    }
    inline const WGPUSurfaceImpl* ToAPI(const SurfaceBase* rhs) {
        return reinterpret_cast<const WGPUSurfaceImpl*>(rhs);
    }

    inline WGPUSurfaceImpl* ToAPI(SurfaceBase* rhs) {
        return reinterpret_cast<WGPUSurfaceImpl*>(rhs);
    }

    inline const SurfaceBase* FromAPI(const WGPUSurfaceImpl* rhs) {
        return reinterpret_cast<const SurfaceBase*>(rhs);
    }

    inline SurfaceBase* FromAPI(WGPUSurfaceImpl* rhs) {
        return reinterpret_cast<SurfaceBase*>(rhs);
    }
    inline const WGPUSwapChainImpl* ToAPI(const SwapChainBase* rhs) {
        return reinterpret_cast<const WGPUSwapChainImpl*>(rhs);
    }

    inline WGPUSwapChainImpl* ToAPI(SwapChainBase* rhs) {
        return reinterpret_cast<WGPUSwapChainImpl*>(rhs);
    }

    inline const SwapChainBase* FromAPI(const WGPUSwapChainImpl* rhs) {
        return reinterpret_cast<const SwapChainBase*>(rhs);
    }

    inline SwapChainBase* FromAPI(WGPUSwapChainImpl* rhs) {
        return reinterpret_cast<SwapChainBase*>(rhs);
    }
    inline const WGPUTextureImpl* ToAPI(const TextureBase* rhs) {
        return reinterpret_cast<const WGPUTextureImpl*>(rhs);
    }

    inline WGPUTextureImpl* ToAPI(TextureBase* rhs) {
        return reinterpret_cast<WGPUTextureImpl*>(rhs);
    }

    inline const TextureBase* FromAPI(const WGPUTextureImpl* rhs) {
        return reinterpret_cast<const TextureBase*>(rhs);
    }

    inline TextureBase* FromAPI(WGPUTextureImpl* rhs) {
        return reinterpret_cast<TextureBase*>(rhs);
    }
    inline const WGPUTextureViewImpl* ToAPI(const TextureViewBase* rhs) {
        return reinterpret_cast<const WGPUTextureViewImpl*>(rhs);
    }

    inline WGPUTextureViewImpl* ToAPI(TextureViewBase* rhs) {
        return reinterpret_cast<WGPUTextureViewImpl*>(rhs);
    }

    inline const TextureViewBase* FromAPI(const WGPUTextureViewImpl* rhs) {
        return reinterpret_cast<const TextureViewBase*>(rhs);
    }

    inline TextureViewBase* FromAPI(WGPUTextureViewImpl* rhs) {
        return reinterpret_cast<TextureViewBase*>(rhs);
    }

    template <typename T>
    struct EnumCount;

    template<>
    struct EnumCount<wgpu::AddressMode> {
        static constexpr uint32_t value = 4;
    };
    template<>
    struct EnumCount<wgpu::BackendType> {
        static constexpr uint32_t value = 9;
    };
    template<>
    struct EnumCount<wgpu::BlendFactor> {
        static constexpr uint32_t value = 18;
    };
    template<>
    struct EnumCount<wgpu::BlendOperation> {
        static constexpr uint32_t value = 6;
    };
    template<>
    struct EnumCount<wgpu::BufferBindingType> {
        static constexpr uint32_t value = 4;
    };
    template<>
    struct EnumCount<wgpu::BufferMapAsyncStatus> {
        static constexpr uint32_t value = 10;
    };
    template<>
    struct EnumCount<wgpu::CompareFunction> {
        static constexpr uint32_t value = 9;
    };
    template<>
    struct EnumCount<wgpu::CompilationInfoRequestStatus> {
        static constexpr uint32_t value = 5;
    };
    template<>
    struct EnumCount<wgpu::CompositeAlphaMode> {
        static constexpr uint32_t value = 5;
    };
    template<>
    struct EnumCount<wgpu::CreatePipelineAsyncStatus> {
        static constexpr uint32_t value = 7;
    };
    template<>
    struct EnumCount<wgpu::CullMode> {
        static constexpr uint32_t value = 4;
    };
    template<>
    struct EnumCount<wgpu::ErrorType> {
        static constexpr uint32_t value = 6;
    };
    template<>
    struct EnumCount<wgpu::ExternalTextureRotation> {
        static constexpr uint32_t value = 4;
    };
    template<>
    struct EnumCount<wgpu::FilterMode> {
        static constexpr uint32_t value = 3;
    };
    template<>
    struct EnumCount<wgpu::FrontFace> {
        static constexpr uint32_t value = 3;
    };
    template<>
    struct EnumCount<wgpu::IndexFormat> {
        static constexpr uint32_t value = 3;
    };
    template<>
    struct EnumCount<wgpu::LoadOp> {
        static constexpr uint32_t value = 4;
    };
    template<>
    struct EnumCount<wgpu::MipmapFilterMode> {
        static constexpr uint32_t value = 3;
    };
    template<>
    struct EnumCount<wgpu::PopErrorScopeStatus> {
        static constexpr uint32_t value = 2;
    };
    template<>
    struct EnumCount<wgpu::PowerPreference> {
        static constexpr uint32_t value = 3;
    };
    template<>
    struct EnumCount<wgpu::PresentMode> {
        static constexpr uint32_t value = 4;
    };
    template<>
    struct EnumCount<wgpu::PrimitiveTopology> {
        static constexpr uint32_t value = 6;
    };
    template<>
    struct EnumCount<wgpu::QueueWorkDoneStatus> {
        static constexpr uint32_t value = 5;
    };
    template<>
    struct EnumCount<wgpu::RequestAdapterStatus> {
        static constexpr uint32_t value = 5;
    };
    template<>
    struct EnumCount<wgpu::RequestDeviceStatus> {
        static constexpr uint32_t value = 4;
    };
    template<>
    struct EnumCount<wgpu::SamplerBindingType> {
        static constexpr uint32_t value = 4;
    };
    template<>
    struct EnumCount<wgpu::SharedFenceType> {
        static constexpr uint32_t value = 6;
    };
    template<>
    struct EnumCount<wgpu::Status> {
        static constexpr uint32_t value = 2;
    };
    template<>
    struct EnumCount<wgpu::StencilOperation> {
        static constexpr uint32_t value = 9;
    };
    template<>
    struct EnumCount<wgpu::StorageTextureAccess> {
        static constexpr uint32_t value = 4;
    };
    template<>
    struct EnumCount<wgpu::StoreOp> {
        static constexpr uint32_t value = 3;
    };
    template<>
    struct EnumCount<wgpu::SurfaceGetCurrentTextureStatus> {
        static constexpr uint32_t value = 6;
    };
    template<>
    struct EnumCount<wgpu::TextureAspect> {
        static constexpr uint32_t value = 7;
    };
    template<>
    struct EnumCount<wgpu::TextureDimension> {
        static constexpr uint32_t value = 4;
    };
    template<>
    struct EnumCount<wgpu::TextureFormat> {
        static constexpr uint32_t value = 109;
    };
    template<>
    struct EnumCount<wgpu::TextureSampleType> {
        static constexpr uint32_t value = 6;
    };
    template<>
    struct EnumCount<wgpu::TextureViewDimension> {
        static constexpr uint32_t value = 7;
    };
    template<>
    struct EnumCount<wgpu::VertexFormat> {
        static constexpr uint32_t value = 32;
    };
    template<>
    struct EnumCount<wgpu::VertexStepMode> {
        static constexpr uint32_t value = 4;
    };
    template<>
    struct EnumCount<wgpu::WaitStatus> {
        static constexpr uint32_t value = 6;
    };

    inline WGPUWGSLFeatureName ToAPI(wgpu::WGSLFeatureName rhs) {
        return static_cast<WGPUWGSLFeatureName>(rhs);
    }

    inline wgpu::WGSLFeatureName FromAPI(WGPUWGSLFeatureName rhs) {
        return static_cast<wgpu::WGSLFeatureName>(rhs);
    }
    inline WGPUAdapterType ToAPI(wgpu::AdapterType rhs) {
        return static_cast<WGPUAdapterType>(rhs);
    }

    inline wgpu::AdapterType FromAPI(WGPUAdapterType rhs) {
        return static_cast<wgpu::AdapterType>(rhs);
    }
    inline WGPUAddressMode ToAPI(wgpu::AddressMode rhs) {
        return static_cast<WGPUAddressMode>(rhs);
    }

    inline wgpu::AddressMode FromAPI(WGPUAddressMode rhs) {
        return static_cast<wgpu::AddressMode>(rhs);
    }
    inline WGPUAlphaMode ToAPI(wgpu::AlphaMode rhs) {
        return static_cast<WGPUAlphaMode>(rhs);
    }

    inline wgpu::AlphaMode FromAPI(WGPUAlphaMode rhs) {
        return static_cast<wgpu::AlphaMode>(rhs);
    }
    inline WGPUBackendType ToAPI(wgpu::BackendType rhs) {
        return static_cast<WGPUBackendType>(rhs);
    }

    inline wgpu::BackendType FromAPI(WGPUBackendType rhs) {
        return static_cast<wgpu::BackendType>(rhs);
    }
    inline WGPUBlendFactor ToAPI(wgpu::BlendFactor rhs) {
        return static_cast<WGPUBlendFactor>(rhs);
    }

    inline wgpu::BlendFactor FromAPI(WGPUBlendFactor rhs) {
        return static_cast<wgpu::BlendFactor>(rhs);
    }
    inline WGPUBlendOperation ToAPI(wgpu::BlendOperation rhs) {
        return static_cast<WGPUBlendOperation>(rhs);
    }

    inline wgpu::BlendOperation FromAPI(WGPUBlendOperation rhs) {
        return static_cast<wgpu::BlendOperation>(rhs);
    }
    inline WGPUBufferBindingType ToAPI(wgpu::BufferBindingType rhs) {
        return static_cast<WGPUBufferBindingType>(rhs);
    }

    inline wgpu::BufferBindingType FromAPI(WGPUBufferBindingType rhs) {
        return static_cast<wgpu::BufferBindingType>(rhs);
    }
    inline WGPUBufferMapAsyncStatus ToAPI(wgpu::BufferMapAsyncStatus rhs) {
        return static_cast<WGPUBufferMapAsyncStatus>(rhs);
    }

    inline wgpu::BufferMapAsyncStatus FromAPI(WGPUBufferMapAsyncStatus rhs) {
        return static_cast<wgpu::BufferMapAsyncStatus>(rhs);
    }
    inline WGPUBufferMapState ToAPI(wgpu::BufferMapState rhs) {
        return static_cast<WGPUBufferMapState>(rhs);
    }

    inline wgpu::BufferMapState FromAPI(WGPUBufferMapState rhs) {
        return static_cast<wgpu::BufferMapState>(rhs);
    }
    inline WGPUCallbackMode ToAPI(wgpu::CallbackMode rhs) {
        return static_cast<WGPUCallbackMode>(rhs);
    }

    inline wgpu::CallbackMode FromAPI(WGPUCallbackMode rhs) {
        return static_cast<wgpu::CallbackMode>(rhs);
    }
    inline WGPUCompareFunction ToAPI(wgpu::CompareFunction rhs) {
        return static_cast<WGPUCompareFunction>(rhs);
    }

    inline wgpu::CompareFunction FromAPI(WGPUCompareFunction rhs) {
        return static_cast<wgpu::CompareFunction>(rhs);
    }
    inline WGPUCompilationInfoRequestStatus ToAPI(wgpu::CompilationInfoRequestStatus rhs) {
        return static_cast<WGPUCompilationInfoRequestStatus>(rhs);
    }

    inline wgpu::CompilationInfoRequestStatus FromAPI(WGPUCompilationInfoRequestStatus rhs) {
        return static_cast<wgpu::CompilationInfoRequestStatus>(rhs);
    }
    inline WGPUCompilationMessageType ToAPI(wgpu::CompilationMessageType rhs) {
        return static_cast<WGPUCompilationMessageType>(rhs);
    }

    inline wgpu::CompilationMessageType FromAPI(WGPUCompilationMessageType rhs) {
        return static_cast<wgpu::CompilationMessageType>(rhs);
    }
    inline WGPUCompositeAlphaMode ToAPI(wgpu::CompositeAlphaMode rhs) {
        return static_cast<WGPUCompositeAlphaMode>(rhs);
    }

    inline wgpu::CompositeAlphaMode FromAPI(WGPUCompositeAlphaMode rhs) {
        return static_cast<wgpu::CompositeAlphaMode>(rhs);
    }
    inline WGPUCreatePipelineAsyncStatus ToAPI(wgpu::CreatePipelineAsyncStatus rhs) {
        return static_cast<WGPUCreatePipelineAsyncStatus>(rhs);
    }

    inline wgpu::CreatePipelineAsyncStatus FromAPI(WGPUCreatePipelineAsyncStatus rhs) {
        return static_cast<wgpu::CreatePipelineAsyncStatus>(rhs);
    }
    inline WGPUCullMode ToAPI(wgpu::CullMode rhs) {
        return static_cast<WGPUCullMode>(rhs);
    }

    inline wgpu::CullMode FromAPI(WGPUCullMode rhs) {
        return static_cast<wgpu::CullMode>(rhs);
    }
    inline WGPUDeviceLostReason ToAPI(wgpu::DeviceLostReason rhs) {
        return static_cast<WGPUDeviceLostReason>(rhs);
    }

    inline wgpu::DeviceLostReason FromAPI(WGPUDeviceLostReason rhs) {
        return static_cast<wgpu::DeviceLostReason>(rhs);
    }
    inline WGPUErrorFilter ToAPI(wgpu::ErrorFilter rhs) {
        return static_cast<WGPUErrorFilter>(rhs);
    }

    inline wgpu::ErrorFilter FromAPI(WGPUErrorFilter rhs) {
        return static_cast<wgpu::ErrorFilter>(rhs);
    }
    inline WGPUErrorType ToAPI(wgpu::ErrorType rhs) {
        return static_cast<WGPUErrorType>(rhs);
    }

    inline wgpu::ErrorType FromAPI(WGPUErrorType rhs) {
        return static_cast<wgpu::ErrorType>(rhs);
    }
    inline WGPUExternalTextureRotation ToAPI(wgpu::ExternalTextureRotation rhs) {
        return static_cast<WGPUExternalTextureRotation>(rhs);
    }

    inline wgpu::ExternalTextureRotation FromAPI(WGPUExternalTextureRotation rhs) {
        return static_cast<wgpu::ExternalTextureRotation>(rhs);
    }
    inline WGPUFeatureName ToAPI(wgpu::FeatureName rhs) {
        return static_cast<WGPUFeatureName>(rhs);
    }

    inline wgpu::FeatureName FromAPI(WGPUFeatureName rhs) {
        return static_cast<wgpu::FeatureName>(rhs);
    }
    inline WGPUFilterMode ToAPI(wgpu::FilterMode rhs) {
        return static_cast<WGPUFilterMode>(rhs);
    }

    inline wgpu::FilterMode FromAPI(WGPUFilterMode rhs) {
        return static_cast<wgpu::FilterMode>(rhs);
    }
    inline WGPUFrontFace ToAPI(wgpu::FrontFace rhs) {
        return static_cast<WGPUFrontFace>(rhs);
    }

    inline wgpu::FrontFace FromAPI(WGPUFrontFace rhs) {
        return static_cast<wgpu::FrontFace>(rhs);
    }
    inline WGPUIndexFormat ToAPI(wgpu::IndexFormat rhs) {
        return static_cast<WGPUIndexFormat>(rhs);
    }

    inline wgpu::IndexFormat FromAPI(WGPUIndexFormat rhs) {
        return static_cast<wgpu::IndexFormat>(rhs);
    }
    inline WGPULoadOp ToAPI(wgpu::LoadOp rhs) {
        return static_cast<WGPULoadOp>(rhs);
    }

    inline wgpu::LoadOp FromAPI(WGPULoadOp rhs) {
        return static_cast<wgpu::LoadOp>(rhs);
    }
    inline WGPULoggingType ToAPI(wgpu::LoggingType rhs) {
        return static_cast<WGPULoggingType>(rhs);
    }

    inline wgpu::LoggingType FromAPI(WGPULoggingType rhs) {
        return static_cast<wgpu::LoggingType>(rhs);
    }
    inline WGPUMipmapFilterMode ToAPI(wgpu::MipmapFilterMode rhs) {
        return static_cast<WGPUMipmapFilterMode>(rhs);
    }

    inline wgpu::MipmapFilterMode FromAPI(WGPUMipmapFilterMode rhs) {
        return static_cast<wgpu::MipmapFilterMode>(rhs);
    }
    inline WGPUPopErrorScopeStatus ToAPI(wgpu::PopErrorScopeStatus rhs) {
        return static_cast<WGPUPopErrorScopeStatus>(rhs);
    }

    inline wgpu::PopErrorScopeStatus FromAPI(WGPUPopErrorScopeStatus rhs) {
        return static_cast<wgpu::PopErrorScopeStatus>(rhs);
    }
    inline WGPUPowerPreference ToAPI(wgpu::PowerPreference rhs) {
        return static_cast<WGPUPowerPreference>(rhs);
    }

    inline wgpu::PowerPreference FromAPI(WGPUPowerPreference rhs) {
        return static_cast<wgpu::PowerPreference>(rhs);
    }
    inline WGPUPresentMode ToAPI(wgpu::PresentMode rhs) {
        return static_cast<WGPUPresentMode>(rhs);
    }

    inline wgpu::PresentMode FromAPI(WGPUPresentMode rhs) {
        return static_cast<wgpu::PresentMode>(rhs);
    }
    inline WGPUPrimitiveTopology ToAPI(wgpu::PrimitiveTopology rhs) {
        return static_cast<WGPUPrimitiveTopology>(rhs);
    }

    inline wgpu::PrimitiveTopology FromAPI(WGPUPrimitiveTopology rhs) {
        return static_cast<wgpu::PrimitiveTopology>(rhs);
    }
    inline WGPUQueryType ToAPI(wgpu::QueryType rhs) {
        return static_cast<WGPUQueryType>(rhs);
    }

    inline wgpu::QueryType FromAPI(WGPUQueryType rhs) {
        return static_cast<wgpu::QueryType>(rhs);
    }
    inline WGPUQueueWorkDoneStatus ToAPI(wgpu::QueueWorkDoneStatus rhs) {
        return static_cast<WGPUQueueWorkDoneStatus>(rhs);
    }

    inline wgpu::QueueWorkDoneStatus FromAPI(WGPUQueueWorkDoneStatus rhs) {
        return static_cast<wgpu::QueueWorkDoneStatus>(rhs);
    }
    inline WGPURequestAdapterStatus ToAPI(wgpu::RequestAdapterStatus rhs) {
        return static_cast<WGPURequestAdapterStatus>(rhs);
    }

    inline wgpu::RequestAdapterStatus FromAPI(WGPURequestAdapterStatus rhs) {
        return static_cast<wgpu::RequestAdapterStatus>(rhs);
    }
    inline WGPURequestDeviceStatus ToAPI(wgpu::RequestDeviceStatus rhs) {
        return static_cast<WGPURequestDeviceStatus>(rhs);
    }

    inline wgpu::RequestDeviceStatus FromAPI(WGPURequestDeviceStatus rhs) {
        return static_cast<wgpu::RequestDeviceStatus>(rhs);
    }
    inline WGPUSType ToAPI(wgpu::SType rhs) {
        return static_cast<WGPUSType>(rhs);
    }

    inline wgpu::SType FromAPI(WGPUSType rhs) {
        return static_cast<wgpu::SType>(rhs);
    }
    inline WGPUSamplerBindingType ToAPI(wgpu::SamplerBindingType rhs) {
        return static_cast<WGPUSamplerBindingType>(rhs);
    }

    inline wgpu::SamplerBindingType FromAPI(WGPUSamplerBindingType rhs) {
        return static_cast<wgpu::SamplerBindingType>(rhs);
    }
    inline WGPUSharedFenceType ToAPI(wgpu::SharedFenceType rhs) {
        return static_cast<WGPUSharedFenceType>(rhs);
    }

    inline wgpu::SharedFenceType FromAPI(WGPUSharedFenceType rhs) {
        return static_cast<wgpu::SharedFenceType>(rhs);
    }
    inline WGPUStatus ToAPI(wgpu::Status rhs) {
        return static_cast<WGPUStatus>(rhs);
    }

    inline wgpu::Status FromAPI(WGPUStatus rhs) {
        return static_cast<wgpu::Status>(rhs);
    }
    inline WGPUStencilOperation ToAPI(wgpu::StencilOperation rhs) {
        return static_cast<WGPUStencilOperation>(rhs);
    }

    inline wgpu::StencilOperation FromAPI(WGPUStencilOperation rhs) {
        return static_cast<wgpu::StencilOperation>(rhs);
    }
    inline WGPUStorageTextureAccess ToAPI(wgpu::StorageTextureAccess rhs) {
        return static_cast<WGPUStorageTextureAccess>(rhs);
    }

    inline wgpu::StorageTextureAccess FromAPI(WGPUStorageTextureAccess rhs) {
        return static_cast<wgpu::StorageTextureAccess>(rhs);
    }
    inline WGPUStoreOp ToAPI(wgpu::StoreOp rhs) {
        return static_cast<WGPUStoreOp>(rhs);
    }

    inline wgpu::StoreOp FromAPI(WGPUStoreOp rhs) {
        return static_cast<wgpu::StoreOp>(rhs);
    }
    inline WGPUSurfaceGetCurrentTextureStatus ToAPI(wgpu::SurfaceGetCurrentTextureStatus rhs) {
        return static_cast<WGPUSurfaceGetCurrentTextureStatus>(rhs);
    }

    inline wgpu::SurfaceGetCurrentTextureStatus FromAPI(WGPUSurfaceGetCurrentTextureStatus rhs) {
        return static_cast<wgpu::SurfaceGetCurrentTextureStatus>(rhs);
    }
    inline WGPUTextureAspect ToAPI(wgpu::TextureAspect rhs) {
        return static_cast<WGPUTextureAspect>(rhs);
    }

    inline wgpu::TextureAspect FromAPI(WGPUTextureAspect rhs) {
        return static_cast<wgpu::TextureAspect>(rhs);
    }
    inline WGPUTextureDimension ToAPI(wgpu::TextureDimension rhs) {
        return static_cast<WGPUTextureDimension>(rhs);
    }

    inline wgpu::TextureDimension FromAPI(WGPUTextureDimension rhs) {
        return static_cast<wgpu::TextureDimension>(rhs);
    }
    inline WGPUTextureFormat ToAPI(wgpu::TextureFormat rhs) {
        return static_cast<WGPUTextureFormat>(rhs);
    }

    inline wgpu::TextureFormat FromAPI(WGPUTextureFormat rhs) {
        return static_cast<wgpu::TextureFormat>(rhs);
    }
    inline WGPUTextureSampleType ToAPI(wgpu::TextureSampleType rhs) {
        return static_cast<WGPUTextureSampleType>(rhs);
    }

    inline wgpu::TextureSampleType FromAPI(WGPUTextureSampleType rhs) {
        return static_cast<wgpu::TextureSampleType>(rhs);
    }
    inline WGPUTextureViewDimension ToAPI(wgpu::TextureViewDimension rhs) {
        return static_cast<WGPUTextureViewDimension>(rhs);
    }

    inline wgpu::TextureViewDimension FromAPI(WGPUTextureViewDimension rhs) {
        return static_cast<wgpu::TextureViewDimension>(rhs);
    }
    inline WGPUVertexFormat ToAPI(wgpu::VertexFormat rhs) {
        return static_cast<WGPUVertexFormat>(rhs);
    }

    inline wgpu::VertexFormat FromAPI(WGPUVertexFormat rhs) {
        return static_cast<wgpu::VertexFormat>(rhs);
    }
    inline WGPUVertexStepMode ToAPI(wgpu::VertexStepMode rhs) {
        return static_cast<WGPUVertexStepMode>(rhs);
    }

    inline wgpu::VertexStepMode FromAPI(WGPUVertexStepMode rhs) {
        return static_cast<wgpu::VertexStepMode>(rhs);
    }
    inline WGPUWaitStatus ToAPI(wgpu::WaitStatus rhs) {
        return static_cast<WGPUWaitStatus>(rhs);
    }

    inline wgpu::WaitStatus FromAPI(WGPUWaitStatus rhs) {
        return static_cast<wgpu::WaitStatus>(rhs);
    }
    inline WGPUBufferUsage ToAPI(wgpu::BufferUsage rhs) {
        return static_cast<WGPUBufferUsage>(rhs);
    }

    inline wgpu::BufferUsage FromAPI(WGPUBufferUsage rhs) {
        return static_cast<wgpu::BufferUsage>(rhs);
    }
    inline WGPUColorWriteMask ToAPI(wgpu::ColorWriteMask rhs) {
        return static_cast<WGPUColorWriteMask>(rhs);
    }

    inline wgpu::ColorWriteMask FromAPI(WGPUColorWriteMask rhs) {
        return static_cast<wgpu::ColorWriteMask>(rhs);
    }
    inline WGPUHeapProperty ToAPI(wgpu::HeapProperty rhs) {
        return static_cast<WGPUHeapProperty>(rhs);
    }

    inline wgpu::HeapProperty FromAPI(WGPUHeapProperty rhs) {
        return static_cast<wgpu::HeapProperty>(rhs);
    }
    inline WGPUMapMode ToAPI(wgpu::MapMode rhs) {
        return static_cast<WGPUMapMode>(rhs);
    }

    inline wgpu::MapMode FromAPI(WGPUMapMode rhs) {
        return static_cast<wgpu::MapMode>(rhs);
    }
    inline WGPUShaderStage ToAPI(wgpu::ShaderStage rhs) {
        return static_cast<WGPUShaderStage>(rhs);
    }

    inline wgpu::ShaderStage FromAPI(WGPUShaderStage rhs) {
        return static_cast<wgpu::ShaderStage>(rhs);
    }
    inline WGPUTextureUsage ToAPI(wgpu::TextureUsage rhs) {
        return static_cast<WGPUTextureUsage>(rhs);
    }

    inline wgpu::TextureUsage FromAPI(WGPUTextureUsage rhs) {
        return static_cast<wgpu::TextureUsage>(rhs);
    }
}  // namespace dawn::native

#endif  // DAWNNATIVE_DAWN_PLATFORM_AUTOGEN_H_
